title,author,publisher,isbn.2,publication_date,summary.2,book_cover-src
使用 Python 搜刮網路資料的 12堂實習課,何敏煌、葉柏漢、顏凰竹,博碩文化,9789864345212,2020/9/30,"網路爬蟲是AI範疇中，

取得資料與儲存的一項重要技能，

而Python是爬蟲過程中相當好用的工具



全書以簡單的Python程式為主軸，讓您可以輕鬆學會如何利用Python的模組擷取公開的網站資料、網頁內容，並建立自己的自動化爬蟲程式，增進您在網路上搜刮資料的能力與效率，是已具有Python基礎的學習者最佳的爬蟲入門工具書。

在本書中我們將學會使用以下的Python開發環境、模組及框架：

 

 


	
		
			Thonny
			Jupyter Notebook
			requests
		
		
			json
			csv
			re
		
		
			xlrd
			BeautifulSoup
			Selenium
		
		
			sqlite3
			mysql
			pymongo
		
		
			pyinstaller
			Scrapy
			pyautogui
		
	


 



並學習如何擷取以下的幾種網站：

 

 

 

 

 


	
		
			☑大學網站的焦點新聞頁面
			☑政府公開資訊網站
		
		
			☑即時新聞網站標題、內容、圖片
			☑汽車網站之車款資訊及二手車在庫資訊
		
		
			☑銀行網站之匯率資料擷取
			☑中央氣象局之氣溫觀測資訊
		
		
			☑Ptt八卦版年齡宣告按鈕及Ptt討論區貼文擷取
			☑網路書店暢銷書排行榜
		
		
			☑股市網站財經新聞
			☑線上購物網站產品資訊
		
		
			☑名言佳句範例網站
			☑台灣證券交易所股票資訊
		
		
			☑Dcard梗圖下載
			☑台灣運彩官網資訊
		
		
			☑Mobile01討論區貼文
			 
		
	


 



★本書特色★

✪了解網站、網頁、瀏覽器間的關係，認識爬蟲程式

✪了解網路上格式HTML/CSV/JSON/XLSX

✪使用requests模組取得網路上的資料

✪擷取及解析JSON及CSV格式資料檔案

✪利用Regular Expression及BeautifulSoup模組剖析網頁資料

✪活用Chrome開發人員工具找出網頁中特定資料的CSS選擇器內容

✪使用Selenium自動化工具擷取動態網頁

✪把擷取的資料儲存到MySQL及MongoDB資料庫

✪利用排程器做到自動化資料擷取及通知的功能

✪透過Scrapy框架建立爬蟲程式，大量搜刮資料

 

 

 



    

    作者簡介
    
      何敏煌

國立交通大學資訊科學博士，現任職於國立高雄科技大學博雅教育中心，平時除了研究KVM虛擬雲端容錯與分散式系統相關技術之外，也利用閒暇之餘致力於推廣資訊科技、Maker自學課程、與程式設計教育。個人網站：http://drho.club。

    

    目錄大綱
    
      第1堂 認識網站與網路爬蟲原理

1-1 什麼是爬蟲程式

1-2 瀏覽器與網頁伺服器

1-3 從網站下載資料的概念與原理

1-4 本書程式執行環境的建立

1-5 習題



第2堂 快速了解網路資料格式

2-1 HTML/CSS

2-2 CSV

2-3 JSON

2-4 XLS/XLSX

2-5 習題



第3堂 擷取網頁資料基礎

3-1 requests模組介紹與使用

3-2 資料檔案存取

3-3 網路公開資訊CSV格式讀取實例

3-4 網路公開資訊JSON格式讀取實例

3-5 習題



第4堂 HTML網頁剖析基礎

4-1 使用Regular Expression剖析網頁

4-2 使用BeautifulSoup剖析網頁

4-3 新聞網站之擷取與儲存

4-4 網頁圖形檔之擷取與儲存

4-5 習題



第5堂 HTML網頁剖析實務

5-1 Jupyter Notebook安裝與使用

5-2 Chrome開發人員工具

5-3 活用表單查詢存取資料

5-4 新聞網站內容之擷取與儲存

5-5 習題



第6堂 CSS選擇器基礎與活用

6-1 CSS 選擇器介紹

6-2 Selenium安裝與使用

6-3 動態網頁資料擷取

6-4 表單登入網頁擷取

6-5 習題



第7堂 MySQL資料庫儲存

7-1 資料庫與SQL

7-2 SQLite資料庫簡介與操作

7-3 MySQL資料庫系統安裝

7-4 MySQL資料庫操作實例

7-5 習題



第8堂 MongoDB資料庫操作

8-1 MongoDB安裝與操作

8-2 使用Python儲存資料

8-3 使用Python讀取資料

8-4 MongoDB資料庫應用實例

8-5 習題



第9堂 自動化資料擷取

9-1 自動化資料擷取程式

9-2 電子郵件通知實作

9-3 建立可執行檔

9-4 作業系統排程設定

9-5 習題



第10堂 Scrapy初階

10-1 Scrapy簡介與安裝

10-2 Scrapy Shell測試與練習

10-3 Scrapy專案檔案的編輯與執行

10-4 爬取網頁內容並儲存到資料庫

10-5 習題



第11堂 Scrapy 爬蟲實務

11-1 學校網頁資料爬取實例

11-2 新聞網站資料爬取實例

11-3 PTT討論區爬取實例

11-4 習題



第12堂 爬蟲實戰技巧及實例

12-1 活用pyautogui模組和網頁互動

12-2 Dcard梗圖爬取實例

12-3 下載無限捲動網頁內容

12-4 MOBILE01討論區爬取實例

12-5 車商二手車資料下載實例

12-6 習題



附錄 反爬蟲與反反爬蟲的戰爭

a-1 網站的robotstxt

a-2 User-Agent

a-3 頻繁的request請求

a-4 JavaScript程式動態產生的網頁

a-5 我不是機器人驗證

a-6 CAPTCHA和reCaptcha驗證碼

a-7 人機合作爬蟲程式解決驗證碼問題",https://cf-assets2.tenlong.com.tw/products/images/000/152/579/medium/MP21926.jpg?1600238310
SQL Server 2019/2017 資料庫設計與開發實務,陳會安,碁峰資訊,9789865024727,2020/4/14,"陳會安老師多年扎實功力在本書中體現，相信除了對學校資料庫相關課程是一本很好的教材之外，對資料庫開發人員來說更是一本深入淺出的好工具書。

--台灣微軟產品行銷資深經理 廖育萱 專業推薦



*完整說明資料庫設計與開發人員應具備的觀念和技能，幫助你精通SQL Server的Transact-SQL程式設計！

*本書以資料庫設計與開發人員角度來切入SQL Server資料庫程式設計與開發，完整說明資料庫系統相關理論、資料庫設計理論與T-SQL程式設計，能夠訓練和提昇讀者擁有足夠的技術能力來自行設計與建立SQL Server資料庫應用程式。

*在實作上，本書適用微軟SQL Server 2019/2017企業、標準、開發人員版和Express版，是一本真正為有志成為資料庫設計與開發人員的讀者、或學校資料庫設計相關課程所規劃的實務教材和訓練指南。

*完美結合資料庫理論與設計實務，除了使用大量圖形和範例來說明資料庫系統理論、實體關聯模型和正規化外，更以實例說明資料庫設計，讀者不只可以實際在資料庫設計工具繪製專案的實體關聯圖，更可以將設計成果建立成SQL Server資料庫，來驗證實體關聯模型的資料庫設計理論。

*完整說明T-SQL語言的語法、預存程序、順序物件、自訂函數、觸發程序、資料指標和交易處理，可以幫助讀者精通SQL Server的Transact-SQL程式設計。

*實際說明如何使用C#和LINQ建立用戶端程式。

*介紹SQL Server機器學習服務和SQL Server全文檢索搜尋。



    


    目錄大綱
    
      Part1：資料庫理論與SQL Server的基礎

　第1章　資料庫系統

　第2章　關聯式資料庫模型

　第3章　實體關聯模型與正規化

　第4章　SQL Server資料庫管理系統

Part2：建立SQL Server資料庫與資料表

　第5章　資料庫設計工具的使用

　第6章　SQL語言與資料庫建置

　第7章　建立資料表與完整性限制條件

Part3：T-SQL的DML指令

　第8章　SELECT敘述的基本查詢

　第9章　SELECT敘述的進階查詢

　第10章　新增、更新與刪除資料

Part4：SQL Server檢視表與索引

　第11章　檢視表的建立

　第12章　規劃與建立索引

Part5：T-SQL程式設計與用戶端程式開發

　第13章　Transact-SQL程式設計

　第14章　預存程序與順序物件

　第15章　自訂函數與資料指標

　第16章　觸發程序

　第17章　交易處理與鎖定

　第18章　SQL Server用戶端程式開發與LINQ

Part6：SQL Server機器學習服務與全文檢索搜尋

　第19章　SQL Server 機器學習服務

　第20章　SQL Server全文檢索搜尋(電子書，線上下載)

　附錄A：Transact-SQL的內建函數(電子書，線上下載)",https://cf-assets2.tenlong.com.tw/products/images/000/146/916/medium/AED003900.jpg?1586255078
Python 資料可視化之美：極專業圖表製作高手書 (全彩印刷),張傑,深智數位,9789865501457,2020/9/21,"全書從Python程式語言切入，讓不懂Python的讀者也能快速上手。之後介紹處理數值最重要的套件包括NumPy和Pandas，接下來就是Python最重要的繪圖套件，包括matplotlib、Seaborn和plotnine的圖形語法，以及資料視覺化的顏色主題運用原理。在熟悉了工具之後，就進入本書的高潮，製作各式各樣的圖表，包括直條圖系列、橫條圖系列、南丁格爾玫瑰圖、徑向柱圖等圖表。還有資料關聯式圖表，包含二維和三維散點圖、氣泡圖、等高線圖、立體曲面圖、三元相圖、二維和三維瀑布圖、相關係數熱力圖等。最後更直接畫出了「商業週刊」、「華爾街日報」、「經濟學人」等刊物中最專業的圖表，直接晉升成大師行列。

名人推薦

English only documentation is starting to be a major problem for the scientific python ecosystem. This book provides an introduction to the basic usage of Matplotlib, the underlying structure of the architecture, and several of the high-level libraries built on top of matplotlib. Hopefully, this book will provide the context needed for Chinese speakers to better approach and understand the canonical English documentation of the projects.

Python語言生態圈有一個很主要的問題就是只有英文參考文件。本書介紹了matplotlib套件的基本用法和底層架構，以及建構在Matplotlib套件上幾個高水準的套件(Plotnine、Seaborn和Basemap等)。希望這本書能給中文讀者提供所需的學習內容，更好地幫助讀者學習與了解這些經典的英文技術文件。

Thomas Caswell

Lead Developer of matplotlib ( matplotlib套件的首席開發者)

Github: https://github.com/tacaswell

    

When trying to understand or communicate information one usually asks, what is the best visualization(s) I can make? If this question often comes to you and that you tend not to have an answer, then Beautiful Visualizations with Python is meant for you. Python is an excellent language for data analysis and visualization. Secondly, the book helps you build a practical toolbox for most visualizations that you may want to create. It strikes a delicate balance between a book that introduces and teaches and a gallery that you can always come back to for ideas. It is not one to throw away after reading. As it is titled, you will learn how to turn data in into beautiful visualizations by making the best choices at every step. Most important for me is that it covers the biggest idea in data visualization in the last 20 years, that is, The Grammar of Graphics.

當盡力去理解與溝通某人常問的資料資訊時，什麼才是我可以實現的資料視覺化?如果你也經常遇到這個問題，而又沒有答案時，這本書就是專門為你準備的。Python是一門用於資料分析與可視化非常優秀的語言，而這本書可以幫你建立你的工具箱，進一步可以實現你想做的大部分的資料視覺化。這本書不僅能給你介紹、教你資料視覺化，而且能幫你尋找資料視覺化的靈感，兩者兼得。這不是一本你看完就可以束之高閣的書。正如這本書名，你會透過本書一步步的教學模式，學習到如何將資料轉換成優美的圖表。更重要的是，這本書涵蓋了近20年來資料視覺化的核心理念，即「圖形語法」。

Hassan Kibirige

Author/ Maintainer of plotnine ( plotnine套件的開發者與維護者)

Github: https://github.com/has2k1



    

    作者簡介
    
      張傑

【獅猿狗】數據分析-工業設計獅，程序猿，科研狗。微信公眾號【EasyShu】聯合主創。

著有15篇SCI(E)和SSCI學術論文；出版專著《Excel 數據之美：科學圖表與商業圖表的繪製》、《R語言數據可視化之美：專業圖表繪製指南》、《Python數據可視化之美：專業圖表繪製指南》。

多屆中國R會議數據可視化演講嘉賓；學術研究方向為顏色科學、機器視覺、數據分析與可視化等。

    

    目錄大綱
    
      01 Python 程式設計基礎

1.1 Python 基礎知識 

1.2 6 種常用資料結構 

1.3 控制敘述與函數撰寫 

02 資料處理基礎

2.1 NumPy：數值運算 

2.2 Pandas：表格處理 

03 資料視覺化基礎

3.1 matplotlib 

3.2 Seaborn

3.3 plotnine

3.4 視覺化色彩的運用原理

3.5 圖表的基本類型 

04 類別比較型圖表

4.1 直條圖系列 

4.2 橫條圖系列 

4.3 不等寬直條圖

4.4 克里夫蘭點圖 

4.5 坡度圖

4.6 南丁格爾玫瑰圖 

4.7 徑向柱圖 

4.8 雷達圖 

4.9 詞雲圖 

05 資料關聯式圖表

5.1 散點圖系列 

5.2 曲面擬合

5.3 等高線圖 

5.4 散點曲線圖系列 

5.5 瀑布圖 

5.6 相關係數圖

06 資料分佈型圖表

6.1 統計長條圖和核心密度估計圖 

6.2 資料分佈圖表系列 

6.3 二維統計長條圖和核心密度估計圖 

07 時間序列型圖表

7.1 聚合線圖與面積圖系列 

7.2 日曆圖 

7.3 量化波形圖 

08 局部整體型圖表

8.1 餅狀圖系列 

8.2 馬賽克圖

8.3 鬆餅圖 

8.4 塊狀/ 點狀直條圖系列

09 高維資料型圖表

9.1 高維資料的轉換展示 

9.2 分面圖 

9.3 矩陣散點圖

9.4 熱力圖 

9.5 平行座標系圖 

9.6 RadViz 圖 

10 地理空間型圖表

10.1 不同等級的地圖 

10.2 分級統計地圖 

10.3 點描法地圖 

10.4 帶柱形的地圖

10.5 等值線圖 

10.6 點狀地圖 

10.7 簡化示意圖 

10.8 郵標法 

11 資料視覺化案例

11.1 商業圖表繪製範例 

11.2 學術圖表繪製範例 

11.3 資料分析與視覺化案例

11.4 動態資料視覺化示範

參考文獻

後記",https://cf-assets2.tenlong.com.tw/products/images/000/152/375/medium/%E6%B7%B1%E6%99%BA-DM2038-%E7%AB%8B%E9%AB%94%E6%9B%B8.jpg?1599473075
原來世界是這樣運轉的：微服務架構原理與實戰,吳治輝,深智數位,9789865501563,2020/10/21,"◎ Google、雅虎、蝦皮、亞馬遜是怎麼運行的？

◎ 以Container為主的微服務早就一統網路世界！

◎ Docker、Kubernetes才是王道，別再管伺服器或虛擬機了

◎ 立即投身雲端容器的世界，商業巨頭才擁有的技術，現在你也可以動手完成

本書特色

巨型系統的處理單元不再是CPU/記憶體/硬碟，取而代之的是以容器及叢集為主的運算提供者。在成千上萬的伺服器，數以百萬計的容器中，管理這些資源，提供快速服務，建立巨量儲存系統才是當務之急。但硬體、網路、儲存的原理仍然大同小異。

本書從基本的HTTP原理談起，進而介紹大型主機最常用的CDN/SD-WAN。接下來進入最重要的分散式系統，這當然不可能少掉ZooKeeper。而處理程序之間的通訊也是RPC就能勝任，這時ZeroC Ice就派上用場了。

在PB等級的記憶體叢集上，把資料庫整個放入記憶體是常用的加速手法，因此本書也介紹了記憶體的規劃及使用，重點就是快取的原理。

儲存是所有應用程式最重要的底層，當然以Linux為主的網路檔案系統很快就成為主角。介紹了GlusterFS、IPFS、Ceph等系統。有了三大元件之後，接下來就是資料的搜尋了。這時需要的中介軟體及搜尋引擎，也是使用老牌的Lucence/Solr/ElasticSearch。而訊息佇列的系統，更說明RabbitMQ及Kafka。

微服務則是以Docker及Kubernetes為主角。當然流行的Service Mesh也用上Istio/Envoy等系統，這麼完整的介紹，不論是有多年研發、架構經驗的IT老手，還是剛入門系統架構的IT新手，看完後一定會大有幫助！

本書內容

第1 章 說明分散式的基礎—網路

第2 章 說明分散式系統的經典理論

第3 章 從RPC 始，說明分散式服務治理架構的起源與原理，並說明ZeroCIce 的原理和微服務架構實戰

第4 ∼ 6章 以專題形式說明記憶體、分散式檔案儲存和分散式運算

第7 章 深入說明全文檢索與訊息佇列中介軟體的原理及用法

第8 章 說明以Kubernetes 為代表的微服務架構解決傳統架構的哪些痛；Service Mesh解決微服務架構的哪些問題，以及如何了解它的原理和核心內容。

第9 章 分享作者的架構實作經驗

適合讀者群 從事網際網路開發與設計者，有經驗系統架構師，或剛入門系統架構新手。

作者簡介

吳治輝

HPE資深架構師，近20年軟體研發經驗，專注於電信軟體和雲端運算方面的軟體研發，擁有豐富的大型專案架構設計經驗，是業界少有具備超強Coding能力的資深架構師，也是多本技術專業圖書作者。

目錄

前言

01 深入了解網路

1.1 從國際網際網路開始

1.2 NIO，一本難念的經

1.3 AIO，大道至簡的設計與苦澀的現實

1.4 網路傳輸中的物件序列化問題

1.5 HTTP 的前世今生

1.6 分散式系統的基礎：TCP/IP

1.7 從CDN 到SD-WAN

02 分散式系統的經典理論

2.1 從分散式系統的設計理念說起

2.2 分散式系統的一致性原理

2.3 分散式系統的基礎之ZooKeeper

2.4 經典的CAP 理論

2.5 BASE 準則，一個影響深遠的指導思維

2.6 重新認識分散式交易

03 聊聊RPC

3.1 從IPC 通訊說起

3.2 古老又有生命力的RPC

3.3 從RPC 到服務治理架構

3.4 以ZeroC Ice 為基礎的微服務架構指南

04 深入淺析記憶體

4.1 你所不知道的記憶體知識

4.2 記憶體計算技術的前世今生

4.3 記憶體快取技術分析

4.4 記憶體計算產品分析

05 深入解析分散式檔案儲存

5.1 資料儲存進化史

5.2 經典的網路檔案系統NFS

5.3 高性能計算領域的分散式檔案系統

5.4 企業級分散式檔案系統GlusterFS

5.5 創新的Linux 分散式儲存系統—Ceph

5.6 星際檔案系統IPFS

5.7 軟體定義儲存 .

06 聊聊分散式運算

6.1 不得不說的Actor 模型

6.2 Actor 原理與實作

6.3 初識Akka

6.4 適用面很廣的Storm

6.5 MapReduce 及其引發的新世界

07 全文檢索與訊息佇列中介軟體

7.1 全文檢索

7.2 訊息佇列

08 微服務架構

8.1 微服務架構概述

8.2 幾種常見的微服務架構方案

8.3 深入Kubernetes 微服務平台

8.4 從微服務到Service Mesh

09 架構實作

9.1 公益專案wuhansun 實作

9.2 身邊購平台實作

9.3  DIY 一個有難度的分散式叢集

序

前言

微服務、雲端原生、Kubernetes、Service Mesh 是分散式領域的熱技術，它們並不是憑空出現的，一定繼承了某些「前輩」的優點。我們不僅要了解這些技術，還要深了解其發展脈絡、原理等，才能遊刃有餘將其用於現有的專案開發或老系統改造中。

本書總計9 章。第1 章說明分散式的基礎—網路，對國際網際網路、NIO、AIO、網路傳輸中的物件序列化問題、HTTP 的前世今生、TCP/IP、從CDN 到SD-WAN 等知識說明。第2 章說明分散式系統的經典理論，有關分散式系統的設計理念、一致性原理；ZooKeeper 的使用場景；CAP 理論的前世今生；BASE 準則；分散式交易的原理。

第3 章從RPC 始，說明分散式服務治理架構的起源與原理，並說明ZeroCIce 的原理和微服務架構實戰。第4 ∼ 6 章以專題形式說明記憶體、分散式檔案儲存和分散式運算，對每個專題都說明相關的重要理論、產品、來源專案及經驗等。

第7 章深入說明全文檢索與訊息佇列中介軟體的原理及用法。第8 章說明以Kubernetes 為代表的微服務架構解決傳統架構的哪些痛；Service Mesh解決了微服務架構的哪些問題，以及如何了解它的原理和核心內容。

第9 章分享作者的架構實作經驗。不論你是有十幾年研發經驗及架構經驗的IT 老手，還是剛入門系統架構的IT 新手，本書都能對你了解分散式架構和微服務架構大有助益。",https://cf-assets2.tenlong.com.tw/products/images/000/153/536/medium/DM2046_%E7%AB%8B%E9%AB%94%E6%9B%B8.jpg?1602149704
"架構模式｜使用 Python (Architecture Patterns with Python: Enabling Test-Driven Development, Domain-Driven Design, and Event-Driven Microservices)","Harry Percival, Bob Gregory
          賴屹民 譯",歐萊禮,9789865025960,2020/8/20,"進行測試驅動開發、領域驅動設計及製作事件驅動微服務



「這是一本社群期待已久的書籍，讓大家看到現代app架構的核心在Python裡面究竟長怎樣！Harry與Bob展示了依賴反轉原則在這種時尚、動態的語言中有多麼優雅。」

—Brandon Rhodes

Python-patterns.guide作者



「截至目前為止，坊間幾乎沒有介紹使用Python編寫可維護大型系統的Python原生教材。本書展示Python可以遊刃有餘地進行重要的軟體開發。」

—Hynek Schlawack

Python忠實支持者、部落客及演說者



隨著Python越來越流行，專案的規模也越來越大、越來越複雜，讓許多Python開發者對高階軟體設計模式產生濃厚的興趣，例如六邊形/整潔架構、事件驅動架構，和以領域驅動設計(DDD)制定的策略模式，但是將這些模式轉換成Python不是那麼容易。



透過這本實戰指南，來自MADE.com的Harry Percival與Bob Gregory介紹一些行之有效的架構設計模式，協助Python開發者管理app的複雜性，並且充分利用測試套件。



作者透過具體的範例和優美、典型的Python來介紹各種模型，避免Java與C#語法的冗長表述。



本書介紹的模式包括：

‧依賴反轉，以及它和port及adapter(六邊形/整潔架構)的關係

‧領域驅動設計與Entity、Value Object及Aggregate的區別

‧持久保存機制的Repository和Unit of Work模式

‧事件、指令和訊息匯流排

‧命令查詢責任隔離(CQRS)模式

‧事件驅動架構與反應式微服務



Harry Percival 在2009年就開始使用Python了，他也是TDD和XP的粉絲。他是O’Reilly書籍《測試驅動開發｜使用Python》的作者，此書的副標題更是聞名—服從測試羊。



Bob Gregory 使用領域驅動設計來建構事件驅動系統已有十多年之久了，他曾經用過的語言包括C#、F#、Python與TypeScript。



    


    目錄大綱
    
      前言

引言



【第一部分 建立架構來支援領域模型的建構】

第一章 建立領域模型

第二章 Repository 模式

第三章 簡短插曲：關於耦合與抽象

第四章 我們的第一個用例：Flask API 與服務層

第五章 高速檔與低速檔的 TDD

第六章 Unit of Work 模式

第七章 Aggregate 與一致性界限





【第二部分 事件驅動架構】

第八章 事件與 Message Bus

第九章 搭著 Message Bus 進城

第十章 指令與指令處理式

第十一章 事件驅動架構：使用事件來整合微服務

第十二章 指令查詢責任隔離（CQRS）

第十三章 依賴注入（與啟動）



結語

附錄 A 總結圖表

附錄 B 模板專案結構

附錄 C 換掉基礎設施：用 CSV 做每一件事

附錄 D Repository 與 Unit of Work 模式，使用 Django

附錄 E 驗證



索引",https://cf-assets2.tenlong.com.tw/products/images/000/151/390/medium/9789865025960.jpg?1598062980
科班出身的 AI人必修課：OpenCV 影像處理 使用 Python,李立宗,深智數位,9789869807296,2019/10/19,"本書特色

介紹以Python為基礎的OpenCV視覺函數庫的使用

內容通俗易懂、生動有趣，案例豐富，實用性強

內容簡介

電腦視覺技術的應用越來越廣泛，有非常多的軟體工具和函數庫可以用來建置電腦視覺應用，針對Python的OpenCV就是一個很好的選擇，本書正是針對以Python為基礎的OpenCV來說明的。

Python和OpenCV結合，必將產生巨大的威力。本書以OpenCV官方文件的知識脈絡為主線，在此基礎上對細節進行補充和說明。

本書不僅介紹 OpenCV 函數的使用方法，還介紹函數實現的演算法原理。在介紹 OpenCV 函數的使用方法時，提供大量的程式示例。在介紹函數對圖像的處理前，先展示函數對數值、陣列的處理，方便讀者從數值的角度觀察和瞭解函數的處理過程和結果。在介紹具體的演算法原理時，使用通俗易懂的語言和貼近生活的示例來說明問題，避免使用過多複雜抽象的公式。                                     

適合讀者群：電腦視覺領域的初學者、專業技術人員、影像處理愛好者，或相關科系師生做為學習參考教材。



    

    作者簡介
    
      李立宗

南開大學碩士，天津職業技術師範大學副教授，從事電腦視覺領域的教學和研究。主編《OpenCV程式設計案例詳解》等多本圖書，在網易雲課堂主講《OpenCV圖窮匕見》等多門課程。

    

    目錄大綱
    
      前言

01 OpenCV 入門

1.1 如何使用

1.2 影像處理基本操作

1.3 OpenCV 貢獻庫

02影像處理基礎

2.1 影像的基本表示方法 

2.2 像素處理

2.3 使用numpy.array 存取像素 

2.4 有興趣區域（ROI）

2.5 通道操作 

2.6 取得影像屬性

03影像運算

3.1 影像加法運算 

3.2 影像加權和

3.3 逐位元邏輯運算 

3.4 掩模

3.5 影像與數值的運算

3.6 位平面分解 

3.7 影像加密和解密

3.8 數字浮水印

3.9 臉部打碼及解碼 

04色彩空間類型轉換

4.1 色彩空間基礎

4.2 類型轉換函數

4.3 類型轉換實例 

4.4 HSV 色彩空間討論

4.5 alpha 通道 

05幾何轉換

5.1 縮放

5.2 翻轉

5.3 仿射

5.4 透視

5.5 重對映

06設定值處理

6.1 threshold 函數

6.2 自我調整設定值處理 

6.3 Otsu 處理

07影像平滑處理

7.1 均值濾波 

7.2 方框濾波

7.3 高斯濾波

7.4 中值濾波

7.5 雙邊濾波

7.6 2D 旋積

08形態學操作

8.1 腐蝕

8.2 膨脹

8.3 通用形態學函數

8.4 開運算

8.5 閉運算

8.6 形態學梯度運算

8.7 禮帽運算

8.8 黑帽運算

8.9 核函數

09影像梯度

9.1 Sobel 理論基礎

9.2 Sobel 運算元及函數使用

9.3 Scharr 運算元及函數使用

9.4 Sobel 運算元和Scharr運算元的比較

9.5 Laplacian 運算元及函數使用 

9.6 運算元歸納

10 Canny 邊緣檢測

10.1 Canny 邊緣檢測基礎

10.2 Canny 函數及使用

11影像金字塔

11.1 理論基礎

11.2 pyrDown 函數及使用

11.3 pyrUp 函數及使用 

11.4 取樣可逆性的研究 

11.5 拉普拉斯金字塔

12影像輪廓

12.1 尋找並繪製輪廓

12.2 矩特徵 

12.3 Hu 矩 

12.4 輪廓擬合

12.5 Convex|Hull 

12.6 利用形狀場景演算法比較

12.7 輪廓的特徵值

13長條圖型處理

13.1 長條圖的含義

13.2 繪製長條圖 

13.3 長條圖均衡化

13.4 pyplot 模組介紹 

14傅立葉轉換

14.1 理論基礎 

14.2 Numpy 實現傅立葉轉換

14.3 OpenCV 實現傅立葉轉換

15範本比對

15.1 範本比對基礎

15.2 多範本比對 

16霍夫轉換

16.1 霍夫直線轉換

16.2 霍夫圓環轉換

17影像分割與分析

17.1 用分水嶺演算法實現影像分割與分析

17.2 互動式前景分析 

18視訊處理

18.1 VideoCapture 類別 

18.2 VideoWriter 類別 

18.3 視訊操作基礎

19繪圖及互動

19.1 繪畫基礎 

19.2 滑鼠互動

19.3 捲軸

20 K 近鄰演算法

20.1 理論基礎 

20.2 計算

20.3 手寫數字識別的原理 

20.4 自訂函數手寫數字識別 

20.5 K 近鄰模組的基本使用

20.6 K 近鄰手寫數字識別

21支援向量機

21.1 理論基礎

21.2 SVM 案例介紹 

22 K平均值分群

22.1 理論基礎 

22.2 K 平均值聚類模組 

22.3 簡單範例

23人臉識別

23.1 人臉檢測

23.2 LBPH 人臉識別

23.3 EigenFaces 人臉識別 

23.4 Fisherfaces 人臉識別 

23.5 人臉資料庫 

A 範例

A-1 範例檔案hist.py

A-2 範例檔案inpaint.py

A-3 範例檔案kmeans.py

B 參考文獻",https://cf-assets2.tenlong.com.tw/products/images/000/141/017/medium/DM1921_3D_books.jpg?1569985417
"Deep Learning｜用 Python 進行深度學習的基礎理論實作
            Deep Learning ―Pythonで学ぶディープラーニングの理論と実装",斎藤康毅 著、吳嘉芳 譯,歐萊禮,9789864764846,2017/8/16,"不走捷徑，幫助您真正搞懂「深度學習」的真義

這是一本與「深度學習」有關的書籍。從入門開始說明，一步一步帶領你瞭解深度學習必須具備的知識。本書可以幫助您了解：深度學習究竟是什麼？有何特色？根據何種原理來運作？

從零開始，由實做中學習

本書的目標是，盡量避免使用不瞭解內容的「黑盒子」，以基礎的知識為起點，以容易上手的Python撰寫程式，從動手實作的過程中，一步步深入瞭解深度學習。若以車用書籍來比喻這本書的話，這本書並不屬於汽車駕訓教材，而是希望能夠幫助您瞭解車子的原理，而非教您開車的方法。為了瞭解汽車的結構，必須試著打開車子的引擎蓋，將每個零件都拿起來觀察、操作看看。然後盡量用簡單的形狀，篩選出車子的核心部分，就像組合迷你模型般，製作出這台車子。本書的目標，就是透過製作車子的過程，讓你感受到自己實際可以製作出車子，進而熟悉與車子的相關技術。

本書特色：

．利用最少的外部函式庫，使用Python，從零開始實際執行深度學習的程式。

．說明Python 的用法，讓Python 的初學者也能理解。

．實際執行Python 的原始碼，同時提供讀者手邊可以進行實驗的學習環境。

．從簡單的機器學習問題開始，到最後執行精密辨識影像的系統。

．以淺顯易懂的方式說明深度學習與神經網路理論。

．針對看似複雜的技術，如誤差反向傳播與卷積運算等，利用實際操作方式說明，幫助理解。

．介紹在執行深度學習時，有幫助且實用的技巧，包括決定學習率的方法、權重的預設值等。

．說明Batch Normalization、Dropout、Adam 等最近的趨勢與操作。

．為什麼深度學習很優秀，為什麼加深層數，就能提高辨識準確度，為什麼隱藏層很重要，仔細說明這些「為什麼」。

．介紹自動運作、產生影像、強化學習等深度學習的應用範例。



    

    作者簡介
    
      斎藤康毅

1984年生於長崎縣對馬，畢業於東京工業大學工學院，東京大學研究所學際情報學府學士課程修畢。現在於企業內從事與電腦視覺、機器學習有關的研究開發工作。

    

    目錄大綱
    
      第一章 Python入門

第二章 感知器

第三章 神經網路

第四章 神經網路的學習

第五章 誤差反向傳播法

第六章 與學習有關的技巧

第七章 卷積神經網路

第八章 深度學習

附錄A Softmax-with-Loss層的計算圖

參考文獻",https://cf-assets2.tenlong.com.tw/products/images/000/109/549/medium/A523.jpg?1525539712
深度學習的數學地圖 - 用 Python 實作神經網路的數學模型 (附數學快查學習地圖),"IBM AI 工程師/東京大學數學工程專業 Masanori Akaishi 著
          章奇煒、王心薇 合譯",旗標科技,9789863126263,2020/5/28,"『數學 ╳ 深度學習 ╳ Python 三效合一』

深度學習用一句話就可以講完：『用訓練的方式找出一個數學函數，將輸入的資料映射到正確的答案』。重點就在於你如何找出那個對的數學函數！本書將深度學習的數學模型與運算式推導出來之後，還能實際執行 Python 程式幫助瞭解整個運算的過程。

『打開機器學習的黑箱，才發現裏面全都是數學！』

我們常在機器學習 / 深度學習的文章或書中看到線性迴歸、二元分類、多類別分類、和深度學習等名詞，好像要學很多東西！當然，對不懂數學的人確實如此。不過，一旦您理解深度學習底層的數學原理，就會發現原來架構稍微變一下，函數換一下，其實都是系出同門，一通百通啊。

要具備這種能力，你必須會微積分、向量/矩陣運算、多變數函數偏微分、指數/對數函數、以及機率/統計。這些在學校都要花很長的時間學習，然而本書考量到您並非想成為數學家或統計學家，因此從中摘取對深度學習最重要的部分濃縮在前半部，幫助您用最短的時間快速掌握數學能力。

本書是由施威銘研究室監修，適時加上「編註」補充內容幫助理解。如果您行有餘力，還可以繼續閱讀《機器學習的數學基礎：AI、深度學習打底必讀》一書，裏面有更詳細的數學公式推導。

『真正循序漸進，不會一下跳太快』

本書的一大特色就是每一步只增加一點差異，不會跳得太快。從線性迴歸模型開始，加入 Sigmoid 激活函數 (啟動函數) 就變成二元分類模型，然後將 Sigmoid 換成 Softmax 函數就擴展到多類別分類模型。然後在深度學習，先從一層隱藏層開始推導與實作，並因應需要調整學習率、改用 ReLU 函數等方法改善準確率。並進而擴展到兩層隱藏層，讓模型更加準確。小編真心認為，這樣的編排方式，讓讀者從既有的基礎逐步墊高實力，相當有利於學習，等您跟著本書走過一遍，自然就能心領神會。

本書隨附『數學快查學習地圖』彩色拉頁，將書中用到的各項數學基礎之間的關係整理成表，幫助您用一張圖看懂本書架構，甚至可裁剪下來隨時參考。作者在 Github 提供 Jupyter Notebook 格式的範例程式，另外您也可以從旗標官網下載 Python 範例程式。 

本書特色: 

1. 用 Python 實作迴歸模型、二元分類、多類別分類、一層隱藏層、二層隱藏層的數學模型。

2. 本書由施威銘研究室監修，適時加上「編註」補充內容幫助理解。

3. 隨書附『數學快查學習地圖』彩色拉頁。內文採用套色，更利於圖表呈現。



    

    作者簡介
    
      Masanori Akaishi 

1985 年畢業於東京大學工學院數學工程系，並於 1987 年於東京大學取得電腦工程碩士之後加入日本 IBM 公司。1993 年調至 SE 部門負責開放系統的基礎設施設計。2013 年至 Smart City 事業部，並於 2016 年再到 Watson 事業單位直到現在。自加入 IBM 二十餘年來，經過 IT 和 AI 各個領域的歷練，從 IT 架構設計、資料庫 SQL 調校、應用開發、程式設計、Watson、以及機器學習等都相當在行。除本書之外，他也著有《實用 Python 自然語言處理入門》、《機器學習與深度學習從 Watson Studio開始》。

    

    目錄大綱
    
      [導入篇 機器學習快速指引]

第 1 章 機器學習入門

1.1 何謂機器學習

1.1.1 何謂機器學習模型

1.1.2 機器學習的訓練方法

1.1.3 監督式學習的迴歸、分類模型

1.1.4 訓練階段與預測階段

1.1.5 損失函數與梯度下降法

1.2 第一個機器學習模型：簡單線性迴歸模型

1.3 本書討論的機器學習模型

1.4 數學是深度學習的核心

1.5 本書架構

[理論篇 數學速學課程]

第 2 章 微分、積分

2.1 函數

2.1.1 函數運作行為

2.1.2 函數的圖形

2.2 合成函數與反函數

2.2.1 合成函數

專欄 合成函數的表示法

2.2.2 反函數

2.3 微分與極限

2.3.1 微分的定義

2.3.2 函數值增量與微分的關係

2.3.3 切線方程式

專欄 切線方程式與訓練階段、預測階段的關係

2.4 極大值與極小值

2.5 多項式的微分

2.5.1 x^n 的微分（n 是正整數）

2.5.2 微分計算的線性關係與多項式的微分

2.5.3 x^r 的微分（r 是實數）

專欄 組合（Combination）與二項式定理

2.6 兩個函數相乘的微分

2.7 合成函數的微分

2.7.1 用鏈鎖法則做合成函數微分

2.7.2 反函數的微分

2.8 兩個函數相除的微分

2.9 積分

專欄 積分符號的意思

第 3 章 向量、矩陣

3.1 向量入門

3.1.1 何謂向量

3.1.2 向量的標記法

3.1.3 向量的分量

3.1.4 往多維擴展

3.1.5 分量的符號

3.2 向量和、向量差、純量乘積

3.2.1 向量和

3.2.2 向量差

3.2.3 向量與純量的乘積

3.3 向量的長度（絕對值）與距離

3.31 向量的長度（絕對值）

3.3.2 Σ 可整合冗長的加法算式

3.3.3 向量間的距離

3.4 三角函數

3.4.1 三角比 : 三角函數的基本定義

3.4.2 單位圓上的座標

3.4.3 三角函數的圖形

3.4.4 用三角函數表示直角三角形的邊長

3.5 向量內積

3.5.1 向量內積的幾何定義

3.5.2 用分量來表示內積公式

3.6 餘弦相似性

3.6.1 兩個二維向量的夾角

3.6.2 n 維向量的餘弦相似性

專欄 餘弦相似性的應用範例

3.7 矩陣運算

3.7.1 一個輸出節點的內積表示法

3.7.2 三個輸出節點的矩陣相乘

第 4 章 多變數函數的微分

4.1 多變數函數

4.2 偏微分

4.3 全微分

4.4 全微分與合成函數

4.5 梯度下降法（GD）

專欄 梯度下降法與局部最佳解

第 5 章 指數函數、對數函數

5.1 指數函數

5.1.1 連乘的定義與公式

5.1.2 連乘觀念的推廣

5.1.3 將連乘寫成指數函數形式

5.2 對數函數

專欄 對數函數的意義

5.3 對數函數的微分

專欄 用 Python 來計算尤拉數 e

5.4 指數函數的微分

專欄 以 e 為底的指數函數也可用 exp 表示

5.5 Sigmoid 函數

5.6 Softmax 函數

專欄 Sigmoid 和 Softmax 函數的關係

第 6 章 機率、統計

6.1 隨機變數與機率分佈

6.2 機率密度函數與累積分佈函數

專欄 Sigmoid 函數的機率密度函數

6.3 概似函數與最大概似估計法

專欄 為何概似函數的極值是求最大值，而不是最小值？

[實踐篇 機器學習、深度學習實作]

第 7 章 線性迴歸模型（迴歸）

7.1 損失函數的偏微分與梯度下降法

7.2 範例問題設定

7.3 訓練資料與預測值的數學符號標示法

7.4 梯度下降法的概念

7.5 建立預測模型

7.6 建立損失函數

7.7 損失函數的微分

7.8 梯度下降法之運用

7.9 程式實作

專欄 使用 NumPy

7.10 推廣到多元線性迴歸模型

專欄 學習率與迭代運算次數的調整方法

第 8 章 邏輯斯迴歸模型（二元分類）

81 範例問題設定

8.2 線性迴歸模型與分類模型的差異

8.3 針對預測模型之討論

專欄 將預測值轉換成機率的意義

8.4 損失函數（交叉熵 Cross entropy）

8.5 損失函數的微分計算

8.6 梯度下降法的運用

8.7 程式實作

專欄 scikit-learn 三種模型的比較

專欄 交叉熵以及熱愛足球的國王們的煩惱

第 9 章 邏輯斯迴歸模型（多類別分類）

9.1 範例問題設定

9.2 建立模型的基本概念

9.3 權重矩陣

9.4 Softmax 函數

9.5 損失函數

9.6 損失函數的微分計算

9.7 梯度下降法的運用

9.8 程式實作

專欄 聚合函數 axis 參數的作用

第 10 章 深度學習

10.1 範例問題設定

10.2 模型的架構與預測函數

10.3 損失函數

10.4 損失函數的微分

10.5 反向傳播

10.6 梯度下降法的運用

10.7 程式實作一：原始版本

10.8 程式實作二：調整權重矩陣初始值的版本

10.9 程式實作三：更換激活函數為 ReLU 的版本

10.10 程式實作四：隱藏層增加為 2 層的版本

[發展篇 實務上的解決方法]

第11 章 以實用的深度學習為目標

11.1 善用開發框架

11.2 卷積神經網路（CNN）

11.3 循環神經網路（RNN）與長短期記憶（LSTM）

11.4 數值微分

11.5 優化的學習法

11.6 過度配適解決方法

11.7 每次訓練的資料量（批量） 

11.8 權重矩陣的初始化

11.9 目標下一座山頭

附錄 Jupyter Notebook 開發工具

A.1 啟動 Jupyter Notebook

A.2 試寫一個程式

A.3 將檔案輸出成單純的 Python 檔",https://cf-assets2.tenlong.com.tw/products/images/000/147/902/medium/9789863126263_bc.jpg?1588834818
"C++ Primer, 5/e (繁體中文版)","Stanley B. Lippman等
          黃銘偉",碁峰資訊,9789865021726,2019/6/28,"最暢銷的程式設計教程和參考手冊

全新改寫符合C++11標準



為新發布的C++11標準完全更新並重塑，這本權威及詳盡的C++入門指南將幫助你快速學會這個語言，並以現代、高效率的方式使用它。重點提示現今最佳實務做法，作者們展示如何使用核心語言及其標準程式庫寫出有效率、容易閱讀並且強大的程式碼。



《C++ Primer, 5th Edition 中文版》從一開始就融入了C++標準程式庫的介紹，取用其常見的函式與機能來幫助你在尚未精通每個語言細節之前就能寫出實用的程式。本書的眾多範例都經過更新，使用新的語言功能，並示範如何以最佳的方式運用它們。



快速起步&完成更多：

‧學習如何使用新C++11語言功能和標準程式庫，以快速建置穩健的程式，並熟悉高階程式設計

‧透過範例學習，這些範例示範現今最佳的編程風格，以及程式設計技巧

‧了解「規則背後的道理」：探討為何C++11如此運作

‧使用廣泛的交互參考，幫助你連結相關的概念和觀察

‧受益於最新的輔助說明和練習，強調關鍵重點，協助你避開常見陷阱，鼓勵良好實務做法，並強化你所習得的知識



本書是通過時間驗證的C++入門教程，含有核心C++概念和技巧的權威性討論，也是經驗豐富的程式設計師珍貴的參考資源，特別適合急於尋求C++增強功能介紹的讀者。



    

    作者簡介
    
      Stanley B. Lippman 曾擔任Jet Propulsion Laboratory傑出顧問、Microsoft Visual C++開發團隊架構師、Bell Laboratories技術人員，以及Disney、DreamWorks、Pixar與PDI動畫電影首席軟體工程師。

Josée Lajoie 目前任職於Pixar，曾是IBM加拿大C/C++編譯器開發團隊的成員，並且是原ANSI/ISO C++標準化委員會核心語言工作小組的一員。

Barbara E. Moo 擁有將近三十年的軟體開發經驗。在她任職AT&T的十五年間，曾與C++發明人Bjarne Stroustrup密切合作過，並管理過數年的C++開發團隊。

    

    目錄大綱
    
      1 快速入門

第一篇 基本要素

2 變數和基本型別

3 字串、向量與陣列

4 運算式

5 述句

6 函式

7 類別

第二篇 C++ 程式庫

8 IO 程式庫

9 循序容器

10 泛用演算法

11 關聯式容器

12 動態記憶體

第三篇 給類別作者使用的工具

13 拷貝控制

14 重載的運算與轉換

15 物件導向程式設計

16 模板與泛型程式設計

第四篇 進階主題

17 特殊用途的程式庫機能

18 用於大型程式的工具

19 特殊用途的工具與技巧

A 程式庫",https://cf-assets2.tenlong.com.tw/products/images/000/136/321/medium/ACL037000.jpg?1560763162
"數位邏輯設計, 6/e (Mano: Digital Design, 6/e)","M. Morris R. Mano , Michael D. Ciletti 著
          江昭皚 譯",CS滄海,9789867696274,2019/10/1,"本書序言

●將邏輯電路與數位電路的一般初階課程內所未涵蓋的特定電路-層次的內容刪除(譬如，RTL、DTL，及射極-耦合電路)。

●在每一章的章末處新增「網路搜尋議題」，用以引導學生關注網路上可查詢到的額外議題。

●每一章的章末習題約有三分之一進行增訂。

●卡諾圖的討論更為流暢。

●整合基本 CMOS 技術與邏輯閘的討論。

●納入一篇附錄，用以介紹半導體技術。

●利用 VHDL 與 SystemVerilog 之數位設計的討論。

本書特色

本版的「數位邏輯設計」係奠基於先前的五個版本，以及對於協助擬定本書編排呈現方向之審閱者團隊意見的回饋。

本書的焦點已更為集中於密切地反映數位邏輯設計基礎課程的內容與現今數位系統的主流技術。

本書所著重的主要素材包括：(1)布林邏輯；(2)設計師所使用的邏輯閘；(3)同步有限狀態機；(4)資料路徑控制器的設計

本書適用於計算機科學、計算機工程與電機工程等領域的學生。編輯特色：

˙支援多模態學習方法，均衡兼顧 (V) 視覺、(A) 聽覺、(R) 閱讀與 (K) 動覺四種主要的學習模式。

˙教材主題安排深具靈活性，可依授課需求調整。

˙以系統性的方法論介紹數位系統的設計方法。

˙介紹剛好夠用的硬體語言。

˙HDL驗證與測試的說明詳實且範例眾多。

˙HDL的內容適切的編排於各節次中，易於學習。



    

    作者簡介
    
      作者簡介

M. Morris Mano is an Emeritus Professor of Computer Engineering at the California State University, Los Angeles.

Michael Ciletti is an Emeritus Professor of Electrical and Computer Engineering at the University of Colorado, Colorado Springs.



譯者簡介

江昭皚

現任：國立臺灣大學生物機電工程學系特聘教授

學歷：國立臺灣大學電機工程研究所博士

專長：機電整合工程、無線感測器網路技術、智慧農業科技、智慧電網

    

    目錄大綱
    
      Chapter 1 數位系統與二進位數

Chapter 2 布林代數與邏輯閘

Chapter 3 邏輯閘層次的最小化

Chapter 4 組合邏輯

Chapter 5 同步序向邏輯 

Chapter 6 暫存器與計數器 

Chapter 7 記憶體與可規劃邏輯

Chapter 8 暫存器轉移階層的設計

Chapter 9 利用標準ICs與FPGAs的實驗室實驗(請上滄海圖書網站下載)

Chapter 10 標準圖示符號(請上滄海圖書網站下載) 

Appendix 半導體與CMOS積體電路",https://cf-assets2.tenlong.com.tw/products/images/000/141/137/medium/9789867696274.jpg?1570522974
STP 行銷策略之 Python 商業應用實戰｜網路爬蟲x機器學習x數據分析,羅凱揚、蘇宇暉、鍾皓軒、楊超霆,碁峰資訊,9789865025878,2020/9/16,"透過科學的方式，找到自己的品牌定位

品牌「定位」的概念，經過將近半個世紀的發展，已經成為行銷管理領域裡，最重要的理論之一。

但從實務經營中可發現，品牌「定位」概念的執行，在商業界有一定程度的困難，一方面是因為對「定位」的認識不清；二方面是因為調查上的困難。結果導致許多企業在執行4P行銷組合時，沒有一個依循的方向，錯置了許多寶貴的資源。此外，網路社群興起，許多消費者會將自己消費的經驗，以及真正的心聲，留言在網路上。同時透過行銷資料科學技術的運用，企業能夠有系統地分析這些消費者的留言，進而協助企業找到自己的品牌「定位」。



結合資料科學的技術執行精準行銷

本書將透過行銷資料科學技術，配合行銷管理學的理論，進行品牌定位實務專案的執行。章節內容涵蓋「概論篇」、「實務篇」、「技術篇」到「專案篇」，包含與定位相關之理論、實務故事、實戰專案案例，以及程式介紹，適合行銷人員、經理人、資訊人員、學生、數據分析師，以及想學習定位理論與實務的人士。



透過本書，您將可以了解：

．何謂STP行銷策略？行銷策略與行銷資料科學之關係。

．市場區隔變數的類型、市場區隔分析技術，包括多變量分析與機器學習。

．學界與實務界如何進行市場區隔。

．企業如何選擇目標市場，以及進行精準行銷。

．何謂定位？定位的方式、工具、技術與執行。

．瞭解如何以電商網站爬蟲技法一步步建立STP行銷策略所需的資料。

．透過STP行銷策略程式實作，學習業界專案執行方式。

．解析程式實作成果，洞悉STP行銷策略的管理意涵。





專業推薦

「本書除詳細介紹STP行銷策略的內容，更附上業界專案的執行過程與成果。對於想要了解行銷資料科學如何協助企業做好行銷策略規劃的人來說，是本難得的佳作。我極力推薦本書給大家。」

林孟彥，台灣科技大學企業管理系教授

<序>

筆者在出版了國內第一本《行銷資料科學》專書，之後，受到許多讀者的迴響，除了邀約演講，或是希望利用此書當做大學上課用書之外，亦有讀者來信詢問能否出版實際執行專案的書籍。事實上，這樣的規劃，原本就在作者群的考量當中，而學術界與實務界對行銷資料科學的熱烈反應，依然促使我們加快出版的腳步。

本書的主題在談行銷策略理論與實務。作者群師承台科大企管系林孟彥教授。林孟彥教授是台灣地區數一數二的行銷管理專家，畢業於英國頂尖的華威大學（University of Warwick），而他的指導教授是行銷策略領域（尤其是市場區隔）的著名學者莎莉‧迪布（Sally Dibb）。本書在撰寫過程中，作者群也參考了許多迪布教授的期刊論文。此外，本書的作者群在過去幾年，執行了20餘項大大小小的行銷資料科學專案，金額大小從數萬元到上百萬元不等。本書的程式實戰內容，即是根據部分專案的真實內容而來，以確保我們在書中所分享的案例，絕對能夠「接上地氣」。

本書除了介紹行銷策略與行銷資料科學的概念，並針對STP行銷策略（市場區隔、目標市場選擇、定位）的細部內容，區分章節進行詳細說明。並且在STP三個階段，個別以一個程式實作案例，介紹行銷資料科學在不同階段的用法（同時附上Python程式碼QR code供讀者下載、練習）。分享完STP行銷策略後，最後一章，再以一個真實的實務專案，一步步地配合Python程式碼，講解STP行銷策略程式實作，讓讀者學習到真正落地的內容。

為了與讀者們有更好的互動，作者群也成立了不同的行銷資料科學社群，讓讀者可以一起分享、討論與學習行銷資料科學相關知識，同時，作者群也將行銷資料科學最新文章與動態消息彙整至此，歡迎廣大的讀者加入我們的社群，一同與我們一起成長！



    

    作者簡介
    
      羅凱揚

台灣科技大學管理學博士。台灣知識庫股份有限公司執行長、台灣科技大學兼任助理教授、中華未來學校教育學會理事。著有《行銷資料科學》、《電子商務與網路行銷》、《電子商務》、《商業自動化》、《管理學》、《個案分析》、《管理個案分析理論與實務》等書。

蘇宇暉

台灣科技大學管理學院博士候選人。自由時報編政組主任兼報社發言人。著有《行銷資料科學》。

鍾皓軒

臺灣行銷研究有限公司創辦人。曾任中華電信AI專案講師、資策會AI講師、工研院智慧製程講師、外貿協會國際企業人才培訓中心行銷資料科學講師、就讀台科大工業與工程管理碩士班。著有《行銷資料科學》。

楊超霆

資深資料科學家。曾任中華電信AI專案講師、資策會AI講師、外貿協會國際企業人才培訓中心行銷資料科學講師、台科大行銷資料課程講師、就讀台科大資訊管理碩士班。著有《打造股市小秘書》。

    

    目錄大綱
    
      Chapter 1｜行銷策略與行銷資料科學

Chapter 2｜市場區隔

Chapter 3｜市場區隔程式實作

Chapter 4｜選擇目標市場

Chapter 5｜選擇目標市場程式實作

Chapter 6｜定位

Chapter 7｜定位程式實作

Chapter 8｜STP 行銷策略程式實作",https://cf-assets2.tenlong.com.tw/products/images/000/152/374/medium/ACD020600.jpg?1599472748
"Python 最強入門邁向頂尖高手之路：王者歸來, 2/e (全彩版)",洪錦魁,深智數位,9789865501532,2020/9/17,"Python 最強入門 邁向 頂尖高手 之路 王者歸來 第二版

預購即贈習題解答下載密碼

本書特色

本書第一版曾經榮登  博客來、天瓏、Momo暢銷排行榜第一名

本書除了贈送全書1101個程式實例，所有是非與選擇題皆附有習題解答，實作題部分有約260多個程式實例則是贈送所有偶數題的解答，有了這些解答讀者可以自行驗證學習成果。 

多次與教育界的朋友相聚，談到電腦語言的發展趨勢，大家一致公認Python已經是當今最重要的電腦語言了，幾乎所有知名公司，例如：Google、Facebook、…等皆已經將此語言列為必備電腦語言。了解許多人想學Python，市面上的書也不少了，許多人買了許多書，學習Python路上仍感障礙重重，原因是沒有選到好的書籍，市面上許多書籍的缺點是：

1：Python語法講解不完整，沒有建立Python紮實語法的觀念

2：用C、C++、Java觀念撰寫實例

3：Python語法的精神與內涵未做說明

4：Python進階語法未做解說

5：基礎實例太少，沒經驗的讀者無法舉一反三

6：模組介紹不足，應用範圍有限

許多讀者因此買了一些書，讀完了，好像學會了，但到了網路看專家撰寫的程式往往看不懂。就這樣我決定撰寫一本用豐富、實用、有趣實例完整且深入講解Python語法的入門書籍。其實這本書也是目前市面上講解Python書籍中語法最完整、應用範圍最廣、範例最豐富的書籍。整本書從Python風格說起，拋棄C、C++、Java思維，將Python語法、內涵與精神功能火力全開，完全融入矽谷頂尖Python工程師的邏輯與設計風格。

這是史上最多範例的Python書籍，有約1101個程式實例搭配約500個模組的函數，輔助約260個習題，外加126頁的習題電子書，用極深入、最詳細的態度講解Python語法的基礎與進階知識，例如：utf-8中文編碼、list、tuple、dict、set、bytes、bytearray、closure、lambda、Decorator、@property、@classmethod、@staticmathod…等。

此外，也將應用範圍擴充至下列應用：


	人工智慧基礎知識融入章節內容
	認識Python彩蛋
	從bytes說起、編碼(encode)、解碼(decoding)
	完整解說Unicode字符集和utf-8依據Unicode字符集的中文編碼方式
	從小型串列、元組、字典到大型數據資料的建立


生成式(generator)建立Python資料結構，串列(list)、字典(dict)、


	集合(set)
	在座標軸內計算任2點之間的距離，同時解說與人工智慧的關聯
	經緯度計算地球任2城市之間的距離，學習取得地球任意位置的經緯度
	萊布尼茲公式、尼拉卡莎、蒙地卡羅模擬計算圓週率
	基礎函數觀念，也深入到嵌套、closure、lambda、Decorator等高階應用
	Google有一篇大數據領域著名的論文，MapReduce:Simplified Data Processing on Large Clusters，重要觀念是MapReduce，筆者將對map( )和reduce( )完整解說，更進一步配合lambda觀念解說高階應用
	建立類別同時深入裝飾器@property、@classmethod、@staticmathod與類別特殊屬性與方法
	設計與應用自己設計的模組、活用外部模組(module)
	賭場騙局
	設計加密與解密程式
	Python的輸入與輸出
	檔案壓縮與解壓縮
	程式除錯(debug)與異常(exception)處理
	檔案讀寫與目錄管理
	剪貼簿(clipboard)處理
	正則表達式(Regular Expression)
	遞廻式觀念與碎形(Fractal)
	影像處理與文字辨識，更進一步說明電腦儲存影像的方法與觀念
	建立有個人風格的QR code與電子名片QR code
	認識中文分詞jieba與建立詞雲(wordcloud)設計
	GUI設計 - 實作小算盤
	實作動畫、音樂與遊戲
	Matplotlib中英文圖表繪製
	說明csv和json檔案
	繪製世界地圖
	台灣股市資料擷取與圖表製作
	網路爬蟲
	用Python執行手機傳簡訊
	用Python執行傳送電子郵件
	處理PDF檔案
	用Python控制螢幕與鍵盤
	輕量級的資料庫SQLite實作
	用Python實戰MySQL資料庫
	多工與多執行緒設計
	海龜繪圖，設計萬花筒與滿天星星
	Facebook與YouTube的應用
	實作機場人臉辨識系統
	搭配Flask設計Line Bot機器人
	網路程式Server端與Client端程式設計，筆者也設計了簡單的聊天室
	Python是一門可以很靈活使用的程式語言，本書對Python最基礎的知識與應用使用了大量靈活的實例做說明，讀者可以由這些程式實例事半功倍成為Python頂尖高手。




    

    作者簡介
    
      洪錦魁

一位跨越電腦作業系統與科技時代的電腦專家，著作等身的作家。

■ DOS 時代他的代表作品是 IBM PC 組合語言、C、C++、Pascal、資料結構

■ Windows 時代他的代表作品是 Windows Programming 使用 C、Visual Basic。

■ Internet 時代他的代表作品是網頁設計使用 HTML。

■ 大數據時代他的代表作品是 R 語言邁向 Big Data 之路。

除了作品被翻譯為簡體中文、馬來西亞文外，2000 年作品更被翻譯為MasteringHTML 英文版行銷美國，近年來作品則是在北京清華大學和台灣深智同步發行：

1：Java入門邁向高手之路王者歸來

2：Python最強入門邁向頂尖高手之路王者歸來

3：Python最強入門邁向數據科學之路王者歸來

4：Python網路爬蟲：大數據擷取、清洗、儲存與分析王者歸來

5：演算法最強彩色圖鑑 + Python程式實作王者歸來

6：網頁設計HTML+CSS+JavaScript+jQuery+Bootstrap+Google

   Map王者歸來

7：機器學習彩色圖解 + 基礎數學篇 + Python實作王者歸來

8：R語言邁向Big Data之路

9：Excel完整學習邁向最強職場應用王者歸來

他的近期著作分別登上天瓏、博客來、Momo電腦書類暢銷排行榜第一名，他的書著作最大的特色是，所有程式語法會依特性分類，同時以實用的程式範例做解說，讓整本書淺顯易懂，讀者可以由他的著作事半功倍輕鬆掌握相關知識。

    

    目錄大綱
    
      目錄

第一章　基本觀念

1-1 認識Python 

1-2 Python 的起源 

1-3 Python 語言發展史 

1-4 Python 的應用範圍  

1-5 靜態語言與動態語言 

1-6 系統的安裝與執行  

1-7 程式註解 

1-8 Python 彩蛋 

第二章　認識變數與基本數學運算

2-1 用Python 做計算

2-2 認識變數

2-3 認識程式的意義

2-4 認識註解的意義

2-5 變數的命名原則

2-6 基本數學運算

2-7 指派運算子

2-8 Python 等號的多重指定使用

2-9 刪除變數 

2-10 Python 的斷行

2-11 專題-複利計算/計算圓面積與圓周長

第三章　Python 的基本資料型態

3-1 type( ) 函數

3-2 數值資料型態

3-3 布林值資料型態

3-4 字串資料型態

3-5 字串與字元

3-6 bytes 資料

3-7 專題- 地球到月球時間計算/計算座標軸 2 點之間距離

第四章　基本輸入與輸出

4-1 Python 的輔助說明help( ) 

4-2 格式化輸出資料使用print( ) 

4-3 輸出資料到檔案

4-4 資料輸入input( ) 

4-5 處理字串的數學運算eval( )

4-6 列出所有內建函數dir( )

4-7 專題- 溫度轉換/房貸問題/面積/經緯度距離/高斯數學

第五章　程式的流程控制使用if 敘述

5-1 關係運算子

5-2 邏輯運算子

5-3 if 敘述

5-4 if ⋯ else 敘述

5-5 if ⋯ elif ⋯ else 敘述

5-6 尚未設定的變數值None

5-7 if 的新功能

5-8 專題- BMI/ 猜數字/生肖/方程式/聯立方程式/火箭升空/閏年

第六章　串列(List)

6-1 認識串列(list)

6-2 Python 簡單的物件導向觀念 

6-3 獲得串列的方法

6-4 增加與刪除串列元素

6-5 串列的排序

6-6 進階串列操作

6-7 串列內含串列 

6-8 串列的賦值與切片拷貝

6-9 再談字串

6-10 in 和not in 運算式

6-11 is 或is not 運算式

6-12 enumerate 物件

6-13 專題 大型串列/帳號管理/認識凱薩密碼

第七章　迴圈設計

7-1 基本for 迴圈

7-2 range( ) 函數 

7-3 進階的for 迴圈應用

7-4 while 迴圈 

7-5 enumerate 物件使用for 迴圈解析

7-6 專題 購物車設計/成績系統/圓周率/雞兔同籠/國王的麥粒

第八章　元組(Tuple)

8-1 元組的定義

8-2 讀取元組元素

8-3 遍歷所有元組元素

8-4 修改元組內容產生錯誤的實例 

8-5 可以使用全新定義方式修改元組元素

8-6 元組切片(tuple slices) 

8-7 方法與函數

8-8 串列與元組資料互換

8-9 其它常用的元組方法

8-10 enumerate 物件使用在元組

8-11 使用zip( ) 打包多個物件 

8-12 生成式(generator)

8-13 製作大型的元組資料 

8-14 元組的功能

8-15 專題 認識元組/統計/打包與解包/bytes與bytearray

第九章　字典(Dict)

9-1 字典基本操作 

9-2 遍歷字典

9-3 建立字典串列

9-4 字典內鍵的值是串列

9-5 字典內鍵的值是字典

9-6 while 迴圈在字典的應用

9-7 字典常用的函數和方法

9-8 製作大型的字典資料

9-9 專題 文件分析/字典生成式/星座/凱薩密碼/摩斯密碼

第十章　集合(Set)

10-1 建立集合

10-2 集合的操作 

10-3 適用集合的方法

10-4 適用集合的基本函數操作

10-5 凍結集合frozenset

10-6 專題 夏令營程式/程式效率/集合生成式/雞尾酒實例

第十一章　函數設計

11-1 Python 函數基本觀念

11-2 函數的參數設計

11-3 函數傳回值

11-4 呼叫函數時參數是串列

11-5 傳遞任意數量的參數

11-6 進一步認識函數

11-7 遞迴式函數設計recursive

11-8 區域變數與全域變數

11-9 匿名函數lambda

11-10 pass 與函數

11-11 type 關鍵字應用在函數

11-12 設計自己的range( )

11-13 裝飾器(Decorator)

11-14 專題 　函數的應用/質數

11-15 專題 歐幾里德演算法

第十二章　類別– 物件導向的程式設計

12-1 類別的定義與使用

12-2 類別的訪問權限 – 封裝(encapsulation)

12-3 類別的繼承

12-4 多型(polymorphism)

12-5 多重繼承 

12-6 type 與instance 

12-7 特殊屬性 

12-8 類別的特殊方法

12-9 專題　幾何資料的應用

第十三章　設計與應用模組

13-1 將自建的函數儲存在模組中

13-2 應用自己建立的函數模組

13-3 將自建的類別儲存在模組內

13-4 應用自己建立的類別模組

13-5 隨機數random 模組

13-6 時間time 模組

13-7 系統sys 模組

13-8 keyword 模組

13-9 日期calendar 模組

13-10 幾個增強Python 功力的模組

13-11 專題設計　賭場遊戲騙局/蒙地卡羅模擬/文件加密 

第十四章　檔案的讀取與寫入

14-1 資料夾與檔案路徑

14-2 讀取檔案

14-3 寫入檔案

14-4 讀取和寫入二進位檔案

14-5 shutil 模組

14-6 檔案壓縮與解壓縮zipfile

14-7 認識編碼格式encode

14-8 剪貼簿的應用

14-9 專題設計 分析檔案/ 加密檔案

第十五章　程式除錯與異常處理

15-1 程式異常

15-2 設計多組異常處理程序

15-3 丟出異常

15-4 紀錄Traceback 字串

15-5 finally

15-6 程式斷言assert

15-7 程式日誌模組logging

15-8 程式除錯的典故

第十六章　正則表達式Regular Expression

16-1 使用Python 硬功夫搜尋文字

16-2 正則表達式的基礎

16-3 更多搜尋比對模式

16-4 貪婪與非貪婪搜尋

16-5 正則表達式的特殊字元

16-6 MatchObject 物件

16-7 搶救CIA 情報員-sub( ) 方法

16-8 處理比較複雜的正則表示法

第十七章　用Python 處理影像檔案

17-1 認識Pillow 模組的RGBA

17-2 Pillow 模組的盒子元組(Box tuple)

17-3 影像的基本操作

17-4 影像的編輯

17-5 裁切、複製與影像合成

17-6 影像濾鏡

17-7 在影像內繪製圖案

17-8 在影像內填寫文字

17-9 專題 – 建立QR code/ 辨識車牌與建立停車場管理系統

17-10 專題 - 詞雲(WordCloud) 設計

第十八章　開發GUI 程式使用tkinter

18-1 建立視窗

18-2 標籤Label

18-3 視窗元件配置管理員Layout Management

18-4 功能鈕Button 

18-5 變數類別 

18-6 文字方塊Entry

18-7 文字區域Tex

18-8 捲軸Scrollbar

18-9 選項鈕Radiobutton

18-10 核取方塊Checkbutton 

18-11 對話方塊messagebox 

18-12 圖形PhotoImage

18-13 尺度Scale 的控制

18-14 功能表Menu 設計

18-15 專題- 設計小算盤

第十九章　動畫與遊戲

19-1 繪圖功能

19-2 尺度控制畫布背景顏色

19-3 動畫設計

19-4 反彈球遊戲設計

19-5 專題 使用tkinter 處理謝爾賓斯基三角形

第二十章　數據圖表的設計

20-1 認識mapplotlib.pyplot 模組的主要函數

20-2 繪製簡單的折線圖plot( )

20-3 繪製散點圖scatter( )

20-4 Numpy 模組

20-5 隨機數的應用

20-6 繪製多個圖表 

20-7 長條圖的製作

20-8 圓餅圖的製作pie( )

20-9 圖表顯示中文

20-10 專題- 台灣股市資料讀取與圖表製作

第二十一章　JSON 資料與繪製世界地圖

21-1 JSON 資料格式前言

21-2 認識json 資料格式

21-3 將Python 應用在json 字串形式資料

21-4 將Python 應用在json 檔案

21-5 簡單的json 檔案應用

21-6 世界人口數據的json 檔案 

21-7 繪製世界地圖

第二十二章　 Python 處理CSV/Pickle/Shelve/Excel

22-1 建立一個CSV 文件

22-2 記事本開啟CSV 檔案

22-3 csv 模組 

22-4 讀取CSV 檔案

22-5 寫入CSV 檔案

22-6 專題- 使用CSV 檔案繪製氣象圖表

22-7 台灣股市數據

22-8 Pickle 模組

22-9 Shelve 模組

22-10 Python 與Microsoft Excel

第二十三章　網路爬蟲

23-1 上網不再需要瀏覽器了

23-2 下載網頁資訊使用requests 模組

23-3 檢視網頁原始檔 

23-4 解析網頁使用BeautifulSoup 模組

23-5 網路爬蟲實戰

23-6 爬蟲實戰 - 環保署空氣品質JSON檔案實作

23-7 命令提示字元視窗

23-8 建議網路爬蟲書籍

第二十四章　Selenium 網路爬蟲的王者

24-1 順利使用Selenium 工具前的安裝工作

24-2 獲得webdriver 的物件型態 

24-3 擷取網頁

24-4 尋找HTML 文件的元素

24-5 用Python 控制點選超連結

24-6 用Python 填寫表單和送出

24-7 用Python 處理使用網頁的特殊按鍵

24-8 用Python 處理瀏覽器運作

第二十五章　用Python 傳送手機簡訊

25-1 安裝twilio 模組

25-2 到Twilio 公司註冊帳號

25-3 使用Python 程式設計發送簡訊

第二十六章　用Python 傳送電子郵件

26-1 傳送電子郵件

26-2 正式使用Python 設計一些簡單的郵件程式

第二十七章　使用Python 處理PDF 檔案

27-1 開啟PDF 檔案

27-2 獲得PDF 文件的頁數

27-3 讀取PDF 頁面內容

27-4 檢查PDF 是否被加密

27-5 解密PDF 檔案

27-6 建立新的PDF 檔案

27-7 PDF 頁面的旋轉

27-8 加密PDF 檔案

27-9 處理PDF 頁面重疊

27-10 破解密碼的暴力程式設計 

27-11 暴力破解也不是萬能

第二十八章　 用Python 控制滑鼠、螢幕與鍵盤

28-1 滑鼠的控制

28-2 螢幕的處理

28-3 使用Python 控制鍵盤

28-4 網路表單的填寫

第二十九章　SQLite 與MySQL 資料庫

29-1 SQLite 基本觀念

29-2 資料庫連線

29-3 SQLite 資料類型

29-4 建立SQLite 資料庫表單 

29-5 增加SQLite 資料庫表單紀錄

29-6 查詢SQLite 資料庫表單

29-7 更新SQLite 資料庫表單紀錄

29-8 刪除SQLite 資料庫表單紀錄

29-9 DB Browser for SQLite

29-10 將台北人口數儲存SQLite 資料庫

29-11 MySQL 資料庫

第三十章　多工與多執行緒

30-1 時間模組datetime 

30-2 多執行緒

30-3 啟動其它應用程式subprocess 模組

第三十一章 　海龜繪圖

31-1 基本觀念與安裝模組

31-2 繪圖初體驗 

31-3 繪圖基本練習

31-4 控制畫筆色彩與線條粗細

31-5 繪製圓、弧形或多邊形

31-6 填滿顏色

31-7 繪圖視窗的相關知識 

31-8 認識與操作海龜影像

31-9 顏色動畫的設計

31-10 文字的輸出

31-11 滑鼠與鍵盤訊號

31-12 專題–有趣圖案與終止追蹤圖案繪製過程

31-13 專題–謝爾賓斯基三角形

第三十二章　Python 與Facebook

32-1 Facebook 圖形API

32-2 facebook-sdk 存取資料的應用

第三十三章　聲音的控制

33-1 安裝與導入

33-2 一般音效的播放Sound( ) 

33-3 播放音樂檔案music( )

33-4 背景音樂

33-5 mp3 音樂播放器

第三十四章　人臉辨識系統設計

34-1 安裝OpenCV

34-2 讀取和顯示影像

34-3 OpenCV 的繪圖功能

34-4 人臉辨識

34-5 設計桃園國際機場的出入境人臉辨識系統

第三十五章　Python 與YouTube

35-1 安裝pytube 模組

35-2 正式使用pytube 模組

35-3 常用的pytube 物件屬性

35-4 將下載檔案存於指定資料夾

35-5 YouTube 影音檔案格式 

35-6 篩選影音檔案格式

35-7 再看下載影音檔案

35-8 下載多個檔案

35-9 專題 使用圖形介面處理YouTube影音檔案下載

第三十六章　設計Line Bot 機器人

36-1 基本觀念

36-2 Flask

36-3 建立Line Bot

36-4 Echo 程式設計

36-5 建立圖文並茂的Line Bot

第三十七章　網路程式設計

37-1 TCP/IP

37-2 URL

37-3 Socket 

37-4 TCP/IP 程式設計

37-5 UDP 程式設計

附錄A　安裝Python（電子書）

附錄B　安裝第三方模組（電子書）

附錄C　函數或方法索引表（電子書）

附錄D　RGB 色彩表（電子書）

附錄E　ASCII 碼值表（電子書）",https://cf-assets2.tenlong.com.tw/products/images/000/152/070/medium/DM2039_3D.jpg?1598863063
"基礎資料結構 ─ 使用 C (Fundamentals of Data Structures in C, 2/e)",Ellis Horowitz、Sartaj Sahni、Susan Anderson-Freed 著、蔡錫鈞、戴顯權 譯,開發,9789868359710,2008/8/29,,https://cf-assets1.tenlong.com.tw/images/46411/medium/9789868359710.jpg
"超圖解 Arduino 互動設計入門, 4/e",趙英傑,旗標科技,9789863126232,2020/3/12,"華文世界銷售第一的 Arduino 創客經典教材！

本書的目標是讓高中以上, 沒有電子電路基礎, 對微電腦、電子 DIY 及互動裝置有興趣的人士, 也能輕鬆閱讀, 進而順利使用 Arduino 控制板自造完成各種互動應用, 加入創客的行列。因此, 實驗用到的電子和程式觀念, 皆以手繪圖解的方式說明, 看圖就能懂。主要特色如下：

□ 【超清楚手繪接線圖, 人人都能動手當創客】：製作電子實驗一定要動手接電路, 本書利用手繪方式提供超清楚的實體接線圖, 只要對照圖中的接線與電子零件標示, 就可以在麵包板上正確接好線路, 進行實驗。除了手繪接線圖外, 本書也會提供對照的電路圖, 讓讀者不只入門容易, 也為將來邁向專業等級做好準備。

□ 【程式語言從零開始, 人人都能設計程式】：使用 Arduino 製作互動設計除了組裝電路外, 最重要的就是要能夠撰寫程式控制互動邏輯。本書特別以手繪的程式觀念圖以及清楚易懂的流程圖, 從零開始說明程式設計的基礎觀念, 即使沒有程式設計經驗, 也可依照書中說明動手撰寫互動程式。

□ 【隨手自造享受無窮樂趣】：除了花錢購買電子零件以外, 本書還會教您利用身邊現有的材料自造出令人驚艷的有趣設計, 像是使用廢棄的塑膠硬殼製作簡易機器手臂、將廢棄的軟碟片改造成電子鼓、將玩具模型車變成可自動躲避障礙物的智慧型自走車等。

□ 【Arduino × Android 互動串連】：互動裝置能夠遙控更是酷, 本書也會介紹如何結合 Arduino 與 Android 雙 A 裝置, 透過藍牙無線傳輸設計個人專屬的藍牙遙控機器人, 還可以自己開發 App, 延伸自造樂趣。

□ 【邁入科技潮流物聯網應用世界】：使用網路模組讓 Arduino 互動裝置上網, 即可透過客製化的網頁遠端遙控家電, 邁入物聯網的世界。本書更進一步介紹可無線連網的 D1 mini 控制板, 拓展物聯網的範圍, 任何人都可以自由自造智慧生活所需要的各種無線裝置。

□ 【精心設計 DIY 趣味範例】：包括手機藍牙遙控機器人、連網智慧家電控制、光感應音樂盒、聲控開關、自動調光小夜燈、LED 矩陣動畫與文字跑馬燈、電子尺、電子燭光特效、避障自走車、數位溫濕度計、體感控制機器手臂、自動尋軌車、RFID 門禁控制、模擬悠遊卡儲存值、入侵偵測 LINE 警報通知器、遠端網頁調光器等。

第四版並提升實驗零件取得的容易度, 從原本改造身邊的電子產品和玩具著手, 搭配組裝電子零件的 DIY 風格, 改成盡量採用方便購買的現成模組, 以求自學實作及老師授課的便利, 不過在使用這些現成的模組時, 同時也會說明模組內部的電路及其運作原理, 避免許多初學者一旦沒有模組可用, 就不知道該如何完成相同功能的困境。

此外第四版也在程式設計和演算法上更加全面地介紹 Arduino 程式語言, 包含物件導向程式設計和自製程式庫等進階主題。部分內容雖然因為篇幅有限, 從紙本書中移除, 但仍採電子書形式提供給讀者參考, 方便讀者查閱進修。書末更提供中文電腦書通常沒有的索引，更是作者花費長時間精心整理完成, 期望能讓本書在學習之餘, 更能成為各位手邊最便利好查的工具書。 

本書特色: 

□ 華文世界銷售第一的 Arduino 創客經典教材！

□ 超圖解、人人都能看得懂

□ 沒學過電子電路也能做出來

□ 沒寫過程式也能從零開始

□ 隨手自造享受無窮樂趣

□ Arduino × Android 互動串連

□ 邁入科技潮流物聯網應用世界



    


    目錄大綱
    
       1 認識 Arduino 與微電腦控制板

1-1 認識 Arduino 

1-2 安裝 Arduino Uno 控制板的驅動程式 

1-3 Arduino 程式開發工具與開發步驟簡介

1-4 上傳「閃爍 LED」範例程式 

2 認識電子零件與工具

2-1 電壓、電流與接地

2-2 控制板的電源供應器

2-3 電阻

2-4 電容

2-5 二極體

2-6 發光二極體（LED） 

2-7 看懂電路圖

2-8 電子工作必備的量測工具：萬用電錶 

2-9 麵包板以及其他電子工具

3 Arduino 控制板與程式設計入門

3-1 Arduino Uno 控制板的功能和接腳說明

3-2 認識程式語言

動手做 3-1 寫一個 LED 閃爍控制程式 

3-3 用「變數」來管理程式碼

3-4 不變的「常數」 

3-5 使用 #define 巨集指令替換資料 

4 開關、分歧指令與歐姆定律

4-1 認識開關 

4-2 開關電路與上 / 下拉電阻 

動手做 4-1 用麵包板組裝開關電路

4-3 改變程式流程的 if 條件式 

動手做 4-2 LED 切換開關

動手做 4-3 用 RC 電路消除開關彈跳訊號

動手做 4-4 LED 跑馬燈 

4-4 迴圈

動手做 4-5 跑馬燈範例程式二：使用 for 迴圈 

4-5 認識陣列 

動手做 4-6 使用陣列變數的 LED 來回跑馬燈 

4-6 用歐姆定律計算出限流電阻值 

5 UART 序列埠通信

5-1 並列與序列通訊簡介

5-2 認識 UART 序列埠

5-3 處理文字訊息：認識字元與字串資料類型

5-4 認識程式庫：傳遞序列訊息

動手做 5-1 從序列埠監控視窗觀察變數值

5-5 認識 String（字串）程式庫 

5-6 從 Arduino 接收序列埠資料 

動手做 5-2 從序列埠控制 LED 開關

5-7 switch...case 控制結構

5-8 認識數字系統

6 LED 七段顯示器與序列轉並列輸出 IC

6-1 七段顯示器

動手做 6-1 連接 LED 七段顯示器與 Arduino 板

6-2 使用積體電路簡化電路 

動手做 6-2 序列連接七段顯示器 

動手做 6-3 不用 delay() 的延遲方法

動手做 6-4 一個 74HC595 控制多個七段顯示器

7 SPI 序列介面與 LED 矩陣顯示器

7-1 建立自訂函式

動手做 7-1 建立自訂函式 

7-2 變數的有效範圍：全域、區域和靜態 

7-3 LED 矩陣簡介 

7-4 認識 SPI 序列介面與 MAX7219 

動手做 7-2 組裝 LED 矩陣電路 

7-5 顯示單一矩陣圖像

動手做 7-3 在矩陣 LED 上顯示音符圖像

動手做 7-4 在序列埠監控視窗輸出矩形排列的星號

7-6 LED 矩陣動畫與多維陣列程式設計 

動手做 7-5 在矩陣 LED 上顯示動態圖像

7-7 LED 矩陣跑馬燈

動手做 7-6 LED 矩陣逐字捲動效果程式

7-8 認識指標（Pointer） 

7-9 將常數保存在「程式記憶體」裡 

8 I2C 序列通訊介面與 LCD 顯示器

8-1 認識文字型 LCD 顯示模組

動手做 8-1 並列連接 LCD 顯示器 

8-2 認識 I2C 介面

動手做 8-2 掃描 I2C 匯流排連接的週邊位址 

8-3 LCD 顯示器的特殊字元和自訂字元

動手做 8-3 在 LCD 上顯示自訂字元符號 

動手做 8-4 透過 I2C 介面串連兩個 Arduino 板 

動手做 8-5 在 I2C 介面上傳送整數資料

8-4 DHT11 數位溫濕度感測器 

動手做 8-6 製作數位溫濕度顯示器

9 類比信號處理

9-1 讀取類比值

動手做 9-1 從序列埠讀取「類比輸入」值

9-2 認識光敏電阻與分壓電路

動手做 9-2 使用光敏電阻製作小夜燈

9-3 壓力感測器與彎曲感測器

9-4 電容式麥克風元件與運算放大器 

動手做 9-3 自製麥克風聲音放大器（拍手控制開關） 

動手做 9-4 拍手控制開關改良版 

10 變頻控制 LED 燈光和馬達

10-1 調節電壓變化

10-2 類比輸出（PWM）指令和預設頻率 

動手做 10-1 調光器 

動手做 10-2 隨機數字與燭光效果

動手做 10-3 透過序列埠調整燈光亮度

10-3 認識直流馬達

10-4 認識電晶體元件 

動手做 10-4 電晶體馬達控制與調速器

11 發音體、超音波距離感測、物件導向程式設計與自製程式庫

11-1 發音體和聲音

11-2 使用 tone() 函數發出聲音 

動手做 11-1 演奏一段瑪莉歐旋律

11-3 認識超音波

動手做 11-2 使用超音波感測器製作數位量尺

11-4 物件導向程式設計：自己寫程式庫

12 馬達控制板與自動迴避障礙物的自走車

12-1 控制馬達正反轉的 H 橋式馬達控制電路 

動手做 12-1 編寫馬達驅動程式模組 

動手做 12-2 自動迴避障礙物的自走車

13 伺服馬達、數位濾波、資料排序與體感控制機械雲台

13-1 認識伺服馬達

動手做 13-1 吃錢幣存錢筒

動手做 13-2 自製伺服馬達雲台

13-2 簡易數位濾波以及資料排序演算法

13-3 使用陀螺儀和加速度計模組控制伺服馬達雲台 

13-4 從陀螺儀和加速度計取得角度 

動手做 13-3 讀取 IMU 數據並繪圖顯示 

動手做 13-4 透過「序列埠繪圖家」 呈現訊號波形

動手做 13-5 使用 IMU 感測器 控制伺服馬達 

14 紅外線遙控、施密特觸發器與循跡自走車

14-1 認識紅外線

動手做 14-1 使用 IRremote 程式庫解析紅外線遙控值 

動手做 14-2 使用紅外線遙控器控制伺服馬達

動手做 14-3 從 Arduino 發射紅外線 遙控電器 

14-2 認識反射型與遮光型光電開關 

動手做 14-4 光電子琴製作

14-3 紅外線循跡/避障模組與施密特觸發器 

14-4 認識電壓比較器 

14-5 製作循跡自走車 

動手做 14-5 組裝自走車

15 手機藍牙遙控機器人製作

15-1 電波、頻段和無線傳輸簡介

15-2 認識藍牙（Bluetooth） 

15-3 5V 和 3.3V 電壓準位轉換 

動手做 15-1 使用軟體序列埠 (SoftwareSerial) 連接 Arduino 與藍牙模組

動手做 15-2 用 Android 手機藍牙遙控機器人

15-4 透過 AT 命令更改藍牙模組的名稱

動手做 15-3 透過 AT 命令更改藍牙 模組的名稱 

16 RFID 無線識別裝置

16-1 認識條碼與 RFID 

動手做 16-1 讀取 Mifare RFID 卡的 UID 碼 

動手做 16-2 Mifare RFID 的門禁系統實驗

16-2 Mifare Classic 1KB 的記憶體結構

動手做 16-3 讀寫 RFID 卡片資料（扣款與充值）實驗 

17 網路與 HTML 網頁基礎＋嵌入式網站伺服器製作

17-1 認識網路與 IP 位址

17-2 網域名稱、URL 網址和傳輸協定

動手做 17-1 認識網頁與 HTML 

17-3 網路的連線標準與封包 

17-4 認識 HTTP 通訊協定

17-5 連接乙太（Ethernet）網路卡建立 Arduino 微型網站伺服器 

動手做 17-2 建立微型網站伺服器

18 網路家電控制

18-1 使用 Webduino 程式庫建立微型網站 

動手做 18-1 監控遠端的溫濕度值

18-2 傳遞資料給網站伺服器 

動手做 18-2 建立網頁表單

18-3 認識傳遞資料的 GET 方法和查詢字串 

動手做 18-3 建立接收 POST 表單資料的自訂命令 

18-4 控制家電開關

動手做 18-4 使用繼電器控制家電開關

19 ESP8266 控制板 Wi-Fi 物聯網應用實作

19-1 ESP8266 模組 

19-2 Wemos D1 mini 板的接腳

19-3 使用 Arduino IDE 開發 ESP8266 控制板程式 

19-4 認識 Wi-Fi 無線網路

19-5 使用 ESP8266 的 WiFi 程式庫連接無線網路 

動手做 19-1 使用 ESP8266WebServer 程式庫建立 HTTP 伺服器

動手做 19-2 處理 GET 或 POST 請求 

19-6 PIR 人體感應器

動手做 19-3 偵測人體移動

19-7 從 ESP8266 串連網路服務 

動手做 19-4 從 D1 板（ESP8266）連結網站伺服器

動手做 19-5 自動發送 LINE 訊息的入侵警報系統 

19-8 在 ESP8266 的快閃記憶體中儲存網頁檔案 

動手做 19-6 建立非同步網站伺服器讀取並傳送網頁檔案 

動手做 19-7 動態網頁調光器 

19-9 使用 MOSFET 元件轉換邏輯電位 

A 中斷處理與交流電調光器製作

A-1 輪詢 VS 中斷 

A-2 調整交流電的輸出功率

A-3 定時觸發執行的 TimerOne 程式庫

動手做 A-1 交流電調光器電路 

PDF 電子書

B 燒錄 ATmega 微處理器的開機啟動程式 (bootloader)

動手做 B-1 用麵包板組裝 Arduino 微電腦實驗板

動手做 B-2 使用 Arduino Uno 控制板燒錄 bootloader 

動手做 B-3 連接電腦的 USB 介面並上傳程式檔 

C 改造 3C 小玩意的控制鈕

C-1 認識光電耦合元件

D 認識焊接工具：焊錫、電烙鐵及焊接助手

D-1 焊接工具

動手做 D-1 基礎焊接練習 

動手做 D-2 焊接鱷魚夾

D-2 印刷電路板及萬用板 

動手做 D-3 焊接電路板

動手做 D-4 活用 USB 電源供應器

E 使用 App Inventor 開發 Android App

E-1 認識 App Inventer 2.0

E-2 建立第一個 App Inventor 專案：聲音播放程式

E-3 藍牙遙控機器人 App 的程式碼說明 

F 使用 Wii 搖桿控制機械手臂

F-1 認識 Wii 左手把的通訊介面：I2C

動手做 F-1 讀取 Wii 左手把的搖桿、按鈕與加速度計值

動手做 F-2 使用 Wii 左手把控制機械手臂

G Arduino + Flash 整合互動應用

G-1 Arduino + Flash = 多元互動媒體 

動手做 G-1 測試 Arduino 與 Flash 連線

動手做 G-2 「接電子零件」互動遊戲

G-2 認識 Arduino 的 String（字串）程式庫

動手做 G-3 Flash 燈光開關和調光器

G-3 使用 Firmata 在 Flash 和 Arduino 之間傳遞資料

H 使用 RFID 製作問答遊戲

H-1 RFID 模組介紹與標籤讀取實驗

動手做 H-1 讀取 RFID 標籤 

H-2 儲存與比對 RFID 編碼 

動手做 H-2 使用 RFID 控制開關

動手做 H-3 使用 RFID 進行 Flash 問答遊戲 

I 製作 MIDI 電子鼓

I-1 認識 MIDI 

I-2 MIDI 訊息格式

動手做 I-1 透過 Arduino 演奏 MIDI 音樂

動手做 I-2 透過「虛擬 MIDI」介面演奏音樂 

動手做 I-3 製作 MIDI 電子鼓",https://cf-assets2.tenlong.com.tw/products/images/000/145/832/medium/9789863126232_bc.jpg?1583118288
精通 Go 程式設計 (The Go Programming Language),"Alan A. A. Donovan, Brian W. Kernaghan 著、楊尊一 譯",碁峰資訊,9789864761333,2016/8/30,"<內容簡介>

本書是學習Go語言的權威資源，它展現如何撰寫清楚且正確的Go程式以解決實務上的問題。閱讀此書無需Go或其他特定語言的經驗，JavaScript、Ruby、Python、Java或C++等程式設計師都能夠輕鬆上手。

＊第一章討論Go的基本概念，介紹檔案輸出入、文字處理、簡單圖形、與網路用戶端以及伺服器等。

＊前幾個章節涵蓋了Go程式的結構元素：語法、流程控制、資料型別、與組織程式套件、檔案及函式。書中範例展示標準函式庫的套件並示範如何自行建構套件。其後的章節則深入解釋套件機制、如何使用Go工具建構、測試與維護專案。

＊方法與介面相關章節介紹Go獨特的物件導向程式設計方式，其方法可以在間接滿足條件的型別與介面上宣告。這些章節以實際的範例解釋了封裝、組合與可替換性的重要原則。

＊兩個與並行性有關的篇章深入此越顯重要的主題。首先是goroutine與channel基本機制的討論，描述Go最為人稱道的交談循序程式。其次是使用共用變數的傳統並行性。這些章節為首次遭遇並行性的程式設計師提供堅實的基礎。

＊最後兩章探索Go的低階功能，一個是使用reflection的元編程藝術，另一個是如何使用unsafe套件在特殊情況下跳脫型別系統以及使用cgo工具建構Go的C函式庫連結。

書中數百個有趣與實用的Go範例程式涵蓋整個語言最重要的套件與各種應用。每一章都有練習題以測試你的理解並探索擴充與替代方案。原始碼可從http://gopl.io/下載並能使用go get命令取得、建構、與安裝。

<章節目錄>

Chapter 1 基本入門

Chapter 2 程式結構 

Chapter 3 基本資料型別

Chapter 4 組合型別

Chapter 5 函式 

Chapter 6 方法 

Chapter 7 介面 

Chapter 8 Goroutine 與 Channel 

Chapter 9 共用變數並行性 

Chapter 10 套件與工具 

Chapter 11 測試 

Chapter 12 反射 

Chapter 13 低階程式設計",https://cf-assets1.tenlong.com.tw/images/111035/medium/ACL047300.jpg
Python 非同步設計｜使用 Asyncio (Using Asyncio in Python ),"Caleb Hattingh 著
          林信良 譯",歐萊禮,9789865025915,2020/8/19,"理解Python非同步設計特性



「非同步是程式寫作者手中極具威力的工具之一，然而新手難以掌握。這本小書揭開了Python非同步程式設計的神秘色彩，教你撰寫出能多工的程式碼。」

－Charles Giver

資料科學家，摩根大通



如果你是被asyncio的複雜給耽誤了的Python開發者之一，是時候另眼相看了。Asyncio複雜的原因在於，它試圖同時解決框架設計者與直接使用的開發者，在並行網路程式設計方面的問題。直接使用的開發者只需要在乎asyncio API中一小部份的特性，只不過正確地找出這些特性需要些技巧，而這正是這本實用書的著力之處。



Python開發老手Caleb Hattingh將帶你認識asyncio的基礎－足以開始寫個基於事件的簡單程式。從中你可以瞭解到，相較於先佔式多工(執行緒)，asyncio為何是更安全的選擇，以及面對同時間數以萬計的socket連線時，API如何簡單地提供支援。



‧asyncio與執行緒在並行網路設計方面的重要比較

‧整體瞭解一下asyncio，有個快速起步會用來探討基於事件的程式設計中，底層的迴圈機制

‧認識asyncio特性中，針對直接使用開發者與框架設計者的不同特性

‧理解asyncio新的async/await語法，以及協程、Task、Future API

‧對於一些asyncio相容的第三方程式庫，提供詳細的案例研究(附程式碼)

 

<序>

Python 3.4導入了asyncio程式庫，而Python 3.5提供async與await關鍵字，讓這個程式庫用來更為愉悅，這些新特性可以進行所謂的非同步程式設計。

我會用Asyncio來代表這些新特性，Python社群對這些新特性一直抱著謹慎的態度；社群中有些人認為它們複雜而難以理解，不單是初學者有這樣的觀點：Python社群的貢獻者中有些人也立場明確地表示，他們對Python中Asyncio API的複雜性有疑慮，而社群中的教育工作者也擔心，不知道該怎麼樣才能教好Asyncio。

對於Python有個幾年經驗的人們，之前都用過執行緒，就算你沒用過，應該也遇過阻斷吧！例如，如果使用過request程式庫撰寫程式的話，一定注意過程式在進行request.get(url)時會暫停一陣子；這就是阻斷行為。

對於只執行一次的作業，這沒什麼問題；然而，若要同時取得一萬個URL的資料，使用request就會有問題。大規模的並行是使用Asyncio的重要原因之一，不過Asyncio另一個重大的吸引力是，優於先佔式執行緒的安全性：使用Asyncio，比較能避開競速（race condition）方面的臭蟲。

本書的目的是讓你對這些新特性有個基本認識，知道為何要導入這些特性，以及如何在自身專案中使用這些特性。



    

    作者簡介
    
      Caleb Hattingh 有20年以上的程式設計經驗，擅長Python，對寫程式充滿熱情，他寫過的軟體包括了化學工程、客戶關係管理(CRM)軟體、飯店產業、GPS追蹤、自然語言處理等各式專案。他擁有化學工程碩士學位。

    

    目錄大綱
    
      第一章 簡介Asyncio

ThreadBots餐廳

閉幕語

Asyncio想解決的問題？

第二章 Thread的真相

執行緒的優點

執行緒的缺點

案例研究：機器人與餐具

第三章 盤點Asyncio

快速起步

Asyncio之塔

協程

事件迴圈

Task與Future

非同步情境管理器：async with

非同步迭代器：async for

更簡單的非同步產生器函式

非同步包含式

適當地啟動與關機

第四章 20 個沒用過的Asyncio 程式庫（不過⋯哦，別擔心）

Stream（標準程式庫）

Twisted

Janus 佇列

aiohttp

ØMQ（ZeroMQ）

asyncpq 與Sanic

其他程式庫與資源

第五章 想法總結

附錄A Python 非同步支援簡史

附錄B 補充資料",https://cf-assets2.tenlong.com.tw/products/images/000/151/391/medium/A641.jpg?1597029603
Spring Boot 情境式網站開發指南｜使用 Spring Data JPA、Spring Security、Spring Web Flow,曾瑞君,碁峰資訊,9789865025229,2020/6/19,"使用全Spring框架建構新一代企業級網站！

本書一次蒐錄所有技能！



如何讓網站使用者有更佳的體驗一直是歷久不衰的話題。使用Spring Web Flow框架讓使用者在預先定義好的情境裡，逐步被引導完成複雜操作，我們稱為情境式網站。



伴隨企業資料上雲，物聯網、智慧型手機的普及，資安事件也逐年攀升；網路攻擊的頻率不再屈指可數，已經成為企業營運的日常威脅。OWASP統計的TOP 10攻擊模式提供企業資安防禦的方向，使用Spring Security框架加上簡易設定就可以築起堅實城牆。



Spring框架是Java語言裡最熱門的框架。打造一個功能強大、資訊安全的網站，使用Spring MVC、Spring Security、Spring Data JPA，再搭配Spring Boot以簡化設定並快速布署幾乎已經是業界開發標準。



本書介紹Spring框架模組的運作機制，書末專案實作結合Spring Web Flow以提升使用者操作體驗，完整呈現新一代企業網站的建置策略。



    

    作者簡介
    
      曾瑞君 畢業於台灣大學土木工程學系與土木工程學研究所。他不是科班的資訊系畢業生，但因為對Java程式設計、資訊安全、資料庫管理等領域的興趣與工作需要，涉獵之餘取得不少國際證照。Java程式設計如SCJP、SCWCD、SCBCD、SCJD、OCEJWSD、OCPWCD、OCAJP 7&8、OCPJP 7&8；資訊安全領域如EC-Council CEH、ECSP Java、ECSA；資料庫管理如9i OCP、10g OCP、9i PLSQL Certification、SQL Server MCTS等。

目前於電訊盈科企業方案(PCCW Solutions)擔任軟體架構師，過去則在明基電通、華碩電腦、訊連科技、台北富邦銀行、宏達國際電子等公司擔任DBA與Java程式設計、架構分析職務，並曾在台灣高速鐵路股份有限公司研發企業公版平台並推展資安工作。

程式開發之餘喜歡與人接觸並分享自己的學習經驗，公餘除了撰寫Java技術書籍外，曾在巨匠電腦指導學員取得國際認證，也常在台灣科技大學、文化大學等學校講授關於程式開發與資訊安全相關課程(行政院勞動部勞動力發展署產業人才投資方案補助)，可於FB社團「Java技術與認證交流平台」與作者交流。

    

    目錄大綱
    
      01 使用 Maven 管理 Java 專案

02 JPA 與資料庫

03 使用 JPQL 查詢語言

04 Criteria API 入門

05 使用 Spring Data JPA 讓 ORM 更聰明

06 OWASP 高風險資安漏洞介紹

07 使用 Spring Security 建構安全的網站

08 使用 Spring Boot 簡化 Spring 開發

09 使用 Spring Web Flow 打造情境式網站",https://cf-assets2.tenlong.com.tw/products/images/000/149/202/medium/ACL058600.jpg?1591784711
圖解AI｜機器學習和深度學習的技術與原理,"株式会社アイデミー, 山口達輝, 松田洋之
          衛宮紘 譯",碁峰資訊,9789865025885,2020/10/16,"收錄豐富的圖示與詳盡的解說，即便完全零知識也能夠輕鬆學習。

機器學習與深度學習的原理與技術，單靠這一本 就能深入瞭解的教科書



「人工智慧」、「機器學習」、「深度學習」這些以前在科幻小說中才會見到的字眼，如今已經深入我們的日常，成為大家平日琅琅上口的名詞。可是，真的想要深入一點了解這些名詞，一翻開相關書籍，看到滿滿的數學公式頭就暈了，難道沒有人能夠用大家都聽得懂的方式解釋這些科技名詞嗎？



本書就是因應您心中的吶喊而生的一本書。這本書不會給你滿滿的數學式，而是藉由生活化的舉例、圖解進行說明，盡可能地表達人工智慧的正確知識。期望各位能夠透過本書，觸及機器學習的趣味與可能性，進而踏入機器學習的世界中。



藉由本書，您將可以：

．了解人工智慧、機器學習、深度學習三者之間的關係

．機器學習的程序與核心技術

．了解機器學習應用了哪些演算法

．深度學習的程序與核心技術

．了解深度學習應用了哪些演算法

 

<序>

近年，出現愈來愈多不需要機器學習資料庫、程式設計的機器學習服務，即便不是這方面的專家，只要準備好資料利用這類服務，就能夠獲得相應的結果。然而，明明不清楚機器學習演算法是如何運行，卻毫無根據地相信跑出的結果，將其用於重要的商業場景上，不得不說是相當危險的情況。一般的IT工程學會兼顧初學者與熟練者，網羅各種網路文章、專業書籍的解說。然而，在機器學習的習得上，網路文章通常給人偏重「容易閱讀」的印象，但有許多文章省略了必要的說明，難以讓人扎實地理解機器學習。而專業書籍的解說，又使用了大量的數學公式，這對以成為AI工程師為目標的人來說，進入的門檻相當高。



本書採取折衷的做法，不是堆砌數學式進行艱難的解說，而是藉由示例、插圖用簡單易懂的方式講解，盡可能正確表達AI工程師必須理解的知識。期望各位能夠透過本書，觸及機器學習的趣味與可能性，進而踏入機器學習的世界當中。



    

    作者簡介
    
      山口 達輝

Aidemy股份有限公司的工程師。在Aidemy Premium Plan中，指導學員基本的機器學習程式設計、機器學習的實作。大學專攻運輸的自動駕駛技術，但在其他學科課程上，偶然從講師的題外話感受到機器學習的可能性，遂轉而成為AI工程師。

現在的興趣是人工智慧與腦科學的科技整合。「何謂人心？」這從國中時期就抱有的疑問再次點燃於胸中，開始大量閱讀認知科學的論文。



松田 洋之

Aidemy股份有限公司的工程師，在Aidemy Premium Plan中，協助回答學員的問題、諮詢討論、Aidemy的教材修正。原為文科出身，因高中時期對三角函數的加法定理感到挫折，大學起初選擇文學系（經濟學），但途中轉而攻讀工學系，成為機器學習工程師。興趣是經濟學與資訊科學的融合領域，前者是討論財產分配的最佳化，後者是討論運算資源的最佳化，由這點認為兩者的差異並不大。另外，因感覺機器學習幾乎不會用不到積分，而確信即便是文科出身，只要正確學習也能夠開拓通往機器學習工程師的道路。

 

    

    目錄大綱
    
      第1章｜人工智慧的基礎知識

01 何謂人工智慧？

02 何謂機器學習（ML）？

03 何謂深度學習（DL）？

04 人工智慧與機器學習的普及過程

第2章｜機器學習的基礎知識

05 監督式學習的機制

06 非監督式學習的機制

07 增強學習的機制

08 統計與機器學習的差異

09 機器學習與特徵量

10 擅長與不擅長的領域

11 機器學習的運用範例

第3章｜機器學習的程序與核心技術

12 機器學習的基本工作程序

13 蒐集資料

14 資料變形

15 模型的作成與學習

16 批次學習與線上學習

17 使用測試資料驗證預測結果

18 學習結果的評估基準

19 超參數與模型的調整

20 主動學習

21 相關與因果

22 反饋迴圈

第4章｜機器學習的演算法

23 迴歸分析

24 支援向量機

25 決策樹

26 整體學習

27 整體學習的運用

28 邏輯迴歸

29 貝葉斯模型

30 時序分析與狀態空間模型

31 K 近鄰法（K-NN）與 K 平均法（K-Means）

32 維度縮減與主成分分析

33 最佳化與遺傳演算法

第5章｜深度學習的基礎知識

34 類神經網路與其歷史

35 深度學習與圖像辨識

36 深度學習與自然語言處理

第6章｜深度學習的程序與核心技術

37 誤差反向傳播法的類神經網路學習

38 類神經網路的最佳化

39 梯度消失問題

40 遷移學習

第7章｜深度學習的演算法

41 卷積類神經網路（CNN）

42 遞歸類神經網路（RNN）

43 增強學習與深度學習

44 自動編碼器

45 GAN（生成對抗網路）

46 物體偵測

第8章｜系統開發與開發環境

47 編寫人工智慧的主要程式語言

48 機器學習用資料庫與框架

49 深度學習的框架

50 GPU程式設計與高速化

51 機器學習服務",https://cf-assets2.tenlong.com.tw/products/images/000/153/418/medium/ACD020500.jpg?1601974636
"Python 機器學習 (下), 3/e (Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow, 3/e)","Sebastian Raschka、Vahid Mirjalili　著
          劉立民、吳建華 譯",博碩文化,9789864345199,2020/10/6,"Python機器學習第三版（下）

Python Machine Learning - Third Edition



第三版－最新修訂版，新增TensorFlow 2、GAN和強化學習等實用內容

使用Python的scikit-learn和TensorFlow 2融會貫通機器學習與深度學習



循序漸進、由淺入深，好評熱銷再進化！最新修訂的《Python機器學習第三版》是一本不容錯過的全方位指南，也是讀者在建立機器學習系統時的必備參考。有別於其他機器學習教科書，本書使用Python探求機器學習和深度學習的技術精髓，強調豐富實用的程式範例、條理分明的數學解釋，以及直覺友善的圖解說明，帶領讀者探索機器學習的眾多子領域，讓艱澀的概念栩栩如生。



許多讀者告訴我們，他們非常喜歡本書第二版的前12章，因為它們全面介紹了機器學習與Python的科學計算。為了確保這些內容的相關性，我們依據讀者回饋，回顧並修改了這些章節，以支援最新版本的NumPy、SciPy、pandas、matplotlib和scikit-learn，並規劃成本書的上冊。而TensorFlow 2.0更是深度學習領域最振奮人心的事件之一，所有與TensorFlow有關的章節（第13章到第16章，規劃成本書的下冊）都進行了大幅度修改。除了介紹Keras API與scikit-learn的最新功能之外，本書也探討自然語言處理（NLP）的子領域「情緒分析」，以及強化學習（RL）和生成對抗網路（GAN）等時下最流行的AI技術（第17章和第18章）。



無論你是有經驗的程式設計師，或是機器學習新手，或你只想進一步深入了解機器學習的最新發展，本書將是你在機器學習之旅中的絕佳良伴。



在這本書中，你將學到：



⦁掌握能讓機器從數據中「學習」的框架、模型和技術

⦁使用scikit-learn進行機器學習、使用TensorFlow進行深度學習

⦁利用機器學習來做影像分類、情緒分析與智慧Web應用程式

⦁訓練類神經網路、GAN與其它模型

⦁結合機器學習模型與Web應用程式

⦁為機器學習工作清理並準備數據

⦁用深度卷積類神經網路來分類影像

⦁了解評估和調校模型的最佳實作

⦁使用迴歸分析來預測連續目標

⦁利用「集群」來發掘數據中隱藏的模式與結構

⦁使用「情緒分析」深入研究文本和社群媒體數據

⦁上冊包含本書前12章，下冊則包含第13章到第18章。



【下載範例程式檔案】

本書的程式碼是由GitHub託管，可點選下面圖案前往下載：

https://github.com/rasbt/python-machine-learning-book-3rd-edition



【下載本書的彩色圖片】

我們還提供您一個PDF檔案，其中包含本書使用的彩色圖表，可以在此下載：

https://static.packt-cdn.com/downloads/9781789955750_ColorImages.pdf

 


        

    

    作者簡介
    
      Sebastian Raschka　擁有密西根州立大學（Michigan State University）的博士學位，在那裡，他專攻開發將「計算生物學」（computational biology）與「機器學習」結合使用的方法。2018年的夏天，他加入威斯康辛大學麥迪遜分校（University of Wisconsin-Madison），擔任「統計學」的助理教授。他的研究活動包括開發「新的深度學習架構」來解決生物識別（biometrics）領域的問題。



他引以為傲的成就之一是他的著作《Python機器學習》，這也是Packt和Amazon上的暢銷書。本書在2016年榮獲ACM的最佳計算類別獎項（Best of Computing award），並被翻譯成多種不同語言，包括德文、韓文、中文、日文、俄文、波蘭文和義大利文。



Vahid Mirjalili 是密西根州立大學的機械工程博士，專攻大規模「分子結構」計算模擬的新方法研究。他曾是密西根州立大學「iPRoBe實驗室」的一員，致力於各種機器學習在「電腦視覺」與「生物識別」中的應用專案。在「iPRoBe實驗室」與「學術界」耕耘了多年之後，他最近加入3M公司，成為一位研究科學家，利用他的「專業知識」以及應用機器學習與深度學習的「先進技術」，在各種應用程式中解決真實世界的問題，讓生活變得更好。

    

    目錄大綱
    
      前言



第13 章：使用TensorFlow來平行化類神經網路的訓練

TensorFlow 與訓練效能

使用TensorFlow 的第一步

使用td.data 來建立輸入管線－TensorFlow Dataset API

在TensorFlow 中建立NN模型

為多層網路選擇啟動函數

小結



第14章：更深入地研究TensorFlow的運作機制

TensorFlow的主要特點

TensorFlow的計算圖：轉移到TensorFlow v2

用來儲存與更新模型參數的TensorFlow變數物件

利用自動微分和GradientTape來計算梯度

透過Keras API簡化一般架構的實作

TensorFlow估計器

小結



第15章：使用深度卷積類神經網路來做影像分類

卷積類神經網路中的模塊

把所有元件整合起來建立一個CNN

以TensorFlow實作深度CNN

以CNN對臉部圖片做性別分類

小結



第16章：以遞迴類神經網路來對循序數據建模

循序數據簡介

以RNN來對循序數據建模

使用TensorFlow來實作多層RNN的序列建模

使用變形模型了解語言

小結



第17章：使用生成對抗網路合成新數據

生成對抗網路簡介

從頭開始實作一個GAN

使用卷積與Wasserstein GAN來改進合成影像的品質

其他的GAN應用

小結



第18章：在複雜的環境中以強化學習來做決策

簡介－從經驗中學習

RL的理論基礎

強化學習演算法

實作我們的第一個RL演算法

深度Q學習法簡介

章節與本書總結",https://cf-assets2.tenlong.com.tw/products/images/000/152/676/medium/MP12028.jpg?1600509914
強者用 PyTorch：實作史上最經典 AI 範例,集智俱樂部,深智數位,9789865501129,2020/1/20,"本書特色

►深度學習、PyTorch的入門書

►透過實際經典案例循序講解

內容簡介

 

還在用難用的Tensorflow嗎？還在用太簡單的Keras嗎？

2020年將是Pytorch正式超越Tensorflow、一統人工智慧框架世界的時代，如果還在頭痛怎麼用Tensorflow實作MNIST，快點投入PyTorch的懷抱吧！

本書實作最經典的人工智慧神經網路的案例，並且放入最新真實世界中的應用範例，如果有心要學習人工智慧，這本PyTorch實例書將帶你完成史上最有名的幾個經典範例，讓你功力大增之外，更一舉成為人工智慧的強者！

全書重點包括：

► 深度學習一路走來的歷史

► PyTorch的張量、自動微分及nn模組的介紹

► 預測共享單車投放數量

► 中文文章情緒分析器

► 一定要會的用CNN完成MNIST的辨識

► 大型遷移學習對動物分類進行預測

► MNIST的進一步，幫你把數字加起來

► 自己動手做PRISMA：20種藝術家風格轉到你的照片

► 假新聞有什麼稀奇，假以亂真的照片才叫厲害：GAN實作

► NLP的大神Word2Vec的實作

► 人工智慧音樂家：利用LSTM製作自動作曲機

► Google的祕密武器：神經網路翻譯系統實作

► 外掛有什麼了不起？用AI打電動，強化學習實作

專家推薦

「這本書緊接業界潮流，將人工智慧科普帶入了後AlphaGo 時代：遊戲飛鳥、自動作曲、語義星空⋯⋯涵蓋了深度學習領域的主流玩法。書中既有清晰容易的知識說明，讓你打好理論基礎，又有詳細的程式展示，一步步地教你做實際專案。這是一本揭示深度學習的秘笈！」

袁行遠，彩雲科技CEO、創始人

「本書寓教於樂，精心設計的實戰案例和循序漸進的學習方式都令人耳目一新。先從實戰專案出發，然後引用理論說明，最後深入剖析工作原理，環環相扣，引人入勝。期待看到PyTorch 之火的燎原之勢。」

高文超，微軟研究院軟體開發工程

「以2011 年AlexNet 贏得ImageNet 競賽為起始點，深度學習迅速席捲了整個人工智慧領域，但目前出版的有關深度學習的書大多偏重理論。這本書注重理論和實作的緊密結合，讀者可以在瞭解深度學

習原理之後，立刻跟隨書中的程式動手實作，加深了解。如果想要追上人工智慧的浪潮，這本書是一個不錯的開始。」

鮑捷，文因互連CEO、聯合創始人

適合讀者群：人工智慧相關軟體工程師、對人工智慧有興趣者，或作為深度學習教材用。



    

    作者簡介
    
      集智俱樂部（Swarma Club）

成立於2003年，是一個從事學術研究、享受科學樂趣的探索者團體。宣導以平等開放的態度、科學實證的精神，進行跨學科的研究與交流，力圖搭建一個「沒有圍牆的研究所」。 

    

    目錄大綱
    
      前言

01 深度學習簡介

1.1 深度學習與人工智慧

1.2 深度學習的歷史淵源

1.3 深度學習的影響因素

1.4 深度學習為什麼如此成功

1.5 小結

1.6 參考文獻

02 PyTorch 簡介

2.1 PyTorch 安裝

2.2 初識PyTorch

2.3 PyTorch 實例：預測房價

2.4 小結

03 單車預測器：你的第一個神經網路

3.1 共享單車的煩惱

3.2 單車預測器1.0

3.3 單車預測器2.0

3.4 剖析神經網路Neu

3.5 小結

3.6 Q&A

04 機器也懂感情-- 中文情緒分類器

4.1 神經網路分類器

4.2 詞袋模型分類器

4.3 程式實現

4.4 執行結果6

4.5 剖析神經網路

4.6 小結

4.7 Q&A

05 手寫數字識別器-- 認識卷積神經網路

5.1 什麼是卷積神經網路

5.2 手寫數字識別器

5.3 剖析卷積神經網路

5.4 小結

5.5 Q&A

5.6 擴充閱讀

06 手寫數字加法機-- 遷移學習

6.1 什麼是遷移學習

6.2 應用案例：遷移學習如何抗擊貧困

6.3 螞蟻還是蜜蜂：遷移大型卷積神經網路

6.4 手寫數字加法機

6.5 小結

6.6 實作專案：遷移與效率

07 你自己的Prisma -- 影像風格遷移

7.1 什麼是風格遷移

7.2 風格遷移技術發展簡史

7.3 神經網路風格遷移

7.4 神經網路風格遷移實戰

7.5 小結

7.6 擴充閱讀

08 人工智慧造假術-- 影像產生與對抗學習

8.1 反卷積與影像產生

8.2 影像產生實驗1-- 最小均方誤差模型

8.3 影像產生實驗2-- 產生器—識別器模型

8.4 影像產生實驗3--GAN

8.5 小結

8.6 Q&A

8.7 擴充閱讀

09 詞彙的星空-- 神經語言模型與Word2Vec

9.1 詞向量技術介紹

9.2 NPLM：神經機率語言模型

9.3 Word2Vec

9.4 Word2Vec 的應用

9.5 小結

9.6 Q&A

10  LSTM 作曲機-- 序列產生模型

10.1 序列產生問題

10.2 RNN 與LSTM

10.3 簡單01 序列的學習問題

10.4 LSTM 作曲機

10.5 小結

10.6 Q&A

10.7 擴充閱讀

11 神經翻譯機-- 點對點機器翻譯

11.1 機器翻譯簡介

11.2 編碼—解碼模型

11.3 注意力機制

11.4 更多的改進

11.5 神經翻譯機的編碼實現

11.6 更多改進

11.7 廣義的翻譯

11.8 Q&A

12  AI 遊戲高手-- 深度強化學習

12.1 強化學習簡介

12.2 深度Q 學習演算法

12.3 DQN 玩Flappy Bird 的PyTorch 實現

12.4 小結

12.5 通用人工智慧還有多遠

12.6 Q&A

12.7 參考文獻",https://cf-assets2.tenlong.com.tw/products/images/000/143/630/medium/DM2002_3D.jpg?1577344739
"Python 最強入門邁向頂尖高手之路：王者歸來, 2/e (全彩版)",洪錦魁,深智數位,9789865501532,2020/9/17,"Python 最強入門 邁向 頂尖高手 之路 王者歸來 第二版

預購即贈習題解答下載密碼

本書特色

本書第一版曾經榮登  博客來、天瓏、Momo暢銷排行榜第一名

本書除了贈送全書1101個程式實例，所有是非與選擇題皆附有習題解答，實作題部分有約260多個程式實例則是贈送所有偶數題的解答，有了這些解答讀者可以自行驗證學習成果。 

多次與教育界的朋友相聚，談到電腦語言的發展趨勢，大家一致公認Python已經是當今最重要的電腦語言了，幾乎所有知名公司，例如：Google、Facebook、…等皆已經將此語言列為必備電腦語言。了解許多人想學Python，市面上的書也不少了，許多人買了許多書，學習Python路上仍感障礙重重，原因是沒有選到好的書籍，市面上許多書籍的缺點是：

1：Python語法講解不完整，沒有建立Python紮實語法的觀念

2：用C、C++、Java觀念撰寫實例

3：Python語法的精神與內涵未做說明

4：Python進階語法未做解說

5：基礎實例太少，沒經驗的讀者無法舉一反三

6：模組介紹不足，應用範圍有限

許多讀者因此買了一些書，讀完了，好像學會了，但到了網路看專家撰寫的程式往往看不懂。就這樣我決定撰寫一本用豐富、實用、有趣實例完整且深入講解Python語法的入門書籍。其實這本書也是目前市面上講解Python書籍中語法最完整、應用範圍最廣、範例最豐富的書籍。整本書從Python風格說起，拋棄C、C++、Java思維，將Python語法、內涵與精神功能火力全開，完全融入矽谷頂尖Python工程師的邏輯與設計風格。

這是史上最多範例的Python書籍，有約1101個程式實例搭配約500個模組的函數，輔助約260個習題，外加126頁的習題電子書，用極深入、最詳細的態度講解Python語法的基礎與進階知識，例如：utf-8中文編碼、list、tuple、dict、set、bytes、bytearray、closure、lambda、Decorator、@property、@classmethod、@staticmathod…等。

此外，也將應用範圍擴充至下列應用：


	人工智慧基礎知識融入章節內容
	認識Python彩蛋
	從bytes說起、編碼(encode)、解碼(decoding)
	完整解說Unicode字符集和utf-8依據Unicode字符集的中文編碼方式
	從小型串列、元組、字典到大型數據資料的建立


生成式(generator)建立Python資料結構，串列(list)、字典(dict)、


	集合(set)
	在座標軸內計算任2點之間的距離，同時解說與人工智慧的關聯
	經緯度計算地球任2城市之間的距離，學習取得地球任意位置的經緯度
	萊布尼茲公式、尼拉卡莎、蒙地卡羅模擬計算圓週率
	基礎函數觀念，也深入到嵌套、closure、lambda、Decorator等高階應用
	Google有一篇大數據領域著名的論文，MapReduce:Simplified Data Processing on Large Clusters，重要觀念是MapReduce，筆者將對map( )和reduce( )完整解說，更進一步配合lambda觀念解說高階應用
	建立類別同時深入裝飾器@property、@classmethod、@staticmathod與類別特殊屬性與方法
	設計與應用自己設計的模組、活用外部模組(module)
	賭場騙局
	設計加密與解密程式
	Python的輸入與輸出
	檔案壓縮與解壓縮
	程式除錯(debug)與異常(exception)處理
	檔案讀寫與目錄管理
	剪貼簿(clipboard)處理
	正則表達式(Regular Expression)
	遞廻式觀念與碎形(Fractal)
	影像處理與文字辨識，更進一步說明電腦儲存影像的方法與觀念
	建立有個人風格的QR code與電子名片QR code
	認識中文分詞jieba與建立詞雲(wordcloud)設計
	GUI設計 - 實作小算盤
	實作動畫、音樂與遊戲
	Matplotlib中英文圖表繪製
	說明csv和json檔案
	繪製世界地圖
	台灣股市資料擷取與圖表製作
	網路爬蟲
	用Python執行手機傳簡訊
	用Python執行傳送電子郵件
	處理PDF檔案
	用Python控制螢幕與鍵盤
	輕量級的資料庫SQLite實作
	用Python實戰MySQL資料庫
	多工與多執行緒設計
	海龜繪圖，設計萬花筒與滿天星星
	Facebook與YouTube的應用
	實作機場人臉辨識系統
	搭配Flask設計Line Bot機器人
	網路程式Server端與Client端程式設計，筆者也設計了簡單的聊天室
	Python是一門可以很靈活使用的程式語言，本書對Python最基礎的知識與應用使用了大量靈活的實例做說明，讀者可以由這些程式實例事半功倍成為Python頂尖高手。




    

    作者簡介
    
      洪錦魁

一位跨越電腦作業系統與科技時代的電腦專家，著作等身的作家。

■ DOS 時代他的代表作品是 IBM PC 組合語言、C、C++、Pascal、資料結構

■ Windows 時代他的代表作品是 Windows Programming 使用 C、Visual Basic。

■ Internet 時代他的代表作品是網頁設計使用 HTML。

■ 大數據時代他的代表作品是 R 語言邁向 Big Data 之路。

除了作品被翻譯為簡體中文、馬來西亞文外，2000 年作品更被翻譯為MasteringHTML 英文版行銷美國，近年來作品則是在北京清華大學和台灣深智同步發行：

1：Java入門邁向高手之路王者歸來

2：Python最強入門邁向頂尖高手之路王者歸來

3：Python最強入門邁向數據科學之路王者歸來

4：Python網路爬蟲：大數據擷取、清洗、儲存與分析王者歸來

5：演算法最強彩色圖鑑 + Python程式實作王者歸來

6：網頁設計HTML+CSS+JavaScript+jQuery+Bootstrap+Google

   Map王者歸來

7：機器學習彩色圖解 + 基礎數學篇 + Python實作王者歸來

8：R語言邁向Big Data之路

9：Excel完整學習邁向最強職場應用王者歸來

他的近期著作分別登上天瓏、博客來、Momo電腦書類暢銷排行榜第一名，他的書著作最大的特色是，所有程式語法會依特性分類，同時以實用的程式範例做解說，讓整本書淺顯易懂，讀者可以由他的著作事半功倍輕鬆掌握相關知識。

    

    目錄大綱
    
      目錄

第一章　基本觀念

1-1 認識Python 

1-2 Python 的起源 

1-3 Python 語言發展史 

1-4 Python 的應用範圍  

1-5 靜態語言與動態語言 

1-6 系統的安裝與執行  

1-7 程式註解 

1-8 Python 彩蛋 

第二章　認識變數與基本數學運算

2-1 用Python 做計算

2-2 認識變數

2-3 認識程式的意義

2-4 認識註解的意義

2-5 變數的命名原則

2-6 基本數學運算

2-7 指派運算子

2-8 Python 等號的多重指定使用

2-9 刪除變數 

2-10 Python 的斷行

2-11 專題-複利計算/計算圓面積與圓周長

第三章　Python 的基本資料型態

3-1 type( ) 函數

3-2 數值資料型態

3-3 布林值資料型態

3-4 字串資料型態

3-5 字串與字元

3-6 bytes 資料

3-7 專題- 地球到月球時間計算/計算座標軸 2 點之間距離

第四章　基本輸入與輸出

4-1 Python 的輔助說明help( ) 

4-2 格式化輸出資料使用print( ) 

4-3 輸出資料到檔案

4-4 資料輸入input( ) 

4-5 處理字串的數學運算eval( )

4-6 列出所有內建函數dir( )

4-7 專題- 溫度轉換/房貸問題/面積/經緯度距離/高斯數學

第五章　程式的流程控制使用if 敘述

5-1 關係運算子

5-2 邏輯運算子

5-3 if 敘述

5-4 if ⋯ else 敘述

5-5 if ⋯ elif ⋯ else 敘述

5-6 尚未設定的變數值None

5-7 if 的新功能

5-8 專題- BMI/ 猜數字/生肖/方程式/聯立方程式/火箭升空/閏年

第六章　串列(List)

6-1 認識串列(list)

6-2 Python 簡單的物件導向觀念 

6-3 獲得串列的方法

6-4 增加與刪除串列元素

6-5 串列的排序

6-6 進階串列操作

6-7 串列內含串列 

6-8 串列的賦值與切片拷貝

6-9 再談字串

6-10 in 和not in 運算式

6-11 is 或is not 運算式

6-12 enumerate 物件

6-13 專題 大型串列/帳號管理/認識凱薩密碼

第七章　迴圈設計

7-1 基本for 迴圈

7-2 range( ) 函數 

7-3 進階的for 迴圈應用

7-4 while 迴圈 

7-5 enumerate 物件使用for 迴圈解析

7-6 專題 購物車設計/成績系統/圓周率/雞兔同籠/國王的麥粒

第八章　元組(Tuple)

8-1 元組的定義

8-2 讀取元組元素

8-3 遍歷所有元組元素

8-4 修改元組內容產生錯誤的實例 

8-5 可以使用全新定義方式修改元組元素

8-6 元組切片(tuple slices) 

8-7 方法與函數

8-8 串列與元組資料互換

8-9 其它常用的元組方法

8-10 enumerate 物件使用在元組

8-11 使用zip( ) 打包多個物件 

8-12 生成式(generator)

8-13 製作大型的元組資料 

8-14 元組的功能

8-15 專題 認識元組/統計/打包與解包/bytes與bytearray

第九章　字典(Dict)

9-1 字典基本操作 

9-2 遍歷字典

9-3 建立字典串列

9-4 字典內鍵的值是串列

9-5 字典內鍵的值是字典

9-6 while 迴圈在字典的應用

9-7 字典常用的函數和方法

9-8 製作大型的字典資料

9-9 專題 文件分析/字典生成式/星座/凱薩密碼/摩斯密碼

第十章　集合(Set)

10-1 建立集合

10-2 集合的操作 

10-3 適用集合的方法

10-4 適用集合的基本函數操作

10-5 凍結集合frozenset

10-6 專題 夏令營程式/程式效率/集合生成式/雞尾酒實例

第十一章　函數設計

11-1 Python 函數基本觀念

11-2 函數的參數設計

11-3 函數傳回值

11-4 呼叫函數時參數是串列

11-5 傳遞任意數量的參數

11-6 進一步認識函數

11-7 遞迴式函數設計recursive

11-8 區域變數與全域變數

11-9 匿名函數lambda

11-10 pass 與函數

11-11 type 關鍵字應用在函數

11-12 設計自己的range( )

11-13 裝飾器(Decorator)

11-14 專題 　函數的應用/質數

11-15 專題 歐幾里德演算法

第十二章　類別– 物件導向的程式設計

12-1 類別的定義與使用

12-2 類別的訪問權限 – 封裝(encapsulation)

12-3 類別的繼承

12-4 多型(polymorphism)

12-5 多重繼承 

12-6 type 與instance 

12-7 特殊屬性 

12-8 類別的特殊方法

12-9 專題　幾何資料的應用

第十三章　設計與應用模組

13-1 將自建的函數儲存在模組中

13-2 應用自己建立的函數模組

13-3 將自建的類別儲存在模組內

13-4 應用自己建立的類別模組

13-5 隨機數random 模組

13-6 時間time 模組

13-7 系統sys 模組

13-8 keyword 模組

13-9 日期calendar 模組

13-10 幾個增強Python 功力的模組

13-11 專題設計　賭場遊戲騙局/蒙地卡羅模擬/文件加密 

第十四章　檔案的讀取與寫入

14-1 資料夾與檔案路徑

14-2 讀取檔案

14-3 寫入檔案

14-4 讀取和寫入二進位檔案

14-5 shutil 模組

14-6 檔案壓縮與解壓縮zipfile

14-7 認識編碼格式encode

14-8 剪貼簿的應用

14-9 專題設計 分析檔案/ 加密檔案

第十五章　程式除錯與異常處理

15-1 程式異常

15-2 設計多組異常處理程序

15-3 丟出異常

15-4 紀錄Traceback 字串

15-5 finally

15-6 程式斷言assert

15-7 程式日誌模組logging

15-8 程式除錯的典故

第十六章　正則表達式Regular Expression

16-1 使用Python 硬功夫搜尋文字

16-2 正則表達式的基礎

16-3 更多搜尋比對模式

16-4 貪婪與非貪婪搜尋

16-5 正則表達式的特殊字元

16-6 MatchObject 物件

16-7 搶救CIA 情報員-sub( ) 方法

16-8 處理比較複雜的正則表示法

第十七章　用Python 處理影像檔案

17-1 認識Pillow 模組的RGBA

17-2 Pillow 模組的盒子元組(Box tuple)

17-3 影像的基本操作

17-4 影像的編輯

17-5 裁切、複製與影像合成

17-6 影像濾鏡

17-7 在影像內繪製圖案

17-8 在影像內填寫文字

17-9 專題 – 建立QR code/ 辨識車牌與建立停車場管理系統

17-10 專題 - 詞雲(WordCloud) 設計

第十八章　開發GUI 程式使用tkinter

18-1 建立視窗

18-2 標籤Label

18-3 視窗元件配置管理員Layout Management

18-4 功能鈕Button 

18-5 變數類別 

18-6 文字方塊Entry

18-7 文字區域Tex

18-8 捲軸Scrollbar

18-9 選項鈕Radiobutton

18-10 核取方塊Checkbutton 

18-11 對話方塊messagebox 

18-12 圖形PhotoImage

18-13 尺度Scale 的控制

18-14 功能表Menu 設計

18-15 專題- 設計小算盤

第十九章　動畫與遊戲

19-1 繪圖功能

19-2 尺度控制畫布背景顏色

19-3 動畫設計

19-4 反彈球遊戲設計

19-5 專題 使用tkinter 處理謝爾賓斯基三角形

第二十章　數據圖表的設計

20-1 認識mapplotlib.pyplot 模組的主要函數

20-2 繪製簡單的折線圖plot( )

20-3 繪製散點圖scatter( )

20-4 Numpy 模組

20-5 隨機數的應用

20-6 繪製多個圖表 

20-7 長條圖的製作

20-8 圓餅圖的製作pie( )

20-9 圖表顯示中文

20-10 專題- 台灣股市資料讀取與圖表製作

第二十一章　JSON 資料與繪製世界地圖

21-1 JSON 資料格式前言

21-2 認識json 資料格式

21-3 將Python 應用在json 字串形式資料

21-4 將Python 應用在json 檔案

21-5 簡單的json 檔案應用

21-6 世界人口數據的json 檔案 

21-7 繪製世界地圖

第二十二章　 Python 處理CSV/Pickle/Shelve/Excel

22-1 建立一個CSV 文件

22-2 記事本開啟CSV 檔案

22-3 csv 模組 

22-4 讀取CSV 檔案

22-5 寫入CSV 檔案

22-6 專題- 使用CSV 檔案繪製氣象圖表

22-7 台灣股市數據

22-8 Pickle 模組

22-9 Shelve 模組

22-10 Python 與Microsoft Excel

第二十三章　網路爬蟲

23-1 上網不再需要瀏覽器了

23-2 下載網頁資訊使用requests 模組

23-3 檢視網頁原始檔 

23-4 解析網頁使用BeautifulSoup 模組

23-5 網路爬蟲實戰

23-6 爬蟲實戰 - 環保署空氣品質JSON檔案實作

23-7 命令提示字元視窗

23-8 建議網路爬蟲書籍

第二十四章　Selenium 網路爬蟲的王者

24-1 順利使用Selenium 工具前的安裝工作

24-2 獲得webdriver 的物件型態 

24-3 擷取網頁

24-4 尋找HTML 文件的元素

24-5 用Python 控制點選超連結

24-6 用Python 填寫表單和送出

24-7 用Python 處理使用網頁的特殊按鍵

24-8 用Python 處理瀏覽器運作

第二十五章　用Python 傳送手機簡訊

25-1 安裝twilio 模組

25-2 到Twilio 公司註冊帳號

25-3 使用Python 程式設計發送簡訊

第二十六章　用Python 傳送電子郵件

26-1 傳送電子郵件

26-2 正式使用Python 設計一些簡單的郵件程式

第二十七章　使用Python 處理PDF 檔案

27-1 開啟PDF 檔案

27-2 獲得PDF 文件的頁數

27-3 讀取PDF 頁面內容

27-4 檢查PDF 是否被加密

27-5 解密PDF 檔案

27-6 建立新的PDF 檔案

27-7 PDF 頁面的旋轉

27-8 加密PDF 檔案

27-9 處理PDF 頁面重疊

27-10 破解密碼的暴力程式設計 

27-11 暴力破解也不是萬能

第二十八章　 用Python 控制滑鼠、螢幕與鍵盤

28-1 滑鼠的控制

28-2 螢幕的處理

28-3 使用Python 控制鍵盤

28-4 網路表單的填寫

第二十九章　SQLite 與MySQL 資料庫

29-1 SQLite 基本觀念

29-2 資料庫連線

29-3 SQLite 資料類型

29-4 建立SQLite 資料庫表單 

29-5 增加SQLite 資料庫表單紀錄

29-6 查詢SQLite 資料庫表單

29-7 更新SQLite 資料庫表單紀錄

29-8 刪除SQLite 資料庫表單紀錄

29-9 DB Browser for SQLite

29-10 將台北人口數儲存SQLite 資料庫

29-11 MySQL 資料庫

第三十章　多工與多執行緒

30-1 時間模組datetime 

30-2 多執行緒

30-3 啟動其它應用程式subprocess 模組

第三十一章 　海龜繪圖

31-1 基本觀念與安裝模組

31-2 繪圖初體驗 

31-3 繪圖基本練習

31-4 控制畫筆色彩與線條粗細

31-5 繪製圓、弧形或多邊形

31-6 填滿顏色

31-7 繪圖視窗的相關知識 

31-8 認識與操作海龜影像

31-9 顏色動畫的設計

31-10 文字的輸出

31-11 滑鼠與鍵盤訊號

31-12 專題–有趣圖案與終止追蹤圖案繪製過程

31-13 專題–謝爾賓斯基三角形

第三十二章　Python 與Facebook

32-1 Facebook 圖形API

32-2 facebook-sdk 存取資料的應用

第三十三章　聲音的控制

33-1 安裝與導入

33-2 一般音效的播放Sound( ) 

33-3 播放音樂檔案music( )

33-4 背景音樂

33-5 mp3 音樂播放器

第三十四章　人臉辨識系統設計

34-1 安裝OpenCV

34-2 讀取和顯示影像

34-3 OpenCV 的繪圖功能

34-4 人臉辨識

34-5 設計桃園國際機場的出入境人臉辨識系統

第三十五章　Python 與YouTube

35-1 安裝pytube 模組

35-2 正式使用pytube 模組

35-3 常用的pytube 物件屬性

35-4 將下載檔案存於指定資料夾

35-5 YouTube 影音檔案格式 

35-6 篩選影音檔案格式

35-7 再看下載影音檔案

35-8 下載多個檔案

35-9 專題 使用圖形介面處理YouTube影音檔案下載

第三十六章　設計Line Bot 機器人

36-1 基本觀念

36-2 Flask

36-3 建立Line Bot

36-4 Echo 程式設計

36-5 建立圖文並茂的Line Bot

第三十七章　網路程式設計

37-1 TCP/IP

37-2 URL

37-3 Socket 

37-4 TCP/IP 程式設計

37-5 UDP 程式設計

附錄A　安裝Python（電子書）

附錄B　安裝第三方模組（電子書）

附錄C　函數或方法索引表（電子書）

附錄D　RGB 色彩表（電子書）

附錄E　ASCII 碼值表（電子書）",https://cf-assets2.tenlong.com.tw/products/images/000/152/070/medium/DM2039_3D.jpg?1598863063
史上最完整細節：Kubernetes 超應用全書,龔正、吳治輝、崔秀龍、閆健勇,深智數位,9789865501211,2020/3/19,"本書特色

◎Kubernetes權威指南

◎從Docker到Kubernetes全面實作

◎最詳盡的Kubernetes介紹應用大全  

內容簡介

容器化技術已經成為運算模型演化的開端，Kubernetes作為Google 開放原始碼的Docker 容器叢集管理技術，在這場新的技術革命中扮演著重要的角色。Kubernetes 正在被許多知名公司及企業採用，Kubernetes 已站在容器新技術變革的浪潮之巔，將具有不可預估的發展前景和商業價值。

本書從一個開發者的角度去了解、分析和解決問題：從基礎入門到架構原理，從執行機制到開發原始程式，再從系統運行維護到應用實作，說明全面。全書圖文並茂，內容豐富，由淺入深，對基本原理說明清晰，對系統架構分析透徹，對實作經驗說明深刻。

本書作者的所有觀點和經驗，均是在多年建置、維護大型應用系統的過程中累積形成的。讀者透過書中的Kubernetes 開發指南、叢集管理等章節的內容，不僅可以直接學習到加強開發技能，還可以解決實作過程中經常遇到的各種關鍵問題。透過大量的實例操作和詳盡的原始程式解析，幫助讀者了解Kubernetes 的各種概念。

這是一本史上最詳細的Kubernetes介紹應用大全，全書重點如下：

Kubernetes基本概念及術語

完整安裝設定參數詳解

充份應用及了解Kubernetes的Pod

圍繞在Services上的Kubernetes

Kubernetes API及核心元件詳解

針對Kubernetes的叢集安全機制

Kubernetes的網路拓樸

Kubernetes的儲存原理，包括CEPH

利用REST開發Kubernetes應用程式

使用第三方軟體管理Kubernetes叢集

深入了解Kubernetes的記錄檔

對Windows容器/GPU的支援

POD的資源調度大全

適合讀者群：軟體工程師、測試工程師、運行維護工程師、軟體架構師、技術經理，或資深IT人士。



    

    作者簡介
    
      龔正 

HPE高級顧問，多年的IT從業經驗，具備豐富的雲端運算、大數據分析和大型企業級應用的架構設計和執行經驗，是電信、金融、互聯網等領域的資深專家。 

吳治輝

HPE資深架構師，15年以上的軟體研發經驗，專注於電信軟體和雲端運算方面的軟體研發，擁有豐富的大型專案架構設計經驗，是業界少有具備很強Coding能力的S級資深架構師。

崔秀龍 

HPE前資深架構師開源軟體、自動化愛好者，擁有十多年從業經驗，對軟體生命週期的各個環節均有深刻的理解。 

閆健勇

HPE高級專案經理、總架構師，15年以上的電信產業系統建設經驗，主導多項電信大型系統的架構設計和管理，對雲端運算和大數據在電信產業中的應用擁有豐富的經驗。

    

    目錄大綱
    
      

前言



01｜Kubernetes 入門

1.1 Kubernetes 是什麼

1.2 為什麼要用Kubernetes

1.3 從一個簡單的實例開始

1.4 Kubernetes 的基本概念和術語 



02｜ Kubernetes 安裝設定指南

2.1 系統要求

2.2 使用kubeadm 工具快速安裝Kubernetes 叢集

2.3 以二進位檔案方式安裝Kubernetes 叢集 

2.4 Kubernetes 叢集的安全設定

2.5 Kubernetes 叢集的網路設定

2.6 內網中的Kubernetes 相關設定

2.7 Kubernetes 的版本升級

2.8 Kubernetes 核心服務設定詳解

2.9 CRI（容器執行時期介面）詳解

2.10 kubectl 命令列工具用法詳解 



03｜深入掌握Pod

3.1 Pod 定義詳解

3.2 Pod 的基本用法 

3.3 靜態Pod

3.4 Pod 容器共用Volume

3.5 Pod 的設定管理 

3.6 在容器內取得Pod 資訊（Downward API）

3.7 Pod 生命週期和重新啟動策略

3.8 Pod 健康檢查和服務可用性檢查

3.9 玩轉Pod 排程

3.10 Init Container（初始化容器）

3.11 Pod 的升級和回覆 

3.12 Pod 的資源調度

3.13 使用StatefulSet 架設MongoDB 叢集



04｜深入掌握Service

4.1 Service 定義詳解

4.2 Service 的基本用法

4.3 Headless Service 

4.4 從叢集外部存取Pod 或Service

4.5 DNS 服務架設和設定指南

4.6 Ingress：HTTP 7 層路由機制



05｜核心元件執行機制

5.1 Kubernetes API Server 原理解析

5.2 Controller Manager 原理解析

5.3 Scheduler 原理解析

5.4 kubelet 執行機制解析 

5.5 kube-proxy 執行機制解析



06｜深入分析叢集安全機制

6.1 API Server 認證管理

6.2 API Server 授權管理

6.3 Admission Control 

6.4 Service Account

6.5 Secret 私密憑據

6.6 Pod 的安全性原則設定



07｜網路原理

7.1 Kubernetes 網路模型

7.2 Docker 網路基礎

7.3 Docker 的網路實現

7.4 Kubernetes 的網路實現

7.5 Pod 和Service 網路實戰

7.6 CNI 網路模型

7.7 Kubernetes 網路策略

7.8 開放原始碼的網路元件



08｜共用儲存原理

8.1 共用儲存機制概述

8.2 PV 詳解 

8.3 PVC 詳解

8.4 PV 和PVC 的生命週期

8.5 StorageClass 詳解 

8.6 動態儲存裝置管理實戰：GlusterFS

8.7 CSI 儲存機制詳解 



09｜Kubernetes 開發指南

9.1 REST 簡述

9.2 Kubernetes API 詳解

9.3 使用Java 程式存取Kubernetes API

9.4 Kubernetes API 的擴充



10｜Kubernetes 叢集管理

10.1 Node 的管理

10.2 更新資源物件的Labe

10.3 Namespace：叢集環境共用與隔離

10.4 Kubernetes 資源管理

10.5 資源緊缺時的Pod 驅逐機制

10.6 Pod Disruption Budget（主動驅逐保護）

10.7 Kubernetes 叢集的高可用部署方案

10.8 Kubernetes 叢集監控

10.9 叢集統一記錄檔管理

10.10 Kubernetes 的稽核機制

10.11 使用Web UI（Dashboard）管理叢集 

10.12 Helm：Kubernetes 應用套件管理工具



11｜Trouble Shooting 指導

11.1 檢視系統Event 

11.2 檢視容器記錄檔 

11.3 檢視Kubernetes 服務記錄檔 

11.4 常見問題

11.5 尋求幫助



12｜Kubernetes 開發中的新功能

12.1 對Windows 容器的支援

12.2 對GPU 的支援

12.3 Pod 的垂直資源調度 

12.4 Kubernetes 的演進路線和開發模式",https://cf-assets2.tenlong.com.tw/products/images/000/146/055/medium/DM2012_3D-750x933.jpg?1583307279
"NumPy 高速運算徹底解說 - 六行寫一隻程式？你真懂深度學習？手工算給你看！
            現場で使える! NumPyデータ処理入門","吉田 拓真、尾原 颯 著
          吳嘉芳、蒲宗賢 譯",旗標科技,9789863126195,2020/1/17,"硬派學習 AI 才能紮穩根基！

許多 Python 開發人員初接觸機器學習、深度學習, 往往一開始就使用當紅的 Tensorflow、Keras 等 AI 框架, 只用了短短六行就寫出一隻神經網路程式, 接著就針對參數開始東調西調、訓練模型, 為了提高神經網路模型的準確率 (Accuracy) 96.6% → 97.4% → 98.9%...而奮戰著。

只需六行？調調參數？看起來 AI 好像也不難學的樣子, 但, 這樣子就算懂 AI？

那可不一定！Tensorflow、Keras 等框架的確大幅降低你寫程式的時間成本, 卻不代表可以降低你學 AI 的學習成本, 沒有從 AI 底層運算紮實學起, 千萬別說你已經懂機器學習、深度學習！

「你在調整參數、追求準確率的過程中, 真的清楚了解每個選項背後代表的運算嗎？」

「你有自己一步一步算過 Mini-batch 的梯度下降反向傳播嗎？」

本書不使用深度學習框架, 純 Python + NumPy「一步一腳印、手工硬派」帶你學 AI,「我用手工算給你看, 你再用 NumPy 算一次, 硬派學習 AI 才能紮穩根基！」 

本書特色 : 

  □最紮實的機器學習、深度學習 LAB 實戰

‧簡單線性迴歸、多項式迴歸分析實作

‧神經網路黑盒揭秘！二元分類、多元分類的底層運算剖析

‧損失函數公式、偏微分公式...一大堆算式有看沒有懂？手工算完再跟機器比一比, 算完保證秒懂！

‧反向傳播究竟「反」在哪？逐層帶你一步步反著算, 跟著做超有感！

‧還有強化學習、Q-learning...等更多 AI 實戰應用

□初學 AI 一定要徹底搞懂 NumPy 函式怎麼用

GitHub 2019 年度報告指出：「在機器學習、深度學習相關主題, 超過一半的 repositories 是基於 NumPy 建構的」！

‧看不懂 Python 程式碼？那是 NumPy 啦！掌握 reshape()、argmax()、transpose()、exp()、linspace()、dot()、sum()...各種 AI 實作必用函式

‧ndarray 重要概念釋疑 - axis、dimension、shape、broadcasting

‧標準差、變異數、反矩陣、內積、外積...繁瑣的數學運算交給數學函式輕鬆搞定

□詳細解說, 流暢翻譯

本書由【施威銘研究室監修】, 書中針對原書進行大量補充, 並適當添加註解, 幫助讀者更加理解內容！



★歡迎加入本書社群, 和技術者們直接對話！

從做中學 Learning by doing 粉絲專頁



    


    目錄大綱
    
      Ch01 NumPy 的基礎

1-1 認識 NumPy 的基本操作

1-2 ndarray 多維陣列的基本概念

1-3 ndarray 的軸 (axis) 與維度 (dimension)

1-4 ndarray 的 dtype 屬性

1-5 ndarray 的切片 (Slicing) 操作

1-6 陣列擴張 (Broadcasting)

Ch02 NumPy基本運算函式

2-1 陣列重塑 - reshape()、resize()

2-2 在陣列最後面加入元素 – append()

2-3 判斷陣列真假值 – all()、any()

2-4 找出符合條件的元素 – where()

2-5 取出最大值、最小值 – amax()、amin()

2-6 取出最大值、最小值的索引位置 – argmax()、argmin()

2-7 陣列轉置 – transpose()

2-8 陣列排序 – sort() 與 argsort()

2-9 陣列合併 – vstack()、hstack()

2-10 建立元素都是 0 的陣列 – zeros()

2-11 建立元素都是 1 的陣列 – ones()

2-12 建立「不限定元素值」的陣列 – empty()

2-13 建立指定範圍的等差陣列 – arange()

2-14 建立指定範圍的等差陣列 – linspace()

2-15 建立單位矩陣 – eye()、identity()

2-16 將陣列展平為 1D 陣列 – flatten()

2-17 將陣列展平為 1D 陣列 – ravel()

2-18 找出不是 0 的元素 – nonzero()

2-19 複製陣列元素, 拚貼成新陣列 – tile()

2-20 增加陣列的軸數 – np.newaxis

2-21 陣列合併 – np.r_ 與 np.c_ 物件

2-22 陣列的儲存與讀取 – save() 與 load()

2-23 以文字格式儲存、讀取陣列內容 – savetxt() 與 loadtxt()

2-24 建立隨機亂數的陣列 – random 模組

Ch03 NumPy 的數學函式

3-1 基本的數學運算函式

3-2 計算元素平均值 – average() 與 mean()

3-3 計算中位數 – median()

3-4 計算元素總和 – sum()

3-5 計算標準差 – std()

3-6 計算變異數 – var()

3-7 計算共變異數 – cov() 

3-8 計算相關係數 – corrcoef()

3-9 網格陣列 – meshgrid()

3-10 點積運算 – dot()

3-11 計算矩陣的 determinant – linalg.det()

3-12 計算矩陣的「特徵值」與「特徵向量」 – linalg.eig()

3-13 計算矩陣的 rank – linalg.matrix_rank()

3-14 計算矩陣的「反矩陣」 – linalg.inv() 

3-15 計算張量積 – outer()

3-16 計算叉積 – cross() 

3-17 計算卷積 – convolve()

3-18 將連續值轉換為離散值 – digitize()

Ch04 NumPy 的實務應用

4-1 資料的正規化 (Normalization)

4-1-1 z 分數正規化

4-1-2 最小值 - 最大值正規化

4-2 迴歸分析實作

4-2-1 迴歸概念解說 (簡單線性迴歸、多項式迴歸)

4-2-2 Step1：建立 20 個 (x, y) 組合的座標點

4-2-3 Step2：餵資料給機器學習, 求出能逼近 20 個點的迴歸方程式

4-2-4 Step3：完成學習, 驗證結果

4-3 機器學習實戰 (一)：使用神經網路替鳶尾花分類

4-3-1 神經網路的基本概念 (神經元、啟動函數、損失函數)

4-3-2 Step1：備妥訓練所需的資料

資料預處理

將資料集拆分為「訓練資料集」與「測試資料集」

4-3-3 Step2：開始訓練神經網路

訓練神經網路

更新權重

進入下一週期的訓練、更新權重

4-3-4 Step3：完成訓練, 驗證結果

4-4 機器學習實戰 (二)：使用神經網路辨識手寫數字圖片

4-4-1 多層神經網路的概念

4-4-2 Step1：備妥訓練所需的資料

4-4-3 Step2：開始訓練神經網路

了解反向傳播之前要先了解前向傳播 

以計算圖呈現損失函數 L 的算式

利用「反向傳播」求損失函數 L 對各權重的偏微分

開始訓練神經網路

4-4-4 Step3：完成訓練, 驗證結果

4-5 使用 NumPy 實作強化學習

4-5-1 OpenAI Gym 是什麼

4-5-2 安裝與執行遊戲

4-5-3 用 Q-Learning 實作強化學習

4-5-4 增進 Q-Learning 的學習成效

4-5-5 策略梯度法",https://cf-assets2.tenlong.com.tw/products/images/000/143/476/medium/9789863126195_bc.jpg?1576635486
Python 程式交易應用與實作：從零開始！自動化投資實戰指南,酆士昌、劉承彥 著,博碩文化,9789864345106,2020/9/10,"將「Python程式語言」的靈活彈性及「交易策略」的獨門領域加以靈活運用的實戰指南，從零開始、即學即用！

應用Python×學習程式交易，掌握未來金融交易發展的趨勢！



隨著時代的演進，金融交易已經從傳統的臨櫃交易、電話交易、網路看盤軟體交易到手機App交易，而且程式語言已向下扎根且普及化，程式交易已是未來金融交易發展的趨勢。



在程式語言中，不同的程式語法有其適用性與進入門檻。要將程式語言應用在金融領域，須兼具直觀性與效能，因此Python成了程式交易領域中相當適合的程式語言，不論在歷史回測或是實單交易，都是實務應用的好工具。



本書是寫給程式交易新手的書籍，從Python程式語法及交易規則來開始了解，接著結合技術指標，從零逐步建立自己的交易策略，帶領你進入程式交易的領域。本書案例皆可實作，以Python套件串接實單交易，連結即時的金融交易市場，同時本書還將回測的流程更加簡化，並提供許多資訊工具、平台，這些資訊程式可減少程式交易的許多繁複流程，使你能更快速操作程式交易。



【本書特色】

◎學習進入門檻低的Python，具備在歷史回測或實單交易上的實務應用能力。

◎內容編排由淺入深，從一般的交易策略學習，逐步建立自己的交易策略。

◎以Python套件串接實單交易，並與多家券商串接，連結即時的金融交易市場。

◎結合豐富的技術指標，教你變化策略組合，建立「自動化」的投資程式。



【目標讀者】

◎想要學習Python來進行程式交易的人。

◎想要客觀且嚴守紀律來投資的人。

◎沒時間盯盤但想要自動化投資的人。

◎想要了解交易規則、學習正確金融演算法的人。



    

    作者簡介
    
      酆士昌

畢業於清華大學數學研究所應用數學組，專注於系統規劃、軟體開發與金融交易系統。目前任職金融科技公司CEO，在系統建構上有二十餘年的經驗。近年來潛心於金融科技領域，將金融大數據應用於策略回測、推進分析與實單交易的領域。目前著作共有九十餘本，在多所學校演講並擔任業師，講授大數據分析、程式交易、作業系統、程式語言等相關課程。



劉承彥

目前任職於金融科技公司經理，專注於專案管理、演算法開發與資料庫管理，擁有多年程式交易與教學授課之經驗。目前共有金融演算法相關著作五本，並在多所學校擔任業師，講授Python基礎、大數據分析以及程式交易相關課程。

    

    目錄大綱
    
      |CHAPTER 01| Python的基本語法

1.1 認識Python與環境準備

1.2 Python的操作

1.3 Python的基本語法

1.4 Python時間的應用

1.5 使用Python的外掛套件

1.6 程式流程

1.7 函數的使用



|CHAPTER 02| 交易規則與金融數據的認知

2.1 台灣金融體制介紹

2.2 投資理財基本須知

2.3 風險控管認知



|CHAPTER 03| 資料的獲取與使用方式

3.1 金融資訊的各種類型

3.2 Tick資料的意義及格式

3.3 獲得歷史資料的途徑



|CHAPTER 04| 初探回測的世界

4.1 歷史回測的架構與流程

4.2 MicroTest大數據回測平台

4.3 數據圖像化

4.4 基本策略介紹

4.5 海龜策略介紹



|CHAPTER 05 | 進階的回測

5.1 技術指標

5.2 MA均線策略介紹

5.3 RSI策略介紹

5.4 布林通道策略介紹



|CHAPTER06| 驗證交易策略的方法

6.1 如何計算股票、期貨部位的損益

6.2 交易策略的風險評估

6.3 績效指標的計算



|CHAPTER 07| 程式交易的初體驗

7.1 程式交易的架構

7.2 GOrder下單機與Haohaninfo Python套件介紹

7.3 虛擬交易所介紹

7.4 Python串接虛擬證券、虛擬期貨報價

7.5 如何透過Python串接下單及帳務



|CHAPTER 08 | 技術指標及下單指令

8.1 K線技術指標

8.2 下單指令



|CHAPTER 09| 進入即時交易策略的領域

9.1 即時逐筆交易策略建構

9.2 即時K線指標交易策略



|CHAPTER 10| 踏進實單交易的世界

10.1 策略可行性評估與建構

10.2 策略執行流程



|APPENDIX A | GOrder下單機介紹及權限開通

A.1 GOrder下單機介紹及權限開通

A.2 Gorder虛擬期權開通",https://cf-assets2.tenlong.com.tw/products/images/000/151/930/medium/MP22012.jpg?1598604162
深度學習 (Deep Learning)(繁體中文版),"Ian Goodfellow , Yoshua Bengio , Aaron Courville 著
          陳仁和 譯",碁峰資訊,9789865021924,2019/10/29,"「由三位深度學習領域專家撰寫的《Deep Learning》，是涵蓋內容最為全面的著作。對於要進入此領域的軟體工程師與學生，提供了兼具深度及廣度的觀點與淺顯數學概念，以及足供專家參考的內容。」

──Elon Musk，OpenAI共同主席；Tesla與SpaceX共同創辦人兼CEO。



「這是最完整的深度學習教科書。本書是由此領域的主要貢獻者所撰寫，清晰、全面與完整的呈現相關主題。想知道深度學習的起源、優勢與發展，請閱讀本書。」

──Geoffrey Hinton，英國皇家學會院士(FRS)，Toronto大學榮譽教授；Google傑出研究人員。



「近十年來，深度學習著實讓技術界為之傾倒。有必要為學習者、實作者與教學者撰寫一本教科書，內容包括基本概念、實務項目與進階研究主題。本書是第一本全面涵蓋的書籍，由專精於該領域富有創新性與創造力的研究人員撰寫。本書會是今後幾年的重要參考書。」

──Yann LeCun，Facebook AI研究主管；New York大學電腦科學(資訊科學)、資料科學與神經科學的教授。



深度學習是一種機器學習，透過概念階層方式，讓電腦從經驗中學習，進而理解世界。由於可利用經驗累積知識，因此無須人為操控來指定電腦所需的全部知識。概念階層容許電腦經由簡單概念建置與學習更複雜的概念，其中組成的階層圖會呈現出多層深度框架。本書內容涵蓋廣泛的深度學習主題。



本書是以數學與概念為基底，涵蓋線性代數、機率論與資訊理論、數值計算以及機器學習等相關概念。書中將論述業界實作者與行家們使用的深度學習技術，包括深度前饋網路、正則化、優化演算法、卷積網路、序列建模與實務方法；同時討論概括論述相關應用，如自然語言處理、語音辨識、電腦視覺、線上推薦系統、生物資訊與電玩遊戲等。本書提供諸多研究觀點，包含線性因子模型、自動編碼器、表徵學習、結構化機率模型、蒙地卡羅法、配分函數、近似推論與深度生成模型等理論項目。



本書適合打算投入深度學習業界或研究領域的大學生與研究生，以及想要在資訊產品或平台中納入深度學習技術的軟體工程師閱讀。





封面圖片：Daniel Ambrosi的Central Park Azalea Walk Dreamscape(danielambrosi.com)。Daniel Ambrosi的Dreamscapes(夢景)是使用Google DeepDream開源軟體(由Google的Joseph Smarr與NVIDIA的Chris Lamb修改的版本)所建構的作品，以此軟體成功處理Ambrosi數億像素的全景圖片而成。



    

    作者簡介
    
      Ian Goodfellow 是Google的研究人員(Research Scientist)。

Yoshua Bengio 是Montréal大學電腦科學(資訊科學)系教授。

Aaron Courville 是Montréal大學電腦科學(資訊科學)系助理教授。

    

    目錄大綱
    
      　本書的網站資源

　致謝

　數學符號

chapter 01　緒論

　　1.1　誰適合閱讀本書？

　　1.2　深度學習的歷史潮流

【PART I　應用數學與機器學習基礎】

chapter 02　線性代數

　　2.1　純量、向量、矩陣與張量

　　2.2　矩陣與向量的乘法

　　2.3　單位矩陣與反矩陣

　　2.4　線性相依與展成

　　2.5　範數

　　2.6　特種矩陣與向量

　　2.7　特徵分解

　　2.8　奇異值分解

　　2.9　Moore-Penrose 虛反矩陣

　　2.10　跡運算子

　　2.11　行列式

　　2.12　範例：主成分分析

chapter 03　機率與資訊理論

　　3.1　為何需要機率？

　　3.2　隨機變數

　　3.3　機率分布

　　3.4　邊際機率

　　3.5　條件機率

　　3.6　條件機率的連鎖法則

　　3.7　獨立性與條件獨立性

　　3.8　期望值、變異數與共變異數

　　3.9　常見的機率分布

　　3.10　常見函數的實用性質

　　3.11　貝氏法則

　　3.12　連續變數的技術細節

　　3.13　資訊理論

　　3.14　結構化機率模型

chapter 04　數值計算

　　4.1　overflow 與 underflow

　　4.2　不良條件狀態（病態）

　　4.3　梯度式優化

　　4.4　限制優化

　　4.5　範例：線性最小平方

chapter 05　機器學習基礎

　　5.1　學習演算法

　　5.2　配適能力、過度配適與配適不足

　　5.3　超參數與驗證集

　　5.4　估計式、偏誤與變異數

　　5.5　最大概似估計

　　5.6　貝氏統計

　　5.7　監督式學習演算法

　　5.8　非監督式學習演算法

　　5.9　隨機梯度下降

　　5.10　建置機器學習演算法

　　5.11　深度學習的需求動機

【PART II　深度網路：現代實務】

chapter 06　深度前饋網路

　　6.1　範例：學習 XOR

　　6.2　梯度式學習

　　6.3　隱藏單元

　　6.4　架構設計

　　6.5　倒傳遞與其他微分演算法

　　6.6　歷史記載

chapter 07　深度學習的正則化

　　7.1　參數範數懲罰

　　7.2　以範數懲罰做為限制優化

　　7.3　正則化與限制不足的問題

　　7.4　資料集擴增

　　7.5　雜訊穩健性

　　7.6　半監督式學習

　　7.7　多任務學習

　　7.8　提前停止

　　7.9　參數聯繫與參數共用

　　7.10　稀疏表徵

　　7.11　自助聚合與其他整體方法

　　7.12　dropout

　　7.13　對抗訓練

　　7.14　正切距離、正切傳遞與流形正切分類器

chapter 08　深度模型的訓練優化

　　8.1　學習優化與純粹優化的區別

　　8.2　類神經網路優化的挑戰

　　8.3　基本演算法

　　8.4　參數初始化策略

　　8.5　適應性學習率的演算法

　　8.6　近似二階法

　　8.7　優化策略與共通式演算法

chapter 09　卷積網路

　　9.1　卷積運算

　　9.2　動機

　　9.3　pooling

　　9.4　卷積與 pooling 做為無限強的先驗

　　9.5　基本卷積函數的變種

　　9.6　結構化輸出

　　9.7　資料型別

　　9.8　有效率的卷積演算法

　　9.9　隨機或非監督式特徵

　　9.10　卷積網路的神經科學基礎

　　9.11　卷積網路與深度學習的歷史

chapter 10　序列建模：循環網路與遞迴網路

　　10.1　展開運算圖

　　10.2　循環神經網路

　　10.3　雙向 RNNs

　　10.4　編碼器―解碼器或序列對序列架構

　　10.5　深度循環網路

　　10.6　遞迴神經網路

　　10.7　長期相依的挑戰

　　10.8　迴響狀態網路

　　10.9　洩漏單元與多時間尺度的其他策略

　　10.10　長短期記憶與其他閘控 RNNs

　　10.11　長期相依的優化

　　10.12　外顯記憶

chapter 11　實務方法論

　　11.1　效能度量

　　11.2　預設基線模型

　　11.3　決定是否收集更多資料

　　11.4　選擇超參數

　　11.5　除錯策略

　　11.6　多位數的數值辨識

chapter 12　應用

　　12.1　大型深度學習

　　12.2　電腦視覺

　　12.3　語音辨識

　　12.4　自然語言處理

　　12.5　其他應用

【PART III　深度學習研究】

chapter 13　線性因子模型

　　13.1　機率 PCA 與因子分析

　　13.2　獨立成分分析（ICA）

　　13.3　慢特徵分析

　　13.4　稀疏編碼

　　13.5　PCA 的流形詮釋

chapter 14　自動編碼器

　　14.1　undercomplete 自動編碼器

　　14.2　正則化的自動編碼器

　　14.3　表徵力、層尺寸與深度

　　14.4　隨機編碼器與解碼器

　　14.5　去雜訊自動編碼器

　　14.6　用自動編碼器學習流形

　　14.7　收縮自動編碼器

　　14.8　預測稀疏分解

　　14.9　自動編碼器的應用

chapter 15　表徵學習

　　15.1　貪婪逐層非監督式預先訓練

　　15.2　遷移學習與領域適應

　　15.3　原因因子的半監督式分解

　　15.4　分散式表徵

　　15.5　來自深度的指數增益

　　15.6　為找到潛在原因提供線索

chapter 16　深度學習的結構化機率模型

　　16.1　非結構化建模的挑戰

　　16.2　使用圖描述模型結構

　　16.3　圖模型的抽樣

　　16.4　結構化建模的優點

　　16.5　相依的學習

　　16.6　推論與近似推論

　　16.7　結構化機率模型的深度學習做法

chapter 17　蒙地卡羅法

　　17.1　抽樣與蒙地卡羅法

　　17.2　重要性抽樣

　　17.3　馬可夫鏈蒙地卡羅法

　　17.4　Gibbs 抽樣

　　17.5　個別峰值間 mixing 的挑戰

chapter 18　面對配分函數

　　18.1　對數概似梯度

　　18.2　隨機最大概似與對比散度

　　18.3　虛擬概似

　　18.4　評分匹配與比率匹配

　　18.5　去雜訊的評分匹配

　　18.6　雜訊-對比估計

　　18.7　估計配分函數

chapter 19　近似推論

　　19.1　將推論過程以優化問題看待

　　19.2　期望值最大化

　　19.3　MAP 推論與稀疏編碼

　　19.4　變分的推論與學習

　　19.5　學習近似推論

chapter 20　深度生成模型

　　20.1　波茲曼機

　　20.2　限制波茲曼機

　　20.3　深度信念網路

　　20.4　深度波茲曼機

　　20.5　用於實數資料的波茲曼機

　　20.6　卷積波茲曼機

　　20.7　針對結構化或循序輸出的波茲曼機

　　20.8　其他波茲曼機

　　20.9　經過隨機作業的倒傳遞

　　20.10　有向生成網路

　　20.11　從自動編碼器抽取樣本

　　20.12　生成隨機網路

　　20.13　其他生成方案

　　20.14　評估生成模型

　　20.15　總結

　參考文獻

　索引",https://cf-assets2.tenlong.com.tw/products/images/000/141/168/medium/9789865021924.jpg?1570688173
小輕快跨平台：王的編輯器 Visual Studio Code 聖經,韓駿,深智數位,9789865501556,2020/10/21,"本書特色

市面上第一本完整說明Visual Studio Code的中文書

 

★ 全世界軟體設計師最愛的IDE編輯器。

支援上百種程式語言，語義突顯、自動完成、自動縮排，完整中斷偵錯，跨平台，內建支援SSH、GIT，可連線到遠端的Windows/Linux/MacOS上進行開發、網頁支援、雲端支援，說不完的強大，連編輯器之神vim的愛用者都忍不住跳槽，連神之編輯器Emacs的使用者也紛紛安裝，不管你是哪作業系統的使用者，快點進入這王之編輯器！

 

★ 好評襲來

Visual Studio Code（VS Code）之所以越來越受歡迎，除了因為它本身具有某些優秀品質，許多外掛程式也功不可沒。本書的一大特色就是幫助你找到合適的外掛程式，並且指導你快速上手。無論你有興趣的是各種程式語言（JavaScript/TypeScript、Java、Python 等），還是實際的開發場景（前端、雲端原生、物聯網等），本書都提供了詳盡的指引。工欲善其事，必先利其器。相信透過本書的學習，你可以把VS Code 訂製成高效又稱手的開發環境。

—微軟Java 語言開發工具團隊首席軟體開發經理 李榕

 

VS Code 是一款極為優秀的開放原始碼產品。透過本書，你除了可以全面地了解到VS Code 的許多使用技巧，還可以學習到VS Code 團隊是如何做開放原始碼的。VS Code 團隊不僅將其程式開放原始碼，而且將整個開發過程都建立於開放原始碼環境之上。對於開放原始碼專案的開發者，VS Code 有許多值得參考和學習的地方。

—開放原始碼中國創始人兼CTO 紅薯

 

VS Code 是微軟針對多語言開發者的程式編輯器，是一款程式設計利器，深受開發者喜愛。VS Code 雖然容易上手，但卻很難精通，因為有關的技術細節比較多，外掛程式生態也比較豐富。作者憑藉其在VS Code 上的多年使用和外掛程式開發經驗，為讀者們把VS Code 的整個技術架構分門別類地整理清楚，並介紹使用技巧、外掛程式、語言服務和各種開發場景，最後達到深入淺出的目的。本書作為VS Code 技術領域的標桿圖書，在技術廣度和深度上兼具極強的參考價值，適合各種語言的開發者作為學習和參考用書。

—華為雲DevCloud 研發技術總監 王亞偉

 

VS Code 的誕生加速了開發階段的數位化進程。近年來，雲端開發理念深入人心，這表示我們需要用網際網路模式重構對開發者來說最重要的工具—IDE。作者透過本書將VS Code 的精妙之處完整呈現，不管是IDE 的使用者、開放原始碼同好還是工具開發者都不應該錯過本書。

—阿里巴巴研發平台負責人 陳鑫（花名神秀）

 

作為程式設計師，我們中的大部分人對VS Code 都再熟悉不過。但是，正如「二八法則」所揭示的那樣，80% 日常用它敲程式的程式設計師很可能只用到了其20% 的核心功能。本書帶我們全面細數VS Code 的各方面，或許其中的小基礎知識就能幫助你在未來的使用過程中提升開發效率。為了儲備與開發工具相關的知識，本書值得一讀。

—著名開放原始碼軟體ECharts 核心貢獻者之一 羨轍

 

本書從開發工具的歷史入手，由淺入深地說明了VS Code 的入門和進階知識，以及VS Code 的強大生態，並教你如何為生態、社區，甚至是VS Code本身做出自己的貢獻。這是一本關於使用VS Code 進行開發的大而全，卻又不雜的好書。

—《Node.js：來一打C++ 擴充》作者、

《精通Vim：用Vim 8 和Neovim 實現高效開發》譯者死月

 

VS Code 是入門簡單卻頗具深度的開發工具，使用者可以極快上手，但隨著深入使用，又會發現達到爐火純青的境界並非易事。本書對於開發者而言，最大的優勢在於它的系統性。從入門到進階再到擴充，整個知識系統一脈相承，開發者不再侷限於許多雜湊基礎知識的拼湊，更可以利用它使VS Code成為技術團隊不可或缺的生產力！

—騰訊雲Serverless 技術專家、百度前技術經理 王俊傑

 

VS Code 作為Visual Studio 家族的產品，也是微軟在雲端原生時代提供的輕量級開發工具。韓駿透過本書，不僅將VS Code 的豐富內容向我們展現得淋漓盡致，讓我們知其然知其所以然，而且能夠使我們在讀後舉一反三地探索VS Code 的未來。

—深圳市友浩達科技有限公司CEO 張善友

 

VS Code 是全球極受歡迎的開發工具之一。韓駿老師憑藉豐富的技術經驗和生動的語言，帶大家由淺入深地學習VS Code，本書非常值得讀者閱讀學習。

—微信公眾號「程式設計師小灰」作者、《漫畫演算法》作者 魏夢舒

 

VS Code 是微軟在2015 年發佈的編輯器，隨後便快速發展起來，成為Stack Overflow 上認證的最受歡迎的編輯器。儘管我一直覺得Emacs 是最好的編輯器，但其實我使用VS Code 的頻率已經高於Emacs。本書歸納了韓駿多年的VS Code 開發經驗，能夠幫助你快速入門及進階VS Code，了解VS Code 在不同領域（如雲端運算、物聯網）的應用，以及如何進行正在火熱發展中的雲端研發等。

—ThoughtWorks 進階諮詢師、

《前端架構：從入門到微前端》作者 黃峰達（Phodal）

 

本書是VS Code 使用者和貢獻者都值得一讀的書。書中透過豐富的使用場景，由淺入深地從各個角度詳盡地介紹了VS Code。無論你是想使用VS Code的各種功能，還是想要了解它的執行機制，或是想成為其生態圈的貢獻者，本書都會是你手邊的必備寶典。

—Works Applications 副總裁 王浚立

 

和韓老師在微軟共事多年，他絕對當得起「極客」的稱呼，是當之無愧的VS Code 專家。VS Code 作為近幾年最強勢的編輯器，迅速橫掃了這個已經深耕多年的市場，並打破了微軟一向給人的「不夠開放」的固有印象。無論你使用哪種程式語言進行程式設計，使用什麼作業系統進行開發，本書都可以幫助你掌握一個高效的開發工具，使你的職業生涯如虎添翼！

—字節跳動Tech Lead 盧肇興

 

韓老師對VS Code 生態具有相當大的熱情，持續一貫地進行中文圈VS Code的技術佈道，幫助開發者更進一步地了解、使用VS Code，加強生產力。本書除了可以作為VS Code 的使用手冊，還可以使你了解微軟團隊在開發這款卓越工具背後的一些有趣故事。

—螞蟻金服技術專家 牽招

 

正確、有效地使用開發工具可以讓開發人員的開發效率倍增，而本書正是透過全面介紹VS Code 的各個功能模組及日常開發的使用場景來探索這款流行開發工具的潛能，進而幫助各個領域的開發者掌握VS Code 正確、有效的使用方法。相信這是一本值得廣大開發人員花時間好好翻閱的關於VS Code 的書。

—亞馬遜AWS 軟體工程師 勵洋

 

VS Code 的生態十分強大，包含Google 在內的許多大廠都開發了多款VS Code 外掛程式。工欲善其事，必先利其器。透過本書的學習，你一定能掌握更多關於VS Code 的技能，大幅加強程式設計效率。

—Google 軟體工程師 趙豐

 

VS Code 作為微軟擁抱開放原始碼社區的又一大成果，結合了該公司深厚的商務軟體開發底蘊和開放原始碼社區的活躍創造力，在短時間內一躍成為業界最受歡迎的程式編輯器。它幾乎融合了所有以往編輯器的優點，同時又能透過自由擴充來支援現在乃至未來的技術熱點。非Windows 平台的使用者終於可以感受原汁原味的「宇宙第一IDE」的魅力。但是，與其強大、豐富的功能相比，市面上針對它的教學材料卻少得可憐，用中文寫的就更是少之又少。本書的出現適時地彌補了這一缺憾。它不僅能幫助剛開始學習程式設計的初

學者，也能幫助從業一段時間的程式設計師。本書不僅詳細介紹了VS Code比較常用的各項功能，而且非常強調實作。每一個案例都配有詳細的步驟和畫面，幾乎可以當作一本工具書來收藏。本書作者是本人的大學同學，也是在微軟工作近10 年的資深工程師，其業務能力毋庸置疑。非常高興能看到本書的出版，以及作者為國內技術社區做出的貢獻。

—Facebook 進階工程師 萬志程（Jensen Wan）

 

VS Code 是我用過的最簡潔清爽又功能強大的編輯器。一直以來都缺乏一本詳細解析VS Code 使用技巧與設計的書。韓駿作為微軟開發工具事業部的工程師，在保持本書專業性的同時，又將VS Code 的使用和設計深入淺出地娓娓道來。能夠將技術圖撰寫得如此生動有趣，著實不易。本書對VS Code 在多場景下的使用進行了一步步的詳細解析，相當大地擴充了我的視野。我原先並不知道VS Code 可以將如此多的內容輕鬆整合在一起，讓每個人都能形成具有自己風格的、便利的開發環境。本書解答了我「不知道自己有什麼不知

道」的問題。最後，本書並非只是一本參考手冊，在某些部分，讀者不僅能從書中循序漸進地掌握VS Code 的許多不為人知的使用訣竅，還能了解到一些團隊設計背後的考量，從中學到大廠在建置優秀產品時難得一見的背後想法與洞見。讀完本書，你將大呼過癮。

—eBay 軟體工程師 吳慧珺

 

工欲善其事，必先利其器。本書透過豐富的圖示一步步指導讀者打造專屬的VS Code 開發環境，深入細緻地介紹了各種場景下的使用精髓，是一本學習VS Code 的優秀圖書。

—愛奇藝大數據服務軟體工程師 鄭浩南

作者簡介

韓駿

 

畢業於上海交通大學軟體學院，微軟開發平台事業部軟體工程師。

VS Code（Visual Studio Code）中文社區創始人，VS Code程式碼貢獻者，「玩轉VS Code」微信公眾號及知乎專欄作者，PyCon、JSConf、.NET Conf、Microsoft Tech Summit、Google Developer Group、COSCon等技術大會講師。

 

編寫過20多款VS Code外掛程式，其中Code Runner外掛程式下載量超過1000萬。

目錄

01 如何學習Visual Studio Code

1.1 學會搜尋

1.2 學會提問

1.3 學會學習

 

02 Visual Studio Code 簡介

2.1 Visual Studio Code 概覽

2.2 Visual Studio Code 簡史

2.3 Visual Studio Code 的優勢

2.4 Visual Studio Code 開發團隊

2.5 Visual Studio Code 是如何做開放原始碼的

 

03 核心元件

3.1 Electron

3.2 Monaco Editor

3.3 TypeScript

3.4 Language Server Protocol

3.5 Debug Adapter Protocol

3.6 Xterm.js

 

04 安裝與設定

4.1 概覽

4.2 Linux

4.3 macOS

4.4 Windows

 

05 快速入門

5.1 Visual Studio Code Insiders

5.2 設定

5.3 使用者介面

5.4 編輯功能

5.5 主題

5.6 快速鍵

5.7 整合終端

5.8 中文顯示

 

06 進階應用

6.1 命令列

6.2 IntelliSense

6.3 程式導覽

6.4 玩轉Git

6.5 打造自己的主題

6.6 快速建立可重複使用的程式片段

6.7 Task，把重複的工作自動化

6.8 Multi-root Workspaces

6.9 偵錯與執行

 

07 外掛程式

7.1 外掛程式市場

7.2 外掛程式管理

7.3 那些不錯的外掛程式

 

08 語言深入

8.1 概覽

8.2 Python

8.3 JavaScript

8.4 TypeScript

8.5 Java

8.6 C#

8.7 C/C++

8.8 Go

8.9 更多語言支援

 

09 前端開發

9.1 HTML

9.2 CSS、SCSS 和Less

9.3 Emmet

9.4 React

9.5 Angular

9.6 Vue

9.7 前端外掛程式推薦

 

10 雲端運算開發

10.1 微軟Azure

10.2 AWS

10.3 Google Cloud Platform

10.4 阿里雲

10.5 騰訊雲

 

11 物聯網開發

11.1 裝置端開發

11.2 裝置上雲端

11.3 裝置模擬

11.4 邊緣計算

11.5 物聯網外掛程式推薦

 

12 遠端開發

12.1 遠端開發概覽

12.2 遠端開發外掛程式

12.3 SSH

12.4 容器

12.5 WSL

 

13 Visual Studio family

13.1 Visual Studio、Visual Studio Code、Visual Studio Codespaces，你都分清楚了嗎

13.2 Visual Studio Codespaces

13.3 Visual Studio Live Share

13.4 Visual Studio IntelliCode

 

14 成為Visual Studio Code的貢獻者

14.1 GitHub Issues

14.2 提問

14.3 討論

14.4 GitHub Pull requests

14.5 外掛程式

14.6 翻譯

 

15 外掛程式開發

15.1 如何打造一款優秀的Visual Studio Code 外掛程式

15.2 你的第一個Visual Studio Code外掛程式

15.3 Visual Studio Code 外掛程式的擴充能力

15.4 外掛程式開發面面觀

15.5 外掛程式開發的生命週期

序

推薦序

 

Visual Studio Code 已經迎來了5 周年的誕辰！在2015 年4 月29 日的微軟Build 開發者大會上，微軟宣佈推出Visual Studio Code。自從Visual Studio Code 第一個公開預覽版本發佈以來，這個輕量級的編輯器已經吸引了全球數以百萬計的開發者。在很短的時間內，Visual Studio Code 在全世界成了開發者們最喜愛的開發工具。如今，Visual Studio Code 已經有了超過1200 萬的月活使用者，並且保持著持續增長的趨勢。

 

從公司創立之初，微軟就有為開發者服務的基因。微軟創始人比爾· 蓋茲開發的第一款產品，就是執行在Altair 電腦上的BASIC 語言。歷經數十年，微軟一直致力於為廣大開發者與開發團隊打造最優秀和最具生產力的開發工具。微軟的使命和願景是幫助每一個人、每一個組織成就不凡。為了達成這一使命，我們希望幫助全球每一位開發者，用先進的工具與平台幫助創新者去實現他們的創意，改變世界。

 

回想2015 年， 我們非常幸運， 因為有Erich Gamma 來帶領Visual Studio Code 的開發團隊。Erich 是經典書《設計模式：可重複使用物件導向軟體的基礎》的作者之一。在加盟微軟之前，他主管開發了Eclipse 平台上的Java Development Tools（JDT） 專案。有Erich 和微軟Visual Studio 主管層之間的強強聯手，我們的團隊對開發者的需求有了深度的了解。同時，從Visual Studio 和Eclipse 數十年的開發經驗中，我們提煉了許多寶貴的經驗與教訓。

 

打造Visual Studio Code 的開發團隊不僅實力頂尖，還應用了現代化的開發模式。Visual Studio Code 基於開放原始碼且跨平台的理念，按照每月發佈的節奏來快速反覆運算產品開發，並且提供每日發佈的Insider 通道。它擁有上萬個外掛程式，生態極為活躍和豐富。

更重要的是，Visual Studio Code 是我們踐行微軟「顧客至上」文化的最佳榜樣。Erich 極佳地擁護了「開發團隊與使用者零距離」的格言。整個Visual Studio Code 開發團隊持續地與使用者溝通，基於他們的回饋來改進產品，並與社區緊密合作，在GitHub 上建立了月度工作專案。

 

透過韓駿的這本書，我希望讀者能學到更多Visual Studio Code 的使用技巧。我們很樂意看到Visual Studio Code 能繼續成為你工作與生活的一部分，也希望本書能幫助有意願學習程式設計的人成就不凡。

Happy Coding!

—微軟開發平台事業部全球資深副總裁 潘正磊（Julia Liuson）

 

序

 

那些年，我們一起追的Visual Studio Code（VS Code）

2015 年，我25 歲。Visual Studio（VS）是微軟最重要的開發工具。開發者們還在期待Visual Studio 2015 的到來。

那些年，組裡的前端專案用的是AngularJS，組裡購買了WebStorm 的正版軟體授權，大家紛紛表示很好用。

那一年，那些年。

我叫韓駿，大學同學都叫我韓總。我高中念的是北虹進階中學，大學念的是上海交通大學。2013 年，我正式入職微軟上海。故事，由此開始。故事的另一位主角，是現居西雅圖的VS Code 團隊核心成員呂鵬老師。早在2012 年暑期，在微軟實習時，我們就相識了。那時，我們的交集並不多。有幸的是，我們雙雙拿到了微軟正式員工的Offer，便不再糾結於讀研還是工作。2013 年7 月8 日，我和呂老師，還有其他幾位夥伴一起入職了。剛接觸呂老師時，就覺他特別有靈性，常常具有超越常人的想法與見解。入職後，我們驚奇地發現，兩個人的住所相隔如此之近，只有5 分鐘的步行距離。

這，也許是天意。由此，我們開始了長達3 年的微軟10 號交通車之旅。我已經記不清10 號交通車換了多少位交通車司機，但不變的是，每天來回3 小時路上我們都在。無數個3 小時，我們都不會孤獨，一路上，從C#、.NET、AugularJS 再到後來的TypeScript、VS Code，我們無不討論。（嗯，在此，要對10 號交通車上的所有同事說聲抱歉，打擾到你們睡覺啦。）

 

2015 年，我們有一個CMS 系統的專案，而visualstudio.com 的內容也被放在這個系統上管理。某一天，我不經意間在測試網站上發現了一個VS Code 的頁面，描述裡赫然寫著它是一個跨平台的編輯器。當時已經臨近舉辦微軟最重要的開發者大會—Build 大會，我的第一反應就是，這是一個重量級產品！我馬上喊來呂老師一起看。呂老師仔細地看著那個頁面，不等我們交流，從他看網頁的那堅定的眼神中我就能知道，我們想的是一樣的，將會是一個Big News（大新聞）。果不其然，不久後的2015 年4 月29 日，在Build 大會上，

微軟宣佈推出VS Code 的第一個預覽版本，許多開發者為之振奮，也有很多類似「VS 支援跨平台了」的標題黨出現。我當然第一時間下載下來並體驗了一下，第一印象是VS Code 的速度是如此之快，而且對Git 具有很好的支援。

 

從那時起，我的主力編輯器就逐漸轉向了VS Code。

在半年後的2015 年11 月18 日，VS Code 獲得MIT License（MIT 授權）並在GitHub 上開放原始碼，同時宣佈將支援擴充功能。在10 號交通車上，呂老師和我談到了VS Code 的發展前途，並有給VS Code 寫外掛程式的打算。到了2016 年春節後，呂老師在交通車上和我說，他正在寫Ruby 的外掛程式，詳細說了一下VS Code 的外掛程式機制。當時，VS Code 的外掛程式很少，很多語言的外掛程式都是缺失的，為其開發外掛程式可謂是一片真正的藍海。

大概過了一周，呂老師發佈了他的Ruby 外掛程式。我不禁感歎呂老師的效率之高，他可以算是最早一批抓住VS Code 機會的大佬之一。也正是憑藉這個Ruby 外掛程式作為試金石，呂老師在那年成功入職高手雲集的VS Code 團隊，開啟人生贏家之路。其實關於Ruby 外掛程式還有一個小故事，當時除了呂老師，還有一位老外也在寫Ruby 外掛程式。那時，那位老外被一個技術困難卡住了，還沒等他解決那個困難，呂老師就以迅雷不及掩耳之勢發佈了Ruby 外掛程式。後來，呂老師也說服了那位老外一起來寫這個已經發佈的外掛程式，避免重複工作。如果呂老師的Ruby 外掛程式再晚發佈幾天，也許就是另一種結果了。

 

到了2016 年6 月，呂老師已經開始準備去美國了。組裡的另一位大佬同事也發佈了REST Client 外掛程式，廣受好評。那月，Erich Gamma（VS Code 開發團隊的總負責人、《設計模式：可重複使用物件導向軟體的基礎》作者之一、JUnit 建立者之一）來到微軟上海，我也有幸親眼見到了他。我知道，我該行動了。這是一片即將變紅的藍海。以Fail Fast（快速失敗）為指導思想，我在短短一個月的時間裡接連發佈了4 款外掛程式。沒想到，這4 款外掛程式都廣受使用者的喜歡，特別是Code Runner，下載量從1 萬、10萬，一直上升到現在的1000 萬，是我開發的20 多個外掛程式中使用者最喜

歡的外掛程式之一。

 

2016 年下半年，呂老師遠赴美國，而10 號交通車上只剩我「一個人」了。但是，我追逐VS Code 的步伐並沒有停止。正巧，部門那時開始做IoT 的Developer Tooling，我馬上想到要做一個VS Code 的外掛程式。可惜，當時做一個VS Code 的IoT 外掛程式並沒有被列為一個優先專案。但是，感謝微軟的開放態度，我利用自己的個人時間開發了Azure IoT Toolkit，由於反響良好，一年後我把外掛程式貢獻出來，使Azure IoT Toolkit 被升級為微軟的官方外掛程式。

到了2017 年，IoT 外掛程式開發被正式提上議程，組裡成立了專門的團隊來開發Arduino 外掛程式。我雖然沒有實際參與外掛程式的開發，但在整個過程中提出了很多建議，在兩次組內的Bug Bash 中勇奪冠軍。外掛程式發佈後受到了Arduino 社區的很多好評，因此，我們部門也開始了VS Code 外掛程式開發的旅程，自行開發或合作開發的外掛程式超過了20 個，這些外掛程式有關的領域包含IoT、Java、Ansible、Terraform 等。

 

2018 年，我有幸在微軟技術暨生態大會上做了一次演講，主題是「從零開始開發一款屬於你的Visual Studio Code 外掛程式」，把外掛程式開發的經驗帶給更多的開發者朋友。

 

2019 年，我對VS Code 外掛程式開發有了更深入的思考。僅憑我一個人寫外掛程式又能寫多少呢，新的外掛程式還比較好寫，最耗費成本的其實是外掛程式維護，現在的20 個外掛程式維護起來已經很累了，所以授人以魚不如授人以漁，我開通了「玩轉VS Code」微信公眾號及知乎專欄，就是希望把VS Code 的一些經驗分享給更多的人，也希望有更多志同道合的朋友一起來玩轉VS Code。整個2019 年，我也在多場大會（PyCon、JSConf、.NET Conf、Google Developer Group、GitHub 官方見面會、COSCon 等）上進行了公開演講，對VS Code 進行佈道。

 

2019 年11 月30 日，又是一個特別值得紀念的日子！經歷了長時間的籌備，VS Code 中文社區終於成立了！從一個普通的藍領程式設計師到VS Code 外掛程式的「產品設計師」，到VS Code 的佈道師，再到VS Code 中文社區的創始人，我與VS Code 一起成長。

 

不知道這些年來我對VS Code 的追逐到底產生了多大的影響。但是，至少，我看到了一些變化。曾經，人們會把VS Code 當成VS，以為VS 跨平台了。如今，會有95 後的同學反過來把VS 當作VS Code：原來除了VS Code，居然還有個VS ？曾經，面對新的專案，我們會問：為什麼要做一個VS Code 的外掛程式？如今，面對新的專案，我們會問：為什麼不做一個VS Code 的外掛程式？

 

微軟的10 號交通車還在，很多當年一起入職的夥伴卻分散到了不同的地方：上海、蘇州、無錫、西雅圖。我依稀記得，在某個早晨的交通車上，我和呂老師為了一個專案中的技術問題吵到面紅耳赤，而到了中午依舊是80 分遊戲的最佳拍檔；某天下班的路上，我們為了專案中的難以重現的Bug，在交通車上開啟筆記型電腦一起來偵錯；某個晚上，我為了Code Runner 中的Bug 奮戰到淩晨兩點。那時，在交通車上，我們還經常會拿著Surface RT，看Channel 9，看Design Spec，回郵件。微軟的10 號交通車還在，承載著我那時對技術的執著與熱情，繼續行駛在光明的大路上。

 

不忘初心，莫失初衷。不言放棄，追逐所愛。",https://cf-assets2.tenlong.com.tw/products/images/000/153/538/medium/%E6%B7%B1%E6%99%BA-DM2044-%E7%AB%8B%E9%AB%94%E6%9B%B8.jpg?1602149213
"精通 Python｜運用簡單的套件進行現代運算, 2/e (Introducing Python: Modern Computing in Simple Packages, 2/e)","Bill Lubanovic 著
          賴屹民 譯",歐萊禮,9789865024864,2020/6/2,"「本書是Bill Lubanovic的傑作，先為你紮下深厚的程式設計基礎，再教你用大型的Python工具箱來解決實際的問題，你絕對可以在這本書學會如何運用Python解決問題。」

—Loïc Pefferkorn

開放原始碼系統工程師



「本書以風趣、對話式、寓教於樂的風格介紹海量的Python程式語言與第三方程式包。」

—Nathan Stocks

Agile Perception



《精通 Python》是一本容易理解也很有趣的書，非常適合程式設計初學者以及剛要開始學習這個語言的讀者。本書的第二版將引領從基礎開始，循序進階到較複雜且多樣的主題，在教學過程中使用食譜風格的程式配方來說明Python 3的概念。最後透過每章結束的練習題來驗證所學到的技巧。



讀完本書，你將紮下深厚的Python基礎，包括測試、除錯、重複使用程式碼的最佳做法以及其他開發技巧。這個版本除了加入新的範例程式和習題之外，也會教你如何使用Python撰寫商業、藝術、科學應用程式，以及運用Python工具和開放原始碼套件。



‧學習簡單的資料類型、基本數學運算與文字操作

‧以Python的內建資料結構處理資料

‧探索Python程式碼結構，包括函式的使用

‧使用模組與套件編寫大型Python程式

‧深入討論物件、類別與其他物件導向功能

‧檢視一般檔案、關聯式資料庫與NoSQL的儲存機制

‧使用Python建構web用戶端、伺服器、API與服務

‧管理系統工作，例如程式、程序與執行緒

‧瞭解並行處理與網路程式設計的基礎


        

    

    作者簡介
    
      Bill Lubanovic 從1977年就開始用Unix開發軟體，1981年開發GUI，1990年開發資料庫，1993年開發web。目前他正在開發醫學影像web資料庫服務。

    

    目錄大綱
    
      第一部分 Python基礎

第一章 初嘗py

第二章 資料：型態、值、變數與名稱

第三章 數字

第四章 用if來選擇

第五章 文字字串

第六章 用while與for來執行迴圈

第七章 tuple與串列

第八章 字典與集合

第九章 函式

第十章 喔喔：物件與類別

第十一章 模組、程式包與好東西

第二部分 Python實務

第十二章 玩轉資料

第十三章 日曆與時鐘

第十四章 檔案與目錄

第十五章 時間中的資料：程序與並行處理

第十六章 盒子資料：持久保存

第十七章 空間中的資料：網路

第十八章 網路，解開

第十九章 成為Python鐵粉

第二十章 Py藝術

第二十一章 Py上工

第二十二章 Py科學

附錄A 硬體和軟體入門

附錄B 安裝Python 3

附錄C 全然不同的東西：非同步

附錄D 習題解答

附錄E 備忘錄",https://cf-assets2.tenlong.com.tw/products/images/000/148/534/medium/A615.jpg?1590373507
"Python 自動化的樂趣｜搞定重複瑣碎&單調無聊的工作, 2/e (Automate the Boring Stuff with Python : Practical Programming for Total Beginners, 2/e)","Al Sweigart 著
          H&C 譯",碁峰資訊,9789865025977,2020/8/28,"“您需要使用Python自動完成無聊的工作嗎？是的，如果您想使用自動化來增強工作流程效率，這是一個很好的起點。強烈推薦！”

—Network World



“學習Python最好的書之一。”

—Giles McMullen-Klein, FlickThrough Reviews



如果您曾經花費數小時處理檔案的重新命名，或更新數百個試算表內的儲存格資料，就能體會這類日常的工作有多麼單調無趣了。但假如能利用電腦自動幫您完成呢？



您不需要有什麼程式設計的經驗，在這本經過完整修訂的經典暢銷書第二版中，能學到運用Python寫出程式，幫您在幾分鐘內搞定人工手動處理需要花費數小時的工作。您將學到Python的基礎知識，並探索Python豐富的模組程式庫來完成某些特定工作，例如從網站上抓取資料、讀取PDF和Word文件，以及自動化執行滑鼠點按和鍵盤輸入的工作。



本書受到全世界許多讀者的支持，第二版增訂了關於輸入驗證的全新章節，以及有關自動化處理Gmail和Google試算表的內容，另外還有關於自動更新CSV檔的技巧提示。讀者將學到如何能輕鬆地使用Python編寫程式，把自動化的好用和效率應用在下列這些工作上：



‧在一個或多個檔案中搜尋文字

‧建立、更新、搬移和重新命名檔案和資料夾

‧搜尋網頁和下載網路上的圖文內容

‧處理PDF檔的分割與合併，加入浮水印和加上密碼等作業

‧傳送Email和簡訊

‧填寫線上表單



本書會一步一步地教您完成每支程式，並在每章後面新增的實作專題中啟發及引導您改進這些程式的應用，讓您發揮學到的技巧讓類似的工作能自動化完成。如此就不用再浪費時間去做人工手動的作業，您寫出的Python自動化程式能搞定這些繁瑣的工作。本書是為初學者所設計的，就算您從沒寫過一行程式，跟著書中的講解就能學到這些應用和操作，學會如何享受Python自動化的樂趣，搞定重複瑣碎與單調無聊的工作。

<序>

「您在二小時內完成的事，我們三個人花了兩天才搞定呀。」在2000 年左右，我的大學室友在一家電器零售店工作，有時店裡會從競爭店家那收到一份有幾千件商品價格目錄的試算表檔案，由三位員工所組成的小組要印出這份試算表，一一拿來比對他們店裡的商品價格，並記錄下價格比競爭店家賣得貴的所有商品，通常這項工作得花上好幾天的時間。

「各位，您們知道嗎？如果有印出試算表的原始檔案，我可以寫一支程式來幫您們完成這項工作。」我的室友告訴他們，當時他看到這幾個人蹲在地上忙著查價格，周圍還散落一堆印出的表單紙張。

幾個小時後，他編寫了一支簡短的程式，從檔案中讀取競爭店家的價格資料，在自己店裡的資料庫中搜尋相同的商品來比對，並記錄下是否比競爭對手的價格高。他當時還是個程式設計新手，花了一些時間在一本程式設計書中查看說明文件，邊學邊寫出這支程式。最後程式實際上只花了幾秒鐘就跑完了，我的室友和他的同事們在那天享受了超長的午休時間。

這就是電腦程式設計的威力，電腦就像把瑞士刀，能幫您完成無數的工作。許多人花了數小時來點按滑鼠和鍵盤輸入來執行著重複的工作，但卻沒有體認到，只要對機器下達正確的指令，就能在幾秒鐘完成這些工作。

 



    

    作者簡介
    
      Al Sweigart 是位專業的軟體開發專家，也是技術書的作者，還教過小朋友和成人的程式設計相關課程。他為初學者編寫了幾本Python書籍，包括：《Python駭客密碼｜加密、解密與破解實例應用》；《Python好好玩｜趣學電玩遊戲程式設計》等。(都在GOTOP出版)

    

    目錄大綱
    
      簡介



PART 1 Python 程式設計基礎

chapter 01 Python 基礎

chapter 02 流程控制

chapter 03 函式

chapter 04 串列

chapter 05 字典與結構化資料

chapter 06 字串的操作



PART 2 自動化專題實作

chapter 07 使用正規表示式進行模式比對

chapter 08 讀寫檔案

chapter 09 檔案的組織管理

chapter 10 除錯（Debugging）

chapter 11 從 Web 擷取資訊

chapter 12 處理 Excel 試算表

chapter 13 處理 PDF 與 Word 文件

chapter 14 處理 CSV 檔和 JSON 資料

chapter 15 保持時間、工作排程和程式啟動

chapter 16 發送 Email 和文字簡訊

chapter 17 處理影像圖片

chapter 18 以 GUI 自動化來控制鍵盤和滑鼠



appendix A 安裝第三方模組

appendix B 執行程式

appendix C 習題解答",https://cf-assets2.tenlong.com.tw/products/images/000/151/605/medium/ACL058100.jpg?1597741469
"無瑕的程式碼－整潔的軟體設計與架構篇 (Clean Architecture: A Craftsman's Guide to Software Structure and Design)
            MP11801","Robert C. Martin 著
          林欣穎 譯、 陳錦輝 審校",博碩文化,9789864342945,2018/5/16,"《名家名著》00 

《無瑕的程式碼──整潔的軟體設計與架構篇》

工程師︰我已經拜讀了《Clean Code》，還有必要讀《Clean Architecture》嗎？

架構師︰喔，你會做磚頭，那你會蓋房子嗎？

將近10年的等待，全球知名作家Uncle Bob終於推出新作品《Clean Architecture》，由書名很容易就能猜到，這本書和《Clean Code》一定有關。沒錯，這兩本書是有些相同，但又有很大的不同。相同之處在於，這兩本書都是在教導軟體工程師如何正確開發出好的軟體，甚至兩本書提到的原則名稱有些還是相同的。不同之處在於，即便是相同的原則，但在不同層次上使用時，要注意的地方截然不同。



總結來說，好的軟體系統始於整潔的程式碼（clean code），但光是這樣還不夠。也就是說，如果磚塊做得不好，那麼建築物的架構也就不重要了。但就另一方面來說，你也能用精心製作的磚塊來製造大量的垃圾，這本書就是要避免你製造垃圾。



因此，除了閱讀《Clean Code》之外，你還需要閱讀《Clean Architecture》！

再次地，Robert C. Martin以大師強而有力的口吻，極具說服力的文字來撰寫這本書，透過這本書教您如何建構好軟體的架構，釐清什麼是架構，以及認清獨立部署和獨立開發的重要性。如果您想開發的是企業級的軟體，那就千萬不可錯過這本書。



本書將徹底顛覆您的許多觀點，例如微服務是個架構嗎？C語言沒有多型嗎（多型是物件導向發明的嗎）？C語言和C++的封裝相比，誰比較完美？軟體是數學還是科學？什麼是測試的本質？你應該使用框架嗎？關聯式資料庫為何會流行，是否已日暮途窮了呢？你可以先試著回答這些問題，然後在閱讀本書之後，再次審思這些問題，相信大多數的人，要答對一半都很困難。

如果您自許成為一位專業的軟體工程師，強烈建議您，一定要好好詳讀這本書。

~~~~~~~~~~~~~~關於架構~~~~~~~~~~~~~~



架構代表了塑造系統的「重要」設計決策，有多「重要」則是由因應變化的成本來衡量的。

Grady Booch ──《Object-Oriented Analysis and Design with Applications》作者

 

如果你認為好架構的代價是昂貴的，那不妨試試糟糕的架構。

Brian Foote and Joseph Yoder ──《Pattern Languages of Program Design 4》作者



架構是你希望在專案早期就能得到的決定，但你並不一定能比其他任何時候更容易得到它們。

Ralph Johnson ──《Design Patterns: Elements of Reusable Object-Oriented Software》作者



架構是一個假設，需要透過實作和度量來證明。

Tom Gilb ──《Competitive Engineering: A Handbook For Systems Engineering, Requirements Engineering, and Software Engineering Using Planguag》作者

 

走得快的唯一方法就是走得好。

Robert C. Martin── 軟體大師，《Clean Code》、《無瑕的程式碼》系列書作者， 



會做磚頭有什麼了不起，會蓋房子才厲害。

《博碩文化》、《名家名著》 總編輯 ── 陳錦輝


        

    

    作者簡介
    
      Robert C. Martin

人稱Uncle Bob，程式設計經驗超過40年，Agile Software（敏捷軟體開發）的提倡者之一。

創立Object Mentor，這是一間專注於C++、Java物件導向、模式、UML、敏捷方法學和極限程式設計的顧問諮詢公司。

在這些領域，作者撰寫了相當多的名著，並獲得有IT奧斯卡獎之稱──Jolt震撼年度大獎。

其中，最暢銷的是《Clean Code》（中文版為無瑕的程式碼），為Amazon該類別的暢銷榜首，也被國內公認為程式設計師必讀的一本書。

    

    目錄大綱
    
      Part I 簡介

Chapter 1 什麼是設計與結構

Chapter 2 兩種價值觀的故事



Part II 從基礎開始：程式設計範式

Chapter 3 範式概述

Chapter 4 結構化程式設計

Chapter 5 物件導向程式設計

Chapter 6 函數式程式設計



Part III 設計原則

Chapter 7 SRP：單一職責原則

Chapter 8 OCP：開放－封閉原則

Chapter 9 LSP：Liskov 替換原則

Chapter 10 ISP：介面隔離原則

Chapter 11 DIP：依賴反向原則



Part IV 元件原則

Chapter 12 元件

Chapter 13 元件內聚性

Chapter 14 元件耦合性



Part V 架構

Chapter 15 什麼是架構

Chapter 16 獨立性

Chapter 17 邊界：畫線

Chapter 18 邊界剖析

Chapter 19 策略和層級

Chapter 20 業務規則

Chapter 21 會尖叫的架構

Chapter 22 整潔的架構

Chapter 23 Presenter 與Humble Object

Chapter 24 部分邊界

Chapter 25 層與邊界

Chapter 26 主元件

Chapter 27 服務：偉大與微小

Chapter 28 測試邊界

Chapter 29 整潔的嵌入式架構

Part VI 細節

Chapter 30 資料庫是細節

Chapter 31 Web是細節

Chapter 32 框架是細節

Chapter 33 案例研究：影片販售

Chapter 34 遺漏的章節



Part VII 附錄

Appendix A 架構考古學",https://cf-assets2.tenlong.com.tw/products/images/000/119/194/medium/9789864342945.jpg?1525762096
Python 機器學習超進化：AI影像辨識跨界應用實戰 (附100分鐘影像處理入門影音教學/範例程式),鄧文淵 總監製/文淵閣工作室 編著,碁峰資訊,9789865026196,2020/9/22,"轟動程式圈3大AI影像辨識利器

從收集資料、圖片擷取、建立標籤、訓練模型

到智慧影像辨識的全面進化實戰！



人工智慧(Artificial Intelligence)應用基本上可分五大層面：時間序列、圖像處理、音訊處理、自然語言處理以及動態影像處理，其中與「智慧影像」相關者就佔了兩大領域。智慧影像是透過電腦視覺技術，從中學習人類的視覺辨識能力，並自動判讀影像中的關鍵資訊，目前被大量使用在圖像辨識、人臉識別、物體動作捕捉、光學文字識別...等，是人工智慧最為廣泛的應用之一。



在這個領域的研究中有許多功能強大的工具，如OpenCV、Yolo與dlib，但許多使用者卻不知如何收集資料、建立標籤，更不知道如何訓練模型，進而達成智慧影像辨識的結果！本書將引領讀者運用自己的資料，透過本機與雲端的資源，以目前主流技術進行自有模型的訓練來完成實際可用的智慧影像應用。



挑戰智慧影像最佳學習地圖，

結合本機與雲端應用，

真正深入AI影像辨識核心！



■掌握智慧影像的技術特性與主流的應用模組，涵蓋OpenCV、Pillow、Yolo與dlib。

■根據不同模組特性介紹其資料來源的收集方式，除了一般土法煉鋼的徒手拍攝影像，也能利用Kaggle資料庫進行下載，或是利用動態影片進行大量圖片的擷取，再運用自動批次的方式進行圖片整理與特徵標記。

■當本機在訓練模型時發生記憶體不足、效能不夠等問題時，使用Google專為機器學習而生的Colab雲端服務來訓練自己的模型。

■集結最具代表性的實務應用主題，包括人臉辨識、口罩人臉辨識、車牌辨識、車流統計…等專題，在真實的情況中體驗智慧影像的應用，並擁有開發能力。

■針對OpenCV與Pillow影像處理特別提供入門影音輔助教學，加速學習效率。



書附超值學習資源：範例程式檔/100分鐘OpenCV與Pillow影像處理入門影音教學

 

<序>

近年來人工智慧(Artificial Intelligence)的浪潮席捲全球科技領域，歷經數十年發展，伴隨著硬體效能不斷提升，在各領域都有突飛猛進的驚人突破。許多看似遙遠的科技名詞都不再是冷冰冰的高端技術，而是真實存在你我生活中的重要應用。而「智慧影像」應用則是人工智慧使用最為廣泛的功能之一。

人工智慧在各個領域中的應用基本上可以分成五大層面：時間序列、圖像處理、音訊處理、自然語言處理以及動態影像處理，其中與「智慧影像」相關的就佔了二大領域。智慧影像是透過電腦視覺技術，從中學習人類的視覺辨識能力，並自動判讀影像中的關鍵資訊，目前被大量使用在圖像辨識、人臉識別、物體動作捕捉、光學文字識別 ... 等。

雖然這個領域的研究中已經有了許多功能強大的工具，如OpenCV、Yolo或dlib，但是許多人應用時常會不知道如何收集資料，如何建立標籤，更不知道如何訓練模型，進而達成對於研究主題進行智慧影像辨識的結果！本書的論述主軸，即是想要帶領讀者利用自己的資料，透過本機以及雲端的資源，利用目前主流的技術，進行自有模型的訓練來完成實際可用的智慧影像應用。

如果您對於Python及機器學習有基本知識，想對於智慧影像進一步探索研究，並想將理論應用在自己的研究項目或是問題的解決上，就跟我們一起前進吧



    

    作者簡介
    
      一個致力於資訊圖書創作二十餘載的工作團隊，擅長用輕鬆詼諧的筆觸，深入淺出介紹難懂的 IT 技術，並以範例帶領讀者學習電腦應用的大小事。

我們不賣弄深奧的專有名辭，奮力堅持吸收新知的態度，誠懇地與讀者分享在學習路上的點點滴滴，讓軟體成為每個人改善生活應用、提昇工作效率的工具。

舉凡程式開發、文書處理、美工動畫、攝影修片、網頁製作，都是我們專注的重點，而不同領域有各自專業的作者組成，以進行書籍的規劃與編寫。一直以來，感謝許多讀者與學校老師的支持，選定為自修用書或授課教材。衷心期待能盡我們的心力，幫助每一位讀者燃燒心中的小宇宙，用學習的成果在自己的領域裡發光發熱！

我們期待自己能在每一本創作中注入快快樂樂的心情來分享， 也期待讀者能在這樣的氛圍下快快樂樂的學習。



官方網站：www.e-happy.com.tw

FB粉絲團：www.facebook.com/ehappytw

    

    目錄大綱
    
      CH01 認識智慧影像辨識



1.1 人工智慧

1.1.1 人工智慧是什麼？

1.1.2 人工智慧基本應用

1.1.3 人工智慧實際應用

1.2 智慧影像辨識應用

1.2.1 影像處理

1.2.2 智慧影像辨識

1.2.3 突破智慧影像辨識學習的困境



CH02 OpenCV和Pillow影像處理



2.1 OpenCV

2.1.1 以OpenCV讀取及顯示圖形

2.1.2 儲存影像檔

2.1.3 OpenCV基本繪圖

2.1.4 使用OpenCV進行臉部偵測

2.1.5 擷取臉部圖形及存檔

2.2 圖片特效處理

2.2.1 認識圖片的維度

2.2.2 圖片灰階和黑白處理

2.3 建立新畫布與圖形合併

2.3.1 建立新畫布

2.3.2 圖形合併

2.4 擷取攝影機影像

2.5 Pillow

2.5.1 Pillow圖片基本操作

2.5.2 Pillow圖片編輯

2.5.3 圖片灰階處理

2.5.4 Pillow繪製圖形

2.6 OpenCV與Pillow圖像格式互轉

2.6.1 OpenCV轉Pillow

2.6.2 Pillow轉OpenCV

2.6.3 OpenCV和Pillow黑白圖片處理比較



CH03 OpenCV模型訓練



3.1 專題方向

3.2 準備訓練Haar特徵分類器資料

3.2.1 認識Haar特徵分類器

3.2.2 處理正樣本及實測圖片

3.2.3 處理負樣本圖片

3.3 建立車牌號碼Haar特徵分類器模型

3.3.1 處理Haar特徵分類器模型的檔案結構

3.3.2 加入正樣本

3.3.3 加入負樣本

3.3.4 正樣本標記資料

3.3.5 顯示及修改框選區域

3.3.6 調整框選區域寬高比

3.3.7 增加車牌數量

3.3.8 訓練Haar特徵分類器

3.4 使用Haar特徵分類器模型

3.4.1 Haar特徵分類器模型語法

3.4.2 車牌號碼偵測



CH04 OpenCV影像辨識-車牌



4.1 專題方向

4.2 車牌號碼擷取

4.2.1 原始圖片轉換尺寸

4.2.2 擷取車牌號碼圖形

4.2.3 以輪廓偵測分割車牌號碼文字

4.2.4 組合擷取車牌號碼文字圖形

4.2.5 去除畸零地

4.3 車牌辨識

4.3.1 文字辨識

4.3.2 單一車牌辨識

4.3.3 整批車牌辨識



CH05 火箭級智慧影像辨識-Yolo



5.1 Yolo是什麼？

5.1.1 Yolo發展歷程

5.1.2 Yolo偵測物體原理概述

5.1.3 Yolo偵測物體種類

5.2 建立Yolo系統

5.2.1 安裝軟體與模組

5.2.2 編譯Yolo

5.2.3 在命令提示字元視窗執行Yolo

5.2.4 以Python程式執行Yolov3

5.3 訓練自訂Yolo偵測模型

5.3.1 標記工具

5.3.2 下載Kaggle口罩資料

5.3.3 轉換PascalVOC為Yolo格式

5.3.4 建立訓練組態資料結構

5.3.5 訓練模型



CH06 使用Colab訓練Yolo模型



6.1 Colab：功能強大的虛擬機器

6.1.1 Colab介紹

6.1.2 Colab建立記事本

6.1.3 Jupyter Notebook基本操作

6.1.4 Colab連接Google Drive雲端硬碟

6.1.5 執行Linux命令

6.2 Colab中訓練Yolo模型

6.2.1 整理口罩資料

6.2.2 進行Yolov3模型訓練

6.2.3 訓練Yolo模型注意事項

6.2.4 訓練其他Yolo模型

6.3 使用自行訓練的Yolo模型

6.3.1 在Colab中使用自行訓練Yolo模型

6.3.2 在Python中使用自行訓練Yolo模型



CH07 最強智慧影像辨識-dlib



7.1 dlib人臉偵測

7.1.1 安裝dlib

7.1.2 簡單人臉偵測

7.1.3 5點特徵人臉偵測

7.1.4 CNN訓練模型人臉偵測

7.1.5 68點特徵人臉偵測

7.1.6 攝影機圖像中畫出點輪廓

7.2 dlib人臉辨識

7.2.1 人臉辨識

7.2.2 dlib人臉登入系統

7.3 dlib其他應用

7.3.1 偵測嘴巴是否張開

7.3.2 偵測打瞌睡

7.3.3 物體追蹤



CH08 dlib自行訓練模型



8.1 dlib訓練自己模型

8.1.1 擷取影片畫面蒐集資料

8.1.2 標記圖片

8.1.3 訓練模型

8.1.4 使用模型

8.1.5 自行訓練模型應用：車流偵測

8.2 dlib訓練進階模型

8.2.1 偵測多物體功能

8.2.2 訓練車牌特徵點模型

8.2.3 使用車牌特徵點模型

8.2.4 車牌特徵點模型應用",https://cf-assets2.tenlong.com.tw/products/images/000/152/448/medium/ACL059700.jpg?1599812248
完全精通微軟 Web 架構：ASP.Net Core 3 最新強實戰,蔣金楠,深智數位,9789865501402,2020/7/21,"本書特色

► 可在Windows、macOS、Linux平台上開發.NET Core應用，也可以透過Docker容器部署ASP.NET Core 

► 植入架構、請求處理管線等建立ASP.NET Core應用的基本程式設計模式，依賴植入原理及架構的設計與程式設計方式完整介紹

► 抽象的檔案系統，包括物理檔案系統和程式集內嵌檔案系統

► 介紹支援多種資料來源的設定系統；採用Options模式來讀取設定選項

► 介紹5種常用的記錄診斷記錄檔的方式及多種輸出通道的記錄檔系統

► 承載系統以及從程式設計模型的角度來認識管線

► 提供一個極簡版的模擬架構來展示ASP.NET Core架構真實的管線

► 針對請求的處理則表現在有序排列的中介軟體上，包括處理檔案請求、路由、例外的中介軟體，也包含用來回應快取和階段的中介軟體

► 詳細說明認證、授權、跨域資源分享等安全相關的中介軟體

► 介紹當地語系化、健康檢查的中介軟體。除此之外，亦包含實現主機名稱過濾、HTTP重新定義、設定基礎路徑等功能的中介軟體

本書重點

ASP.NET Core是一個全新的Web開發平台，作為核心的Web開發平台，ASP.NET Core可利用其極具擴展能力的請求處理管線，來支撐目前常用的開發模型，如MVC、GRPC、SingalR和Orleans等。不論從事哪種類型的Web開發，甚至可以在ASP.NET Core平台上構建自己的Web程式設計模型。

本書主要內容

全書主要劃分為以下4部分： 

► 跨平台的開發體驗和實現原理

01 透過Hello World程式，讓讀者體驗在Windows、macOS、Linux平台上開發.NET Core應用，以及透過Docker容器部署ASP.NET Core應用的樂趣

02 告訴讀者.NET Core的跨平台是如何實現的

► 基礎架構

03、04 對依賴植入原理及依賴植入架構的設計與程式設計方式進行介紹

05 對檔案系統的設計模型和兩種實現方式（物理檔案系統和程式集內嵌檔案系統）進行介紹。

06 介紹支援多種資料來源的設定系統項

07 說明強類型的設定選項程式設計方式

08 介紹5種常用記錄診斷記錄檔的方式

09 介紹.NET Core提供支援多種輸出通道的記錄檔系統

► 管線詳解

10 介紹.NET Core的服務承載系統。

11 從程式設計模型的角度來認識管線

12 提供一個極簡版的模擬架構展示ASP.NET Core架構的整體設計              

13 以模擬架構為基礎，展現ASP.NET Core架構真實的管線

► 中介軟體  

14、15；16、17、18、19、20、21

處理檔案請求、路由、例外的中介軟體，也包含用來回應快取和階段的中介軟體，還包含用來實現認證、授權、跨域資源分享等與安全相關的中介軟體

22介紹針對當地語系化的中介軟體

23 介紹健康檢查的中介軟體

24 介紹用來實現主機名稱過濾、HTTP重新定義、設定基礎路徑等功能的中介軟體

適合讀者群 沒有接觸過ASP.NET Core的開發人員、資深的.NET開發設計人員、所有.NET技術從業人員。



    

    作者簡介
    
      蔣金楠

知名IT博主（長踞博客園排名第一），擁有個人微信公眾號「大內老A」。連續12次被評為微軟MVP（最有價值專家），也是少數跨多領域的MVP（Solutions Architect、Connected System、Microsoft Integration和ASP.NET/IIS等），暢銷IT圖書作者。

    

    目錄大綱
    
      目錄

前言

01全新的開發體驗

1.1 Windows 平台

1.2 macOS 使用者

1.3 Linux

1.4 Docker 

02 跨平台的奧秘

2.1 歷史的枷鎖

2.2 重複使用之傷

2.3 全新的版面配置

03 依賴植入（上篇）

3.1 控制反轉 

3.2 IoC 模式

3.3 依賴植入

3.4 一個簡易版的依賴植入容器

04 依賴植入（下篇）

4.1 利用容器提供服務

4.2 服務註冊

4.3 服務的消費

4.4 實現概覽 

4.5 擴充

05 檔案系統

5.1 抽象的檔案系統

5.2 設計詳解

5.3 遠端檔案系統

06 設定選項（上篇）

6.1 讀取設定資訊 

6.2 設定模型

6.3 設定綁定

6.4 設定的同步

6.5 多樣性的設定來源 3

07 設定選項（下篇）

7.1 Options 模式

7.2 Options 模型

7.3 依賴植入

08 診斷記錄檔（上篇）

8.1 各種診斷記錄檔形式

8.2 Debugger 偵錯記錄檔

8.3 TraceSource 追蹤記錄檔

8.4 EventSource 事件記錄檔 

8.5 DiagnosticSource 診斷記錄檔

09 診斷記錄檔（下篇）

9.1 統一記錄檔程式設計模式

9.2 記錄檔模型詳解

9.3 依賴植入

9.4 記錄檔輸出通道

10 承載系統

10.1 服務承載 

10.2 承載模型

10.3 實現原理 

11 管線（上篇）

11.1 管線式的請求處理

11.2 依賴植入

11.3 設定 

11.4 承載環境

11.5 初始化

12 管線（中篇）

12.1 中介軟體委派鏈

12.2 伺服器

12.3 承載服務

13 管線（下篇）

13.1 請求上下文

13.2 IServer + IHttpApplication 

13.3 中介軟體委派鏈 

13.4 應用的承載

14 靜態檔案

14.1 架設檔案伺服器

14.2 處理檔案請求 

14.3 處理目錄請求

15 路由

15.1 路由對映

15.2 終節點的解析與執行

15.3 路由約束 

16 例外處理

16.1 呈現錯誤訊息

16.2 開發者例外頁面

16.3 例外處理器 

16.4 回應狀態碼頁面

17 快取

17.1 將資料快取起來

17.2 本機記憶體快取

17.3 分散式快取 

17.4 回應快取

18 階段

18.1 利用階段保留「語境」

18.2 階段狀態的讀寫

18.3 SessionMiddleware 中介軟體

19 認證

19.1 認證、登入與登出 

19.2 身份與使用者

19.3 認證模型

19.4 Cookie 認證方案

20 授權

20.1 以角色為基礎的許可權控制

20.2 以「要求」為基礎的授權

20.3 以「策略」為基礎的授權 

21 跨域資源分享

21.1 處理跨域資源

21.2 CORS 標準

21.3 CORS 模型

22 當地語系化

22.1 提供當地語系化訊息文字

22.2 文字當地語系化

22.3 目前語言文化的設定

23 健康檢查

23.1 檢查應用的健康狀況

23.2 設計與實現 

23.3 發佈健康報告

24 補遺

24.1 過濾主機名稱

24.2 HTTP 重新定義

24.3 基礎路徑 

24.4 路由 

A 實例示範",https://cf-assets2.tenlong.com.tw/products/images/000/150/204/medium/DM2030_3D.jpg?1594119076
網站可靠性工程工作手冊｜導入SRE的實用方法 (The Site Reliability Workbook),"Betsy Beyer 等著
          江少傑 譯",歐萊禮,9789865026011,2020/9/29,"《網站可靠性工程》曾在業界引爆一陣探討現代生產服務運行的意義，以及為何可靠性考量是服務設計的基礎的熱潮。現在，這本熱銷書的原班人馬，再度推出了一本實戰手冊。以具體的案例，說明如何將SRE的原則與操練，應用在實際的工作環境。



本書不只結合了Google的實用經驗，也涵蓋了Google雲端平台（GCP）客戶的個案研究，包括Evernote、家得寶（Home Depot）、紐約時報等公司在實務上的成敗經驗。



無論您的公司規模大小，研讀本書都能讓您的SRE實踐更加得心應手。



透過本書，您可以了解：

．如何在你無法完全掌控的環境（如雲端）運維可靠服務

．如何以服務水準目標(SLO)建立、監控並運維服務的實務

．如何把現有的運維團隊轉變成SRE團隊，同時擺脫運維過載夢魘

．從零開始或半路出家的SRE實踐方法

 




名人推薦



「本書都是實際的案例，告訴你如何專注在使用者與工程師間，以及技術與工具間的互動，來優化可靠性，又不拖累開發步調。內容引人入勝、饒富趣味、看過《網站可靠性工程》，也不能錯過這一本」，Casey Rosenthal, Backplane技術長



「這本書補上了《網站可靠性工程》欠缺的部分。前一本書說明他們做了什麼，但你未必能夠套用這些案例的解法。本書不只示範了他們怎麼做，並為你設身處地，量身打造屬於你的做法。」，David N. Blank-Edelman,全球SRE大會的共同發起人



「這本實用又切中實務的指南，引導實行SRE，讓大大小小公司的工程師們，都能獲益匪淺。他們分享的細節鉅細靡遺，令我印象深刻，有這樣一本實務經驗分享的書，真是太好了。你可以運用這本書，馬上躬行實踐SRE，打造更可靠的系統。」，Tammy Bütow, Gremlin首席可靠性工程師



「讓SRE演變成大規模運維之必要實踐的幕後推手Google SRE團隊，及時地提醒我們：可靠性是人創造的。本書有許多實用的案例，說明如何專注於使用者與工程師的互動，以及技術與工具間的相輔相成，從而以可靠性為基礎優化系統，同時又不用犧牲功能開發的速度。結果就是這本很有說服力、引人入勝又啟迪人心的SRE指南。」，—Casey Rosenthal, Bckplane.io技術長



「Google第一本SRE之書解釋了SRE是什麼，以及為什麼要SRE。這本書則是說明如何實行SRE，這是Google編輯團隊的又一鉅作。」，—Jonah Horowitz, Stripe網站可靠性工程師



「《網站可靠性工程》描述Google做了什麼，本書則是告訴讀者，Google如何實行SRE，以及您也可以如何依樣畫葫蘆。」，David N. Blank-Edelman, 全球SREcon大會共同創辦人



    

    作者簡介
    
      Betsy Beyer, Niall Richard Murphy, Dave Rensin, Kent Kawahara & Stephen Thorne 等人，都是 Google SRE 團隊的現任與過往成員，負責管理與維護 Google 的正式系統環境

    

    目錄大綱
    
      前言一

前言二

序言

譯序



第一章 SRE 與 DevOps 如何琴瑟和鳴



【第一篇 基礎】

第二章 實施 SLO

第三章 SLO 工程案例研究

第四章 監控

第五章 就 SLO 告警

第六章 消滅苦工

第七章 簡單性



【第二篇 實踐】

第八章 on-call

第九章 事故回應

第十章 事後檢討文化：從失敗中學習

第十一章 管理負載

第十二章 非抽象大型系統設計簡介

第十三章 資料處理流水線

第十四章 組態設定的設計與最佳實踐

第十五章 組態設定的細節

第十六章 金絲雀發布



【第三篇 流程】

第十七章 識別過載並從其中復原

第十八章 SRE 積極參與模型

第十九章 SRE：跨越疆界

第二十章 SRE 團隊之生命週期

第二十一章 SRE 組織變革管理



結論

附錄A SLO 文件範本

附錄B 範例犯錯預算政策

附錄C 事後檢討分析結果

索引",https://cf-assets2.tenlong.com.tw/products/images/000/152/599/medium/9789865026011.jpg?1600742120
"單元測試的藝術, 2/e (The Art of Unit Testing: with examples in C#,  2/e)",Roy Osherove 著、陳仕傑(91) 譯,博碩文化,9789864342471,2017/9/28,"不管你是對單元測試或是測試驅動開發的新手，還是已經有豐富經驗的人，都能在這本書裡找到適合自己的內容。

——《無瑕的程式碼》作者 Robert C. Martin（Bob大叔）



《單元測試的藝術》很重要，在好幾年前就應該要有這麼一本書了！

——Michael Feathers



這本書將單元測試所有相關知識解釋地完整透徹。

——連任八屆微軟最有價值專家 陳仕傑(91)





理解如何撰寫單元測試，以及讓它們變得可維護、可讀、可被信任，是這本書的主要內容，不管你使用的是何種程式語言跟編輯器。這本書涵蓋了撰寫單元測試的基本知識，並且講解互動測試的基礎，介紹了在真實世界撰寫、管理和維護單元測試的最佳實踐。



    

    作者簡介
    
      作者 Roy Osherove

從事程式設計已超過15年，他在世界各地擔任顧問及訓練團隊，教導有關單元測試的藝術以及測試驅動開發（TDD）。部落格網址為ArtOfUnitTesting.com。



譯者 陳仕傑(91)

連任八屆微軟最有價值專家（2010~2017）

著作：《ASP.NET MVC 5：網站開發美學》（12刷）、《ASP.NET MVC4 網站開發美學》

譯作：《敏捷開發實踐》

審校：《進入IT產業必讀的200個.NET面試決勝題》

講師：各大技術研討會、知名企業內訓與公開培訓講師、知名部落客

    

    目錄大綱
    
      致謝

第二版　序

第一版　序

譯者序

前言

關於本書

關於封面圖片



PART I　入門



Chapter 1　單元測試基礎

1.1　逐步定義單元測試

1.1.1　撰寫優秀單元測試的重要性

1.1.2　我們都寫過（某種）單元測試

1.2　優秀單元測試的特質

1.3　整合測試

1.3.1　與自動化單元測試相比，非自動化整合測試的缺點

1.4　什麼是優秀的單元測試

1.5　一個簡單的單元測試範例

1.6　測試驅動開發

1.7　成功進行TDD 的三種核心技能

1.8　小結



Chapter 2　第一個單元測試

2.1　單元測試框架

2.1.1　單元測試框架提供哪些東西

2.1.2　xUnit 框架

2.2　LogAn 專案介紹

2.3　NUnit 的第一個步驟

2.3.1　安裝NUnit

2.3.2　載入方案的方式

2.3.3　在程式中使用NUnit 的特性

2.4　撰寫第一個測試程式

2.4.1　Assert 類別

2.4.2　用NUnit 執行第一個測試

2.4.3　增加正向的測試

2.4.4　由紅到綠：測試成功

2.4.5　測試程式風格

2.5　使用參數來重構測試

2.6　更多的NUnit 特性

2.6.1　setup 和teardown

2.6.2　驗證預期的例外

2.6.3　忽略此測試

2.6.4　NUnit 的流利語法

2.6.5　設定測試分類

2.7　測試系統狀態的改變，而非驗證回傳值

2.8　小結



PART II　核心技術



Chapter 3　透過虛設常式解決依賴問題

3.1　虛設常式簡介

3.2　找到LogAn 中對檔案系統的依賴

3.3　如何讓測試LogAnalyzer 更簡單

3.4　重構設計以提昇程式碼的可測試性

3.4.1　擷取介面以便替換底層實作內容

3.4.2　依賴注入：在被測試單元中注入一個假的實作內容

3.4.3　從建構函式注入一個假物件（建構函式注入）

3.4.4　用假物件來模擬異常

3.4.5　透過屬性get 或set 注入假物件

3.4.6　在呼叫方法之前才注入假物件

3.5　重構技術的變形

3.5.1　透過擷取與覆寫直接模擬假結果

3.6　克服封裝的問題

3.6.1　使用internal 和[InternalsVisibleTo]

3.6.2　使用[Conditional] 特性

3.6.3　使用 #if 和 #endif 進行條件編譯

3.7　小結



Chapter 4　使用模擬物件驗證互動

4.1　基於值、狀態與互動的測試

4.2　模擬物件和虛設常式物件的差異

4.3　手刻模擬物件的簡單範例

4.4　同時使用模擬物件和虛設常式物件

4.5　每個測試只用一個模擬物件

4.6　假物件鏈：用虛設常式物件來產生模擬物件或其他虛設常式物件

4.7　手刻模擬物件和虛設常式物件的問題

4.8　小結



Chapter 5　隔離（模擬）框架

5.1　為什麼要使用隔離框架

5.2　動態產生假物件

5.2.1　在測試中使用NSubstitute

5.2.2　用動態假物件來取代手刻假物件

5.3　模擬回傳值

5.3.1　同時使用模擬物件和虛設常式物件

5.3.1.1　驗證物件是帶著某些屬性的情況

5.4　測試事件相關的活動

5.4.1　測試事件監聽者

5.4.2　測試事件是否觸發

5.5　現有的.NET 隔離框架

5.6　隔離框架的優缺點

5.6.1　使用隔離框架時應避免的陷阱

5.6.2　測試程式可讀性變差

5.6.3　驗證了錯誤的東西

5.6.4　一個測試中有多個模擬物件

5.6.5　過度指定的測試

5.7　小結



Chapter 6　深入了解隔離框架

6.1　受限框架和不受限框架

6.1.1　受限框架

6.1.2　不受限框架

6.1.3　基於探查器的不受限框架是如何運作的

6.1.4　框架揭露了不同的探查器能力

6.2　好的隔離框架的價值

6.3　支援適應未來和可用性的功能

6.3.1　遞迴假物件

6.3.2　預設忽略參數

6.3.3　大範圍偽造

6.3.4　假物件的非嚴格行為

6.3.5　非嚴格模擬物件

6.4　隔離框架設計反模式

6.4.1　概念混淆

6.4.2　錄製與重播

6.4.3　黏性行為

6.4.4　語法過於複雜

6.5　小結



PART III　測試程式碼



Chapter 7　測試階層和組織

7.1　執行自動化測試的自動化建置

7.1.1　建置腳本結構

7.1.2　觸發建置和整合

7.2　依據速度和種類對應的測試分類

7.2.1　分開整合測試和單元測試的人為因素

7.2.2　綠色安全區域

7.3　確保測試程式是版本庫管理的一部分

7.4　將測試類別的位置與被測試程式相對應

7.4.1　將測試對應到專案

7.4.2　把測試對應到類別

7.4.3　將測試對應到明確的工作單元入口

7.5　注入橫切面關注點

7.6　為應用程式建立測試API

7.6.1　使用繼承類別繼承模式

7.6.2　建立測試輔助類別和方法

7.6.3　把你的API 介紹給開發人員

7.7　小結



Chapter 8　好的單元測試的支柱

8.1　撰寫可信任的測試

8.1.1　決定何時刪除或修改測試

8.1.2　避免測試中帶著邏輯

8.1.3　每次只測試一個關注點

8.1.4　把單元測試和整合測試分開

8.1.5　用程式碼審查確保程式碼覆蓋率

8.2　撰寫可維護的測試

8.2.1　測試私有或保護的方法

8.2.2　去除重複的程式碼

8.2.3　具可維護性的設計來使用Setup 方法

8.2.4　實作測試隔離

8.2.5　避免對不同的關注點進行多次驗證

8.2.6　物件比較

8.2.7　避免過度指定

8.3　撰寫可讀性高的測試

8.3.1　單元測試的命名

8.3.2　變數命名

8.3.3　有意義的驗證

8.3.4　驗證和操作分離

8.3.5　setup 和teardown

8.4　小結



PART IV　設計與流程



Chapter 9　在組織中導入單元測試

9.1　逐步成為導入變革的領頭羊

9.1.1　準備好面對各種質疑

9.1.2　說服組織內成員：支持者和反對者

9.1.3　找到可能的切入點

9.2　成功之道

9.2.1　游擊式的進行（從下而上）

9.2.2　說服高層（從上而下）

9.2.3　引入外援

9.2.4　讓進度可見

9.2.5　設定具體目標

9.2.6　應對阻礙

9.3　失敗原因

9.3.1　缺乏驅動力

9.3.2　缺乏政策支援

9.3.3　糟糕的實現和第一印象

9.3.4　缺少團隊支持

9.4　影響因素

9.5　質疑和回答

9.5.1　現有流程加入單元測試需增加多少時間

9.5.2　單元測試是否會搶了QA 飯碗

9.5.3　證明單元測試確實有效的方式

9.5.4　單元測試有用的證據

9.5.5　QA 部門還是能夠找到bug 的原因

9.5.6　我們有大量未經測試的程式碼，應該從哪裡開始

9.5.7　我們使用了多種程式語言：單元測試是否可行

9.5.8　軟硬體結合的開發

9.5.9　確保測試中沒有bug 的方式

9.5.10　偵錯器已經證明我的程式沒問題，但還需要測試的原因

9.5.11　測試驅動開發的必要性

9.6　小結



Chapter 10　遺留程式碼

10.1　從哪裡開始加入測試

10.2　決定選擇策略

10.2.1　先易後難策略的優缺點

10.2.2　先難後易策略的優缺點

10.3　在重構前撰寫整合測試

10.4　針對遺留程式碼進行單元測試的重要工具

10.4.1　使用不受限的隔離框架來輕鬆隔離依賴項

10.4.2　使用JMockit 測試Java 遺留程式碼

10.4.3　重構Java 程式碼時使用Vise

10.4.4　重構前使用驗收測試

10.4.5　閱讀Michael Feathers 關於遺留程式碼的書

10.4.6　使用NDepend 來分析產品程式碼

10.4.7　使用ReSharper 瀏覽和重構產品程式碼

10.4.8　 使用Simian 和TeamCity 發現重複的程式碼（和bug）

10.5　小結



Chapter 11　設計與可測試性

11.1　為什麼在設計的時候要關心可測試性

11.2　可測試性的設計目標

11.2.1　預設情況下將方法設定為虛擬方法

11.2.2　使用介面導向的設計

11.2.3　預設情況下將類別設計成可繼承的

11.2.4　避免在包含邏輯的方法裡面初始化具體類別

11.2.5　避免直接呼叫靜態方法

11.2.6　避免在建構式和靜態建構式中包含邏輯程式碼

11.2.7　把單例邏輯和單例持有者分開

11.3　可測試性設計的利弊

11.3.1　工作量

11.3.2　複雜度

11.3.3　洩漏敏感的智慧財產權

11.3.4　有時無法進行

11.4　可測試性設計的替代方案

11.4.1　設計爭論與動態型別語言

11.5　難以測試設計的範例

11.6　小結

11.7　更多資源



Appendix A　工具和框架

A.1　隔離框架

A.1.1　Moq

A.1.2　Rhino Mocks

A.1.3　Typemock Isolator

A.1.4　JustMock

A.1.5　Microsoft Fakes（Moles）

A.1.6　NSubstitute

A.1.7　FakeItEasy

A.1.8　Foq

A.1.9　Isolator++

A.2　測試框架

A.2.1　Mighty Moose（又叫：ContinousTests）持續執行器

A.2.2　NCrunch 持續執行器

A.2.3　Typemock Isolator 測試執行器

A.2.4　CodeRush 測試執行器

A.2.5　ReSharper 測試執行器

A.2.6　TestDriven.NET 執行器

A.2.7　NUnit GUI 測試執行器

A.2.8　MSTest 執行器

A.2.9　Pex

A.3　測試API

A.3.1　MSTest API：微軟的單元測試框架

A.3.2　MSTest for Metro Apps（Windows Store）

A.3.3　NUnit API

A.3.4　xUnit.net

A.3.5　FluentAssertion 驗證API

A.3.6　Shouldly 輔助API

A.3.7　SharpTestsEx 輔助API

A.3.8　AutoFixture 輔助API

A.4　控制反轉容器

A.4.1　Autofac

A.4.2　Ninject

A.4.3　Castle Windsor

A.4.4　Microsoft Unity

A.4.5　StructureMap

A.4.6　微軟的託管可擴充框架（MEF）

A.5　資料庫測試

A.5.1　為資料庫進行整合測試

A.5.2　使用TransactionScope 還原（rollback）資料修改

A.6　Web 測試

A.6.1　vonna

A.6.2　Team System web test

A.6.3　Watir

A.6.4　Selenium WebDriver

A.6.5　Coypu

A.6.6　Capybara

A.6.7　JavaScript 測試

A.7　UI 測試（桌面）

A.8　執行緒相關的測試

A.8.1　Microsoft CHESS

A.8.2　Osherove.ThreadTester

A.9　驗收測試

A.9.1　FitNesse

A.9.2　SpecFlow

A.9.3　Cucumber

A.9.4　TickSpec

A.10　BDD 風格的API 框架",https://cf-assets2.tenlong.com.tw/products/images/000/110/283/medium/MP11802_BIG.jpg?1525539971
"離散數學 (Rosen: Discrete Mathematics and Its Applications, 7/e)(授權經銷版)",Kenneth H. Rosen 著、謝良瑜、陳志賢 譯,美商麥格羅希爾,9789861579115,2012/12/30,"<內容簡介>
隨著電腦科學的飛速發展，離散數學的重要性則日益彰顯。它為許多資訊科學課程提供了數學基礎，包括資料結構、演算法、資料庫理論、形式語言與作業系統等。如果沒有離散數學的相關數學基礎，學生在學習上述課程中，便會遇到較多的困難。此外，離散數學也包含了解決作業研究、化學、工程學、生物學等眾多領域的數學背景。Rosen教授所著之《離散數學》（Discrete Mathematics and its Applications, 7e）是一本文字淺顯易懂的數學書，提供豐富的習題、補充內容。作者使用精準的數學語言，但又不過度形式化與抽象化。此外，還補充重要數學家的生平簡介，更為抽象的數學概念增添了些許人文氣息，豐富了上課的趣味。 

本書特色
　　本書非常強調數學推理，以及各種解題方式。大體而言，有五個重要的主題貫穿本書：
  數學推理：本書一開始針對數理邏輯進行探討，討論證明時，建構證明的科學面和藝術面都會顧及。特別強調數學歸納法的技巧，藉由各種不同形態的範例進行說明。
  組合分析：本書在討論如何列舉物件時，先從計數的基本技術開始。我們的重點在於使用組合分析來解決計數問題，以及演算法的解析，而不是直接套用公式。
  離散結構：離散數學的課程應該要教學生如何處理離散結構──用以代表離散物件及其間關係之抽象的數學結構。離散結構包括集合、排列、關係、圖形、樹圖及有限狀態機器。
  演算法思考：某些類別的問題可藉由演算法的明確敘述來解決。一旦演算法被清楚說明之後，就可建構電腦程式予以執行。描述演算法的方式，除了日常語言之外，也會用到容易明瞭的虛擬碼形式。
  應用與模型化：本書探討了許多關於資訊科學和資料網路方面的應用，另外還包括化學、植物學、動物學、語言學、地理、商業、網際網路等各種領域。將離散數學模型化是極為重要的一種解題技巧，學生可以從習題中揣摩發展，建構出屬於自己的模型。
<章節目錄>
第1章　基礎：邏輯與證明
第2章　基本結構：集合、函數、序列、總和與矩陣
第3章　演算法
第4章　數論與密碼學
第5章　歸納與遞迴
第6章　計數
第7章　進階計數技巧
第8章　關係
第9章　圖形
第10章　樹圖
第11章　布林代數（CD）
附錄1　實數與正整數的公理（CD）
附錄2　指數函與對數函數（CD）
附錄3　虛擬碼（CD）",https://cf-assets1.tenlong.com.tw/images/79206/medium/201305310404589861579117.jpg
"Python 機器學習 (上), 3/e (Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow, 3/e)","Sebastian Raschka、Vahid Mirjalili　著
          劉立民、吳建華　譯",博碩文化,9789864345182,2020/9/14,"Python機器學習第三版（上）

Python Machine Learning - Third Edition



循序漸進、由淺入深，好評熱銷再進化！最新修訂的《Python機器學習第三版》是一本不容錯過的全方位指南，也是讀者在建立機器學習系統時的必備參考。有別於其他機器學習教科書，本書使用Python探求機器學習和深度學習的技術精髓，強調豐富實用的程式範例、條理分明的數學解釋，以及直覺友善的圖解說明，帶領讀者探索機器學習的眾多子領域，讓艱澀的概念栩栩如生。



許多讀者告訴我們，他們非常喜歡本書第二版的前12章，因為它們全面介紹了機器學習與Python的科學計算。為了確保這些內容的相關性，我們依據讀者回饋，回顧並修改了這些章節，以支援最新版本的NumPy、SciPy、pandas、matplotlib和scikit-learn，並規劃成本書的上冊。而TensorFlow 2.0更是深度學習領域最振奮人心的事件之一，所有與TensorFlow有關的章節（第13章到第16章，規劃成本書的下冊）都進行了大幅度修改。除了介紹Keras API與scikit-learn的最新功能之外，本書也探討自然語言處理（NLP）的子領域「情緒分析」，以及強化學習（RL）和生成對抗網路（GAN）等時下最流行的AI技術（第17章和第18章）。



無論你是有經驗的程式設計師，或是機器學習新手，或你只想進一步深入了解機器學習的最新發展，本書將是你在機器學習之旅中的絕佳良伴。



在這本書中，你將學到：

⦁ 掌握能讓機器從數據中「學習」的框架、模型和技術

⦁ 使用scikit-learn進行機器學習、使用TensorFlow進行深度學習

⦁ 利用機器學習來做影像分類、情緒分析與智慧Web應用程式

⦁ 訓練類神經網路、GAN與其它模型

⦁ 結合機器學習模型與Web應用程式

⦁ 為機器學習工作清理並準備數據

⦁ 用深度卷積類神經網路來分類影像

⦁ 了解評估和調校模型的最佳實作

⦁ 使用迴歸分析來預測連續目標

⦁ 利用「集群」來發掘數據中隱藏的模式與結構

⦁ 使用「情緒分析」深入研究文本和社群媒體數據

⦁ 上冊包含本書前12章，下冊則包含第13章到第18章。



【下載範例程式檔案】

本書的程式碼是由GitHub託管，可點選下面圖案前往下載：

https://github.com/rasbt/python-machine-learning-book-3rd-edition



【下載本書的彩色圖片】

我們還提供您一個PDF檔案，其中包含本書使用的彩色圖表，可以在此下載：

https://static.packt-cdn.com/downloads/9781789955750_ColorImages.pdf

 


        

    

    作者簡介
    
      Sebastian Raschka　擁有密西根州立大學（Michigan State University）的博士學位，在那裡，他專攻開發將「計算生物學」（computational biology）與「機器學習」結合使用的方法。2018年的夏天，他加入威斯康辛大學麥迪遜分校（University of Wisconsin-Madison），擔任「統計學」的助理教授。他的研究活動包括開發「新的深度學習架構」來解決生物識別（biometrics）領域的問題。



他引以為傲的成就之一是他的著作《Python機器學習》，這也是Packt和Amazon上的暢銷書。本書在2016年榮獲ACM的最佳計算類別獎項（Best of Computing award），並被翻譯成多種不同語言，包括德文、韓文、中文、日文、俄文、波蘭文和義大利文。



Vahid Mirjalili 是密西根州立大學的機械工程博士，專攻大規模「分子結構」計算模擬的新方法研究。他曾是密西根州立大學「iPRoBe實驗室」的一員，致力於各種機器學習在「電腦視覺」與「生物識別」中的應用專案。在「iPRoBe實驗室」與「學術界」耕耘了多年之後，他最近加入3M公司，成為一位研究科學家，利用他的「專業知識」以及應用機器學習與深度學習的「先進技術」，在各種應用程式中解決真實世界的問題，讓生活變得更好。

    

    目錄大綱
    
      前言

第1章：賦予電腦從數據中學習的能力

製作智慧機器，將數據轉成知識

三種不同類型的機器學習

基本術語和符號

建構機器學習系統的準則

使用Python 來做機器學習

小結



第2章：訓練簡單的機器學習分類演算法

類神經元－早期機器學習的驚鴻一撇

以Python 實作感知器學習演算法

適應線性神經元和學習的收斂

小結



第3章：使用scikit-learn巡覽機器學習分類器

選擇一個分類演算法

首次使用scikit-learn－訓練感知器

以邏輯斯迴歸對類別機率塑模

以支援向量機處理最大化分類邊界

使用核心支援向量機解決非線性問題

決策樹學習

k最近鄰－惰式學習演算法

小結



第4章：建置良好的訓練數據集－數據預處理

處理數據遺漏

處理分類數據

將數據集區分為訓練用與測試用

縮放特徵令其具相同比例

選取有意義的特徵

以隨機森林評估特徵的重要性

小結



第5章：透過降維來壓縮數據

以主成分分析對非監督式數據壓縮

利用線性判別分析做監督式數據壓縮

利用核主成分分析處理非線性對應

小結



第6章：學習模型評估和超參數調校的最佳實作

以管線來簡化工作流程

使用k折交叉驗證法來評估模型效能

使用學習曲線和驗證曲線來對演算法除錯

以網格搜尋微調機器學習模型

其他不同的效能指標

處理類別不平衡的狀況

小結



第7章：結合不同模型來做整體學習

從整體中學習

以多數決結合分類器

裝袋法－以自助樣本建立整體分類器

利用適應強化來提升弱學習器效能

小結



第8章：將機器學習應用於情緒分析

準備IMDb影評數據以便進行文字處理

詞袋模型簡介

訓練一個邏輯斯迴歸模型來做文件分類

處理更大的數據－線上演算法與核外學習

小結



第9章：在Web應用程式上嵌入機器學習模型

序列化適合完成的scikit-learn估計器

設定SQLite資料庫來儲存數據

使用Flask來開發Web應用程式

將影評分類器整合到Web應用程式中

將Web應用程式部署到公共伺服器

小結



第10章：以迴歸分析預測連續目標變數

線性迴歸簡介

探索房屋數據集

使用RANSAC找出強固的迴歸模型

評估線性迴歸模型的效能

使用正規化方法做迴歸

將線性迴歸模型轉成曲線－多項式迴歸

使用隨機森林處理非線性關係

小結



第11章：處理未標記的數據－集群分析

使用k-means來集群相似物件

以階層樹的方式組織集群

使用DBSCAN來定位高密度區域

小結



第12章：從零開始實作多層類神經網路

以類神經網路來對複雜函數塑模

分類手寫數字

訓練一個類神經網路

關於類神經網路的收斂

實作類神經網路的幾句提醒

小結",https://cf-assets2.tenlong.com.tw/products/images/000/151/940/medium/MP12009.jpg?1598607631
PHP 動態網站系統開發與 Laravel 框架運用,歐瑭軒、姜林毅、蔡燕如、林芝吟、洪國鈞、陳朝鈞,博碩文化,9789864345090,2020/8/15,"這是一本專為初學者所設計的PHP網頁程式設計與Laravel框架開發網頁程式的入門書。全書結合多位作者在業界、學界豐富的開發與教學經驗，著重於教導讀者如何將自己的想法表達成程式邏輯，並實際應用到網站系統開發當中。本書將帶領讀者快速掌握網頁程式開發的熱門實用技術，例如：Javascript、RESTful API、網路通訊、Line API…等。此外，本書特別設計語法、指令與範例同步講解的學習方式，使讀者更能了解實務上語法及指令的使用技巧。

有鑑於容器化在軟體開發上漸漸普及，本書將教導讀者使用虛擬化容器技術建置會員管理系統，分享如何將開發的網頁程式容器化，並且部署至Docker環境的實用技術。



★本書特色★

✅本書定位在程式初學者，學會基礎語法與應用系統設計。

✅大量語法搭配範例講解，快速掌握基礎的PHP程式設計技巧。

✅介紹資料庫管理運用和維護基本知識，結合PHP與MySQL的資料庫網頁設計。

✅套用熱門的Laravel框架，讓程式架構更優雅、更容易開發與管理。

✅導入開發常見的實用技術，打造一個會員管理系統。

✅結合時下熱門通訊軟體LINE，讓應用程式更貼近現實生活使用。

✅分享透過Docker容器部署程式的經驗，開發者無需花時間解決環境不一致問題。

✅讀完本書開發技巧，可輕易開發一個實用的應用系統。



★單元介紹★

➤認識動態網頁程式設計

➤執行環境的架設- Apache、PHP、MySQL的安裝與設定

➤網頁的基本架構組成、HTML基本標籤與表單元件

➤PHP運作與架構及語法的使用

➤陣列介紹與應用、多維陣列與結合陣列

➤學習如何建立以及使用函數

➤了解網頁間的資料傳遞與狀態儲存Cookie和Session

➤認識MySQL資料庫系統的基本操作

➤認識Laravel框架架構及開發技巧

➤認識Eloquent ORM應用程式來操作資料庫

➤網頁開發實用技術- RESTful API、AJAX、WebSocket

➤實作Laravel應用系統-會員管理系統

➤Docker虛擬化技術-部署網頁開發及生產環境



    

    作者簡介
    
      歐瑭軒

學歷：國立成功大學製造資訊與系統研究所

研究領域與專長：ASP.NET程式開發

　　　　　　　　Node.js前後端網頁系統開發

　　　　　　　　Deep Learning(深度學習)





姜林毅

經歷：軟體工程師－星禾數位科技有限公司

學歷：國立成功大學製造資訊與系統研究所

研究領域與專長：Android & iOS應用程式開發

　　　　　　　　大型系統規劃與開發(後端伺服器設計)

　　　　　　　　嵌入式應用程式開發



蔡燕如

現任：資深軟體工程師

學歷：國立成功大學製造資訊與系統研究所碩士

研究領域與專長：高併發大型系統開發

　　　　　　　　.NET應用程式開發

　　　　　　　　PHP Laravel網站開發

　　　　　　　　Golang應用程式開發

　　　　　　　　Cloud Computing、Database System(資料庫系統)



林芝吟

現任：資訊助理－賀桃企業

學歷：國立成功大學製造資訊與系統研究所碩士

研究領域與專長：C#.NET WinForm應用程式開發

　　　　　　　　Cloud Computing

　　　　　　　　企業資源規劃(ERP系統)開發

　　　　　　　　Database System(資料庫系統)



洪國鈞

現任：南台科技大學資訊工程系副教授

學歷：國立成功大學資訊工程研究所博士

研究領域與專長：Internet of Tnings(物聯網)

　　　　　　　　Intelligent computing(智慧計算)

　　　　　　　　Mobile Networks(行動網路)



陳朝鈞

現任：國立成功大學資訊工程學系暨製造資訊與系統研究所教授

學歷：國立成功大學資訊工程研究所博士

研究領域與專長：Database System(資料庫系統)

　　　　　　　　Internet Technologies(網際網路技術)

　　　　　　　　Smart Automation System(智慧自動化系統)

    

    目錄大綱
    
      CHAPTER 01 認識動態網頁程式設計

1.1 何謂動態網頁設計？可做哪些應用？

1.2 PHP簡介

1.3 執行環境架設



CHAPTER 02 HTML5介紹

2.1 HTML運作與架構

2.2 HTML到HTML5

2.3 HTML5的基本結構與標籤

2.4 表單



CHAPTER 03 PHP基礎語法介紹

3.1 PHP運作與架構

3.2 PHP嵌入語法

3.3 資料型態、變數與常數

3.4 運算子

3.5 條件敘述

3.6 迴圈



CHAPTER 04 陣列

4.1 陣列

4.2 多維陣列與結合陣列

4.3 陣列元素應用函數



CHAPTER 05 函數

5.1 函數介紹

5.2 常用內建函數



CHAPTER 06 網頁間的資料傳遞

6.1 資料傳遞的觀念說明與使用情境

6.2 PHP網頁的狀態管理

6.3 表單和URL參數的傳遞與接收

6.4 Cookie

6.5 Session



CHAPTER 07 資料庫的基本介紹

7.1 為什麼我們需要使用資料庫？

7.2 MySQL的基本簡介

7.3 建立MySQL資料庫

7.4 SQL語法

7.5 使用SQL語法新增、修改與刪除資料表內容

7.6 資料表的查詢 （SELECT）



CHAPTER 08 PHP與MySQL

8.1 PHP網頁存取MySQL流程觀念

8.2 PHP網頁取得資料表查詢結果

8.3 PHP取得SQL指令的執行狀態



CHAPTER 09 PHP Laravel框架介紹與基本使用

9.1 什麼是框架?

9.2 Laravel 介紹

9.3 Laravel的MVC架構與HTTP請求的生命週期

9.4 Laravel開發環境建置

9.5 Laravel 專案目錄結構

9.6 Routing路由控制

9.7 Laravel Controller 基礎觀念與實作

9.8 Model的基礎觀念

9.9 View的基礎觀念與Blade模板引擎實戰

9.10 Laravel套件管理與常用套件

9.11 總結



CHAPTER 10 使用ORM進行資料庫存取：使用Laravel

10.1 ORM 概念與好處

10.2 Eloquent ORM介紹

10.3 建立與連接資料庫

10.4 建立資料表之前置作業

10.5 資料庫中建立資料表

10.6 使用Eloquent ORM操作資料庫

10.7 總結



CHAPTER 11 常見的實用技術：使用Laravel

11.1 Webhook概念與實作範例

11.2 RESTful APIs概念與實作範例

11.3 JavaScript與PHP+JavaScript （AJAX）實作範例

11.4 WebSocket概念與實作範例



CHAPTER 12 會員管理系統：使用Laravel

12.1 會員管理系統

12.2 製作會員管理系統之準備工作

12.3 製作會員管理系統之步驟與程式碼說明



CHAPTER 13 網站推播應用：使用LINE Notify實作

13.1 何謂推播技術？可做哪些應用？

13.2 推播技術應用觀念

13.3 LINE Notify推播實作範例

13.4 會員系統網站套用LINE Notify推播



CHAPTER 14 Docker建置及部署會員管理系統

14.1 Docker介紹

14.2 建置會員管理系統之環境

14.3 部署會員管理系統

14.4 總結",https://cf-assets2.tenlong.com.tw/products/images/000/151/165/medium/9789864345090_bc.jpg?1596685775
GAN 對抗式生成網路 (GANs in Action: Deep learning with Generative Adversarial Networks),"Jakub Langr、Vladimir Bok 著
          哈雷 譯",旗標科技,9789863126386,2020/9/7,"「GAN 是近年來機器學習領域中最有趣的點子！」這是臉書首席 AI 科學家、也是當今深度學習三巨頭之一的 Yann LeCun 對 GAN (對抗式生成網路) 技術下的註解。

GAN 從誕生至今已經創造了許多令人瞠目結舌的驚人應用，從最早貓圖片的自動產生器、虛擬人臉生成器、到 Deepfake 影片/照片換臉特效，都是 GAN 的應用。光是 GAN 的開山論文，被引用次數就足足是 TensorFlow 的 2.5 倍，不只在技術領域，就連麥肯錫 (McKinsey & Company) 等主流媒體，GAN 的相關討論也時常出現。

但要搞懂這最尖端、最熱門的技術可不容易，網路上許多似是而非的說法，加上漏洞百出的數學推導，讓初學者不得其門而入。

本書目標是針對想從基礎開始學習 GAN（對抗式生成網路）的人，提供最可靠的原理教學與實戰指南。我們將從最簡單的範例開始上手，然後介紹各種最先進的 GAN 技術並用程式實作，包括生成高解析度圖片、圖像轉譯、或製作對抗性樣本等。我們會提供最直觀的解說，讓讀者只需要具備基礎的 Python、深度學習、與數學相關知識，就能直接探索這項如魔法般的尖端科技。

我們希望讀者不但能了解 GAN 到目前為止所取得的成就，還能獲得必要的知識與工具來充實自己，以便進一步展開新的應用。對於充滿企圖心的人來說，GAN 可是具有無窮的潛力，一旦上手，未來在學術界或生活應用上必能大放異彩，很高興您能加入我們的行列。 

本書特色: 

  ●本書由施威銘研究室監修，內容易讀易懂，並加入大量「編註」與「小編補充」以幫助理解及補充必要知識。

●內容涵蓋 Autoencoder/VAE 及各種 GAN 技術，包括 DCGAN、PGGAN、SGAN、CGAN、CycleGAN、NS-GAN、Min-Max GAN、WGAN、BigGANigGAN、StyleGAN、...等，還有對抗性樣本、以及 GAN 在醫學界與時尚界的應用案例。

●不求花俏吸睛，腳踏實地帶你一步步揭開各種 GAN 的神祕面紗。從原理、演算法、架構圖、再到程式實作，讓您一氣呵成、深入體驗 GAN 的奧妙。

●所有範例程式小編都已在 Colab 上實測過，並針對可能因版本不同而遇到的狀況提供說明及解決方案。建議讀者也在免費的 Colab 上執行範例程式，可避免一些環境設定或相容性等問題。

名人推薦:

全面且深入介紹了 AI 的未來 - Simeon Leyzerzon, Excelsior Software

超級實用, 將理論與實作完美整合 - Dana Robinson, The HDF Group

對於發展快速且應用廣泛的 GAN 知識, 做了非常有系統的介紹 - Grigory V. Sapunov, Intento

出色的寫作、加上易於理解的數學解釋 - Bachir Chihani, C3

在「程式設計書、學術理論書、網誌」之間取得了極佳的平衡 - Erik Sapper博士, 加利福尼亞州立理工大學



    

    作者簡介
    
      Jakub Langr 畢業於牛津大學，是一間新創公司的聯合創始人，該公司使用 GAN 進行創意和廣告應用。Jakub 自 2013 年起就一直從事資料科學工作，最近則是在 Filtered.com 負責資料科學技術，並在 Mudano 從事資料科學研發工作。他還在伯明翰大學（英國）和眾多民營公司設計並教授資料科學課程，另兼任牛津大學客座講師。他也是《Entrepreneur First》第七屆深度技術人才投資者中的一位駐點創業者。Jakub 還是皇家統計學會的研究員，並受邀在各種國際會議上發表演說。他將本書的全部收益捐給英國非營利心臟基金會。

Vladimir Bok 以優異成績取得哈佛大學計算機科學學士學位。他是在微軟研究院從事音樂風格轉換的相關研究時，見證到 GAN 的巨大潛力。他的工作經驗豐富，從 Y Combinator 投資的新創公司應用資料科學部門，到微軟的領導跨職能計劃皆有涉入。Vladimir 最近在紐約的一家新創公司管理資料科學專案，該公司針對線上旅行與電子商務網站提供機器學習服務，其中不乏《財訊》所列的五百大企業。他將本書的所有收益捐給非營利組織《Girls Who Code》。

    

    目錄大綱
    
      [簡要目錄]

第一篇 GAN 與生成模型入門

1 GAN (對抗式生成網路) 簡介

2 用 Autoencoder (AE) 做為生成模型

3 你的第一個 GAN：生成手寫數字

4 深度卷積 GAN (DCGAN)

第二篇 GAN 的進階課題

5 訓練 GAN 時所面臨的挑戰與解決之道

6 漸進式 GAN (PGGAN)

7 半監督式 GAN (SGAN)

8 條件式 GAN (CGAN)

9 CycleGAN

第三篇 GAN 的實際應用及未來方向

10 對抗性樣本 (Adversarial example)

11 GAN 的實際應用

12 展望未來



[完整目錄]

第一篇 GAN 與生成模型入門

第 1 章 GAN (對抗式生成網路) 簡介

1.1 什麼是 GAN (Generative Adversarial Network)？

1.2 GAN 如何運作？

1.3 GAN 的詳細運作流程

1.3.1 GAN 的訓練方式

1.3.2 何時達到均衡 (完成訓練)

1.4 為何要學 GAN？

第 2 章 用 Autoencoder (AE) 做為生成模型

2.1 生成模型 (Generative model) 簡介

2.2 Autoencoder 的運作原理 

2.3 Autoencoder 的架構

2.4 Autoencoder 與 GAN 有何不同？

2.5 Autoencoder 的用途

2.6 「非監督式」與「自監督式」學習 

2.6.1 舊招新用

2.6.2 用 Autoencoder 生成資料

2.6.3 VAE (Variational Autoencoder)

2.7 實例：寫程式實作 VAE 

2.8 再論潛在空間 

2.9 為何我們還是得用 GAN？ 

第 3 章 你的第一個 GAN：生成手寫數字

3.1 GAN 的基礎：對抗訓練 

3.1.1 損失函數

3.1.2 訓練過程

3.2 生成器與鑑別器的目標差異

3.2.1 目標衝突

3.2.2 混淆矩陣 (confusion matrix)

3.3 GAN 的訓練程序 

3.4 實例：生成手寫數字 

3.4.1 匯入模組並設定模型輸入維度

3.4.2 實作生成器

3.4.3 實作鑑別器 

3.4.4 建立並編譯訓練所需的模型

3.4.5 撰寫訓練用的函式

3.4.6 顯示生成的圖片

3.4.7 開始訓練模型

3.4.8 檢查結果

3.5 結語

第 4 章 深度卷積 GAN (DCGAN)

4.1 卷積神經網路 (CNN)

4.1.1 卷積濾鏡 (Convolutional filter)

4.1.2 將 CNN 的概念視覺化

4.2 DCGAN 簡史

4.3 批次正規化 (Batch normalization)

4.3.1 了解正規化

4.3.2 批次正規化計算

4.4 實例：用 DCGAN 生成手寫數字 

4.4.1 匯入模組並設定模型輸入的維度

4.4.2 實作 DCGAN 的生成器

4.4.3 實作 DCGAN 的鑑別器

4.4.4 建立並運行 DCGAN

4.4.5 模型輸出

4.5 結語

第二篇 GAN 的進階課題

第 5 章 訓練 GAN 時所面臨的挑戰與解決之道

5.1 評估訓練成效的方法

5.1.1 各種可能的評估方法

5.1.2 起始分數 (IS)

5.1.3 Fréchet 初始距離 (FID)

5.2 訓練上的挑戰

5.2.1 逐步增加神經網路的深度

5.2.2 更改賽局的設計與評估方式

5.2.3 Min-Max GAN

5.2.4 非飽和 GAN (NS-GAN)

5.2.5 何時該結束訓練

5.2.6 Wasserstein GAN (WGAN)

5.3 賽局設計的重點整理 

5.4 訓練 GAN 的實用技巧

5.4.1 將輸入正規化

5.4.2 批次正規化

5.4.3 梯度懲罰

5.4.4 給鑑別器更多的訓練

5.4.5 避免稀疏梯度

5.4.6 使用標籤平滑或增加標籤雜訊

第 6 章 漸進式 GAN (PGGAN)

6.1 於潛在空間中做插值

6.2 進展快速的 PGGAN

6.2.1 以漸進方式擴充圖層解析度

6.2.2 程式觀摩

6.2.3 小批次標準差

6.2.4 均等學習率

6.2.5 生成器的逐像素特徵正規化

6.3 PGGAN 的關鍵改良總結

6.4 TensorFlow Hub 入門

6.5 實際應用

第 7 章 半監督式 GAN (SGAN)

7.1 認識 SGAN

7.1.1 什麼是 SGAN？

7.1.2 SGAN 的輸入、輸出、與目標

7.1.3 SGAN 的訓練過程

7.1.4 SGAN 的訓練目標

7.2 實例：實作 SGAN

7.2.1 SGAN 的架構圖

7.2.2 行前說明

7.2.3 程式初始設置

7.2.4 準備資料集

7.2.5 設計生成器 

7.2.6 設計鑑別器

7.2.7 建立並編譯模型

7.2.8 開始訓練

7.3 與全監督式分類器比較

7.4 結語

第 8 章 條件式 GAN (CGAN)

8.1 CGAN 的發展動機

8.2 CGAN 的原理與架構

8.2.1 CGAN 的生成器

8.2.2 CGAN 的鑑別器

8.2.3 總結表

8.2.4 架構圖

8.3 實例：實作 CGAN

8.3.1 行前說明

8.3.2 初始設置

8.3.3 設計生成器

8.3.4 設計鑑別器

8.3.5 建立並編譯模型

8.3.6 設計訓練迴圈

8.3.7 顯示樣本影像

8.3.8 實際開始訓練模型

8.3.9 檢視輸出結果：是否生成指定種類的資料

8.4 結語

第 9 章 CycleGAN

9.1 圖像轉譯

9.2 來回一致損失 (Cycle-consistency loss)：先轉過去再轉回來

9.3 對抗損失 (Adversarial loss)

9.4 特質損失 (Identity loss)

9.5 CycleGAN 的架構

9.5.1 整體架構：CycleGAN 的 4 個神經網路

9.5.2 生成器的架構

9.5.3 鑑別器的架構

9.6 GAN 的物件導向設計

9.7 實例：實作 CycleGAN

9.7.1 建立 CycleGAN 的 4 個神經網路

9.7.2 建立生成器的 method

9.7.3 建立鑑別器的 method

9.7.4 訓練模型的 method

9.7.5 實際開始訓練

9.8 CycleGAN 的強化和應用

9.8.1 CycleGAN 加強版 (Augmented CycleGAN)

9.8.2 CycleGAN 的各種應用

第三篇 GAN 的實際應用及未來方向

第 10 章 對抗性樣本 (Adversarial example)

10.1 對抗性樣本的用途

10.2 深度學習的潛在弱點：容易被騙

10.3 訓練方法的善用與濫用

10.4 樣本中的訊號與雜訊

10.5 還不到絕望的時候

10.6 解鈴還須繫鈴人，該 GAN 出馬了

10.7 結語 

第 11 章 GAN 的實際應用

11.1 GAN 在醫學方面的應用

11.1.1 用 GAN 提高診斷準確率

11.1.2 擴增訓練樣本的方法

11.1.3 應用的成果

11.2 GAN 在時尚方面的應用

11.2.1 用 GAN「設計」時尚

11.2.2 把 CGAN 用到時尚領域

11.2.3 創造符合個人偏好的新商品

11.2.4 針對個人偏好改良現有商品

11.3 結語

第 12 章 展望未來

12.1 GAN 的道德考量

12.2 GAN 的最新改良

12.2.1 RGAN (相對 GAN)

12.2.2 SAGAN (自我注意 GAN)

12.2.3 BigGAN

12.3 更多潛力 GAN 的參考資料 

12.4 本書的回顧與結語",https://cf-assets2.tenlong.com.tw/products/images/000/151/612/medium/9789863126386_bc.jpg?1598329036
"Data Science from Scratch｜用 Python 學資料科學, 2/e (中文版)(Data Science from Scratch: First Principles with Python, 2/e)","Joel Grus
          藍子軒 譯",歐萊禮,9789865023195,2019/11/25,"從事資料科學方面的工作時，活用各種相關函式庫、軟體框架、模組、工具包是很好的做法，但如果原本完全不懂資料科學，從頭開始也是一種不錯的做法。本書將採取土法煉鋼從頭學起的方式，帶領讀者認識與資料科學相關的許多工具與演算法。



你只要具備基本的數學能力，以及程式設計的基礎，本書就可以幫你在遇到相關的數學與統計知識時，不至於感到害怕，而且還能讓你學會一個資料科學家所需具備的相關駭客技術。如今到處充斥著各種雜亂的數據資料，其中包含許多問題的解答，但也有很多微妙之處，甚至連問題本身都還沒被提出來過。如果你真心想要挖掘問題的解答，本書將可以提供你一些相關的知識。

．首先來一堂Python速成班

．學習線性代數、統計、機率的基礎知識——並學會何時、如何在資料科學領域中靈活運用這些知識

．搜集、探索、清理、轉換、處理各種數據資料

．深入理解機器學習的基礎

．靈活運用像是k最近鄰、單純貝氏、線性與邏輯迴歸、決策樹、神經網路、集群等種種模型

．探討推薦系統、自然語言處理、網路分析、MapReduce與資料庫的相關知識

 




名人推薦



「Joel帶領我們領略探索資料科學，讓我們從一般的好奇心，進入到更深入的理解，並學會所有資料科學家都應該知道的各種實用演算法。」

—— Rohit Sivaprasad, Soylent公司資料科學家



「對於想要了解機器學習的工程師而言，這是一本奠定基礎的最佳入門書。」

-- Tom Marthaler, Amazon專案經理



「要將資料科學的概念轉換為程式碼並不容易，這本書讓它變簡單了。」

-- William Cox, Grubhub機器學習工程師



    

    作者簡介
    
      Joel Grus

是Allen人工智慧研究所的研究工程師。之前曾在Google擔任軟體工程師，並在多家新創公司擔任資料科學家。目前他住在西雅圖，愉快地從事著資料科學方面的工作。

個人部落格：joelgrus.com

推特：@joelgrus

    

    目錄大綱
    
      第1章 簡介

第2章 Python速成班

第3章 資料視覺化

第4章 線性代數

第5章 統計學

第6章 機率

第7章 假設與推論

第8章 梯度遞減

第9章 取得資料

第10章 處理資料

第11章 機器學習

第12章 k最近鄰

第13章 單純貝氏

第14章 簡單線性迴歸

第15章 多元迴歸

第16章 邏輯迴歸

第17章 決策樹

第18章 神經網路

第19章 深度學習

第20章 集群

第21章 自然語言處理

第22章 網路分析

第23章 推薦系統

第24章 資料庫與SQL

第25章 MapReduce

第26章 資料道德規範

第27章 勇往直前，資料科學做就對了",https://cf-assets2.tenlong.com.tw/products/images/000/142/656/medium/9789865023195.jpg?1579673270
"Python 自動化的樂趣｜搞定重複瑣碎&單調無聊的工作, 2/e (Automate the Boring Stuff with Python : Practical Programming for Total Beginners, 2/e)","Al Sweigart 著
          H&C 譯",碁峰資訊,9789865025977,2020/8/28,"“您需要使用Python自動完成無聊的工作嗎？是的，如果您想使用自動化來增強工作流程效率，這是一個很好的起點。強烈推薦！”

—Network World



“學習Python最好的書之一。”

—Giles McMullen-Klein, FlickThrough Reviews



如果您曾經花費數小時處理檔案的重新命名，或更新數百個試算表內的儲存格資料，就能體會這類日常的工作有多麼單調無趣了。但假如能利用電腦自動幫您完成呢？



您不需要有什麼程式設計的經驗，在這本經過完整修訂的經典暢銷書第二版中，能學到運用Python寫出程式，幫您在幾分鐘內搞定人工手動處理需要花費數小時的工作。您將學到Python的基礎知識，並探索Python豐富的模組程式庫來完成某些特定工作，例如從網站上抓取資料、讀取PDF和Word文件，以及自動化執行滑鼠點按和鍵盤輸入的工作。



本書受到全世界許多讀者的支持，第二版增訂了關於輸入驗證的全新章節，以及有關自動化處理Gmail和Google試算表的內容，另外還有關於自動更新CSV檔的技巧提示。讀者將學到如何能輕鬆地使用Python編寫程式，把自動化的好用和效率應用在下列這些工作上：



‧在一個或多個檔案中搜尋文字

‧建立、更新、搬移和重新命名檔案和資料夾

‧搜尋網頁和下載網路上的圖文內容

‧處理PDF檔的分割與合併，加入浮水印和加上密碼等作業

‧傳送Email和簡訊

‧填寫線上表單



本書會一步一步地教您完成每支程式，並在每章後面新增的實作專題中啟發及引導您改進這些程式的應用，讓您發揮學到的技巧讓類似的工作能自動化完成。如此就不用再浪費時間去做人工手動的作業，您寫出的Python自動化程式能搞定這些繁瑣的工作。本書是為初學者所設計的，就算您從沒寫過一行程式，跟著書中的講解就能學到這些應用和操作，學會如何享受Python自動化的樂趣，搞定重複瑣碎與單調無聊的工作。

<序>

「您在二小時內完成的事，我們三個人花了兩天才搞定呀。」在2000 年左右，我的大學室友在一家電器零售店工作，有時店裡會從競爭店家那收到一份有幾千件商品價格目錄的試算表檔案，由三位員工所組成的小組要印出這份試算表，一一拿來比對他們店裡的商品價格，並記錄下價格比競爭店家賣得貴的所有商品，通常這項工作得花上好幾天的時間。

「各位，您們知道嗎？如果有印出試算表的原始檔案，我可以寫一支程式來幫您們完成這項工作。」我的室友告訴他們，當時他看到這幾個人蹲在地上忙著查價格，周圍還散落一堆印出的表單紙張。

幾個小時後，他編寫了一支簡短的程式，從檔案中讀取競爭店家的價格資料，在自己店裡的資料庫中搜尋相同的商品來比對，並記錄下是否比競爭對手的價格高。他當時還是個程式設計新手，花了一些時間在一本程式設計書中查看說明文件，邊學邊寫出這支程式。最後程式實際上只花了幾秒鐘就跑完了，我的室友和他的同事們在那天享受了超長的午休時間。

這就是電腦程式設計的威力，電腦就像把瑞士刀，能幫您完成無數的工作。許多人花了數小時來點按滑鼠和鍵盤輸入來執行著重複的工作，但卻沒有體認到，只要對機器下達正確的指令，就能在幾秒鐘完成這些工作。

 



    

    作者簡介
    
      Al Sweigart 是位專業的軟體開發專家，也是技術書的作者，還教過小朋友和成人的程式設計相關課程。他為初學者編寫了幾本Python書籍，包括：《Python駭客密碼｜加密、解密與破解實例應用》；《Python好好玩｜趣學電玩遊戲程式設計》等。(都在GOTOP出版)

    

    目錄大綱
    
      簡介



PART 1 Python 程式設計基礎

chapter 01 Python 基礎

chapter 02 流程控制

chapter 03 函式

chapter 04 串列

chapter 05 字典與結構化資料

chapter 06 字串的操作



PART 2 自動化專題實作

chapter 07 使用正規表示式進行模式比對

chapter 08 讀寫檔案

chapter 09 檔案的組織管理

chapter 10 除錯（Debugging）

chapter 11 從 Web 擷取資訊

chapter 12 處理 Excel 試算表

chapter 13 處理 PDF 與 Word 文件

chapter 14 處理 CSV 檔和 JSON 資料

chapter 15 保持時間、工作排程和程式啟動

chapter 16 發送 Email 和文字簡訊

chapter 17 處理影像圖片

chapter 18 以 GUI 自動化來控制鍵盤和滑鼠



appendix A 安裝第三方模組

appendix B 執行程式

appendix C 習題解答",https://cf-assets2.tenlong.com.tw/products/images/000/151/605/medium/ACL058100.jpg?1597741469
從 Hooks 開始，讓你的網頁 React 起來（iT邦幫忙鐵人賽系列書）,陳柏融　著,博碩文化,9789864345083,2020/9/14,"內容簡介



本書內容改編自第 11 屆 iT 邦幫忙鐵人賽，Modern Web 組優選網路系列文章──《從 Hooks 開始，讓你的網頁 React 起來》。



☛ 第一本整合線下內容與線上社群的 React 實體書，再也不怕沒人解惑 (https://www.facebook.com/groups/274607427104369/)

☛ 從 Hooks 開始上手 React，大幅降低陡峭的 React 學習曲線

☛ 透過專案實作到最終發布上線，讓所有人都可以看到你的作品



Q：買書後碰到問題卻沒人問怎麼辦？

A：第一本同時整合線下文字與線上社群的 React 實體書籍，不只是一本書，更提供專業線上討論與協助，免除讀者在學習新技術上的焦慮與不安！



Q：沒學過 React 可以直接從 Hooks 開始嗎？

A：從 Hooks 開始入手 React，可大幅降低過去 React 陡峭的學習曲線！



Q：學過 React 語法卻不知如何實作成專案作品？

A：以專案實作帶你一步步熟悉 React 各種語法，並將作品發布至雲端，讓所有人都能共享使用！





專業推薦



如果你希望透過學習 React 這個目前業界非常流行的框架，來提升職涯發展潛力，那這本書再適合你不過！本書是 PJ 為你設計的一趟學習旅程。除了耐心指引你步驟之外，更會告訴你各種「為什麼」，讓你對 React 背後的邏輯與思維有充分瞭解。更重要的是，你將體會到，「學習」，其實可以很不一樣。

Bernard Chan | 陳治平

前 Yahoo! 亞太區產品總監、ALPHA Camp 校長



本書不是一本工具書，而是作者在腦中思考的過程，是一本教你思考的書，以邏輯思考的走向代替一般指令式的教學，這樣的內容才是正確的教學方式，學習到的並不只是技術，而是在實務過程中所累積下來的經驗。

Howard | 吳展瑋

台南「好想工作室」創辦人、台灣口罩地圖、動森揪團工具開發者





適用讀者



✎ 學過 JavaScript，想要開始上手前端框架的初學者

✎ 想要成為前端工程師的網頁開發求職者

✎ 用過 Vue 等其他前端框架，想要體驗 React 框架的開發者





本書的誕生主要源自於 iT 邦幫忙鐵人賽，筆者在學習的過程中受益非常多，因此決定將本書首刷版稅回饋iT邦幫忙鐵人賽，鼓勵台灣IT社群互助合作且彼此樂於分享的精神。



    

    作者簡介
    
      陳柏融 (pjchender)



現任 Jubo 智齡科技軟體工程師，曾於 UXTesting, Inc. 擔任前端工程師，同時擔任 ALPHA Camp 講師與學生導師，熟悉 React、Vue 前端框架以及 Chrome Extension 開發。

對資訊科技充滿熱情， 喜歡學習Know-How，致力於透過資訊科技，帶給人們更幸福與便利的生活。同時經營 FB「PJCHENder 網頁前端資源站」粉絲專頁，透過內容的撰寫與知識分享，減少初學者在學習新技術上的焦慮與不安。

    

    目錄大綱
    
      01 React 中一定會用到的JavaScript 語法

1-1 統一開發環境- 註冊 CodePen 帳號

1-2 JavaScript 語法小測試與免費學習資源

1-3 樣板字面值（Template literals ／ Template strings）

1-4 箭頭函式（arrow functions）

1-5 解構賦值和物件屬性名稱縮寫

1-6 展開語法和其餘語法

1-7 模組的匯出與匯入

1-8 這些語法全都要會才能往下看嗎



02 React Hooks 起來：useState 與JSX 的使用

2-1 在沒有 React 以前…，用原生 JavaScript 做一個簡單的計數器

2-2 把 HTML 寫在 JavaScript 中！？— JSX 的概念

2-3 在 JSX 中帶入變數與表達式

2-4 將計數器改用 JSX 來寫

2-5 在 JSX 中套用 CSS 樣式

2-6 建立第一個 React 元件

2-7 與使用者互動 - React 中的事件處理

2-8 React 元件中的資料- useState 的使用

2-9 條件轉譯的使用

2-10 動態新增 CSS 樣式來隱藏 HTML 元素

2-11 事件處理器的重構

2-12 JSX 中迴圈的使用

2-13 JSX 元素只能有一個最外層元素

2-14 React Hooks 不可這麼用



03 React 元件間的資料傳遞：props 的應用

3-1 網速傻傻分不清楚 Mbps? MB/s? 來寫個單位換算器吧

3-2 使用 Create React App 工具建立專案

3-3 建立網速單位轉換器的 UI

3-4 React 中表單的基本應用

3-5 React 元件的拆分

3-6 React 元件間的資料傳遞

3-7 子層元件如何修改父層元件的資料狀態

3-8 使用 React FontAwesome



04 在 JavaScript 中撰寫 CSS 樣式

4-1 「台灣好天氣」 App 專案說明

4-2 認識專案資料夾結構與檔案下載

4-3 用 JavaScript 寫 CSS!? CSS in JS 的使用

4-4 使用 emotion 完成「台灣好天氣」 UI

4-5 為深色主題做準備 - 將 props 傳入 styled components 中

4-6 使用 emotion 實作深色主題

4-7 快速了解各元件的資料狀態 - React Developer Tools



05 串接 API：useEffect 與 useCallback

5-1 申請使用中央氣象局 API

5-2 將天氣資料呈現於畫面中 - useState 的使用

5-3 使用 fetch 拉取天氣觀測資料

5-4 頁面載入時就去請求資料 - useEffect 的基本使用

5-5 實作資料載入中的狀態

5-6 搭配 useEffect 拉取多支 API 回傳的資料

5-7 讓拉取 API 的函式與元件脫鉤

5-8 了解定義函式的適當位置以及 useCallback 的使用



06 進階資料處理與客製化 React Hooks

6-1 將天氣代碼轉換為天氣圖示

6-2 根據天氣代碼顯示天氣圖示 - useMemo 的使用

6-3 根據白天或夜晚顯示不同的主題配色

6-4 專案程式碼重構

6-5 建立自己的鉤子 - Custom Hooks



07 表單處理與頁面間的切換

7-1 處理不同支 API 需帶入不同地區名稱的問題

7-2 新增地區設定頁面

7-3 實作頁面間的切換功能

7-4 React 中的表單處理（Controlled vs Uncontrolled）

7-5 Uncontrolled components 和useRef 的使用

7-6 讓使用者可以自行設定地區

7-7 透過localStorage 保存使用者設定的地區



08 網站部署與未來學習方向

8-1 將「台灣好天氣」部署到 Github Pages

8-2 將網頁變成手機 Web App

8-3 那些相當重要但故意先不告訴你的地方",https://cf-assets2.tenlong.com.tw/products/images/000/152/373/medium/MP22021.jpg?1599472731
網站可靠性工程工作手冊｜導入SRE的實用方法 (The Site Reliability Workbook),"Betsy Beyer 等著
          江少傑 譯",歐萊禮,9789865026011,2020/9/29,"《網站可靠性工程》曾在業界引爆一陣探討現代生產服務運行的意義，以及為何可靠性考量是服務設計的基礎的熱潮。現在，這本熱銷書的原班人馬，再度推出了一本實戰手冊。以具體的案例，說明如何將SRE的原則與操練，應用在實際的工作環境。



本書不只結合了Google的實用經驗，也涵蓋了Google雲端平台（GCP）客戶的個案研究，包括Evernote、家得寶（Home Depot）、紐約時報等公司在實務上的成敗經驗。



無論您的公司規模大小，研讀本書都能讓您的SRE實踐更加得心應手。



透過本書，您可以了解：

．如何在你無法完全掌控的環境（如雲端）運維可靠服務

．如何以服務水準目標(SLO)建立、監控並運維服務的實務

．如何把現有的運維團隊轉變成SRE團隊，同時擺脫運維過載夢魘

．從零開始或半路出家的SRE實踐方法

 




名人推薦



「本書都是實際的案例，告訴你如何專注在使用者與工程師間，以及技術與工具間的互動，來優化可靠性，又不拖累開發步調。內容引人入勝、饒富趣味、看過《網站可靠性工程》，也不能錯過這一本」，Casey Rosenthal, Backplane技術長



「這本書補上了《網站可靠性工程》欠缺的部分。前一本書說明他們做了什麼，但你未必能夠套用這些案例的解法。本書不只示範了他們怎麼做，並為你設身處地，量身打造屬於你的做法。」，David N. Blank-Edelman,全球SRE大會的共同發起人



「這本實用又切中實務的指南，引導實行SRE，讓大大小小公司的工程師們，都能獲益匪淺。他們分享的細節鉅細靡遺，令我印象深刻，有這樣一本實務經驗分享的書，真是太好了。你可以運用這本書，馬上躬行實踐SRE，打造更可靠的系統。」，Tammy Bütow, Gremlin首席可靠性工程師



「讓SRE演變成大規模運維之必要實踐的幕後推手Google SRE團隊，及時地提醒我們：可靠性是人創造的。本書有許多實用的案例，說明如何專注於使用者與工程師的互動，以及技術與工具間的相輔相成，從而以可靠性為基礎優化系統，同時又不用犧牲功能開發的速度。結果就是這本很有說服力、引人入勝又啟迪人心的SRE指南。」，—Casey Rosenthal, Bckplane.io技術長



「Google第一本SRE之書解釋了SRE是什麼，以及為什麼要SRE。這本書則是說明如何實行SRE，這是Google編輯團隊的又一鉅作。」，—Jonah Horowitz, Stripe網站可靠性工程師



「《網站可靠性工程》描述Google做了什麼，本書則是告訴讀者，Google如何實行SRE，以及您也可以如何依樣畫葫蘆。」，David N. Blank-Edelman, 全球SREcon大會共同創辦人



    

    作者簡介
    
      Betsy Beyer, Niall Richard Murphy, Dave Rensin, Kent Kawahara & Stephen Thorne 等人，都是 Google SRE 團隊的現任與過往成員，負責管理與維護 Google 的正式系統環境

    

    目錄大綱
    
      前言一

前言二

序言

譯序



第一章 SRE 與 DevOps 如何琴瑟和鳴



【第一篇 基礎】

第二章 實施 SLO

第三章 SLO 工程案例研究

第四章 監控

第五章 就 SLO 告警

第六章 消滅苦工

第七章 簡單性



【第二篇 實踐】

第八章 on-call

第九章 事故回應

第十章 事後檢討文化：從失敗中學習

第十一章 管理負載

第十二章 非抽象大型系統設計簡介

第十三章 資料處理流水線

第十四章 組態設定的設計與最佳實踐

第十五章 組態設定的細節

第十六章 金絲雀發布



【第三篇 流程】

第十七章 識別過載並從其中復原

第十八章 SRE 積極參與模型

第十九章 SRE：跨越疆界

第二十章 SRE 團隊之生命週期

第二十一章 SRE 組織變革管理



結論

附錄A SLO 文件範本

附錄B 範例犯錯預算政策

附錄C 事後檢討分析結果

索引",https://cf-assets2.tenlong.com.tw/products/images/000/152/599/medium/9789865026011.jpg?1600742120
機器學習的數學基礎 : AI、深度學習打底必讀,"醫學統計學專家 西內啟 著
          胡豐榮博士, 徐先正 合譯",旗標科技,9789863126140,2020/1/31,"〇清華大學榮譽教授 李家同博士 推薦：『數學是 AI 的根本, 你可以跟著本書扎實理解機器學習最根本的數學基礎。』

〇國立台中教育大學數學教育學系 胡豐榮博士 與 清華大學數學系畢 徐先正 合譯

『進入 AI 時代，數學突然紅起來！』

現在資訊科學界最夯的主題就是 AI、機器學習、深度學習。Google、Apple、Amazon、台積電……等世界大廠都在爭搶 AI 大餅，比的是誰家的 AI 比較聰明、比較準確，因此發展出許多先進的技術，甚至把 AI 直接植入晶片中。每家好像都很厲害，然而高下區別的關鍵在哪裏？

大家使用的開發工具不外乎 TensorFlow、Keras、Numpy，你會用，別人也會，那你憑甚麼贏人家？當然要靠獨創的技術、神秘的參數配方，而這些都是開發工具給不了的。如果只靠土法煉鋼，不斷「Try Try 看」各種參數組合，這實在太不科學，根本無法提升能力。所以必須徹頭徹尾弄懂 AI 技術裏面在做甚麼？才知道應該用什麼參數去試、用甚麼演算法去算……，想做出比別人更好的 AI，就必須自我蛻變，這一切的打底功夫就是「數學」。



『AI、機器學習、深度學習需要的數學，你懂了嗎？』

數學領域的學科龐雜，國中、高中學完之後也不知道幹嘛，或是不求甚解，久而久之就還給老師了。然而在 21 世紀進入機器學習、深度學習領域，完全避不開下面這些東西，你懂了嗎？：

「邏輯斯迴歸／線性迴歸／合成函數／鏈鎖法則／條件機率／貝氏定理／ 最小平方法／最大概似估計法／常態分佈／機率密度函數／向量內積／相關係數／ 誤差函數／代換積分／多元迴歸分析／神經網路／多變數偏微分／矩陣偏微分／ 梯度下降法／隨機梯度下降法／非線性邏輯斯函數／Sigmoid／反向傳播／more…」

媽呀！誰來教教我？

小編看過市面上數本主打機器學習或深度學習的數學書，主要分兩類：其一是內容太過簡單講得不夠深入，其二是假設你的數學能力已經很強，直接跳過許多細節，這兩類讀了還是不知所云。沒關係，本書就是為你設計的，帶你從基礎開始複習，搭配實務案例，讓你知道數學可以怎麼用。而且最重要的是「只教機器學習、深度學習用得到的數學，講清楚、才能吸收」，其它用不到的不講，節省大家的寶貴時間。

本書設計的巧妙之處在於前面講過的內容，到了進階的部份仍然會不斷前後呼應，不斷提醒。書中的運算步驟，像是梯度下降法、隨機梯度下降法、反向傳播... 都一一手算推導給你看。認真讀完本書，機器學習與深度學習的數學就能深印腦海。 

本書特色 : 

  〇只講機器學習、深度學習用得到的數學，追根究底且看得懂

〇梯度下降法、隨機梯度下降法、反向傳播... 一步一步手工算給你看

〇利用實務範例，更能了解數學可以用在哪裏



    

    作者簡介
    
      [作者]

西內啟

東京大學醫學院畢業，專長為生物統計學。曾經擔任東京大學醫學系醫療溝通學科助理教授，大學醫療資訊網路研究中心副所長，Dana-Farber/Harvard 癌症研究中心的客座研究員。他於 2014 年創立 Data Vehicle 公司，開發商業應用的資料分析工具與資料研究的服務。

[譯者一]

胡豐榮博士

日本大阪大學數學碩士、博士

彰化師範大學科學教育研究所碩士

現任國立台中教育大學數學教育系專任教授兼總務長

傑出事蹟：榮獲科技部100-103年度特殊優秀人才獎勵、榮獲2014年智慧律建築設計創意競賽決賽入選、榮獲國立台中教育大學104與108年度研究優良獎勵

研究專長：機率論、線性控制、財務數學、數理統計、測驗統計、研究倫理

[譯者二]

徐先正

中國文化大學日本研究所碩士

清華大學數學系應數組

國票證券投顧專業經理

曾任元富期貨 期貨分析師／新壽證券 期貨研究員／精實財經媒體 日文財經編譯／

台灣工銀證券 專業副理

    

    目錄大綱
    
      目錄 : 

  序篇 AI、機器學習需要什麼樣的數學能力

單元01 21世紀每個人都需要具備數學能力

單元02 數學金字塔

第 1 篇 機器學習的數學基礎

單元03 將事物用數字來表現

單元04 將數字用字母符號代替

單元05 減法是負數的加法, 除法是倒數的乘法

單元06 機率先修班：集合

單元07 機率先修班：命題的邏輯推理

單元08 機率、條件機率與貝氏定理

第 2 篇 機器學習需要的一次函數與二次函數

單元09 座標圖與函數

單元10 聯立方程式求解與找出直線的斜率與截距

單元11 用聯立不等式做線性規劃

單元12 從線性函數進入二次函數

單元13 利用二次函數標準式求出最大值與最小值

單元14 找出二次函數最適當的解

單元15 用最小平方法找出誤差最小的直線

第 3 篇 機械學習需要的二項式定理、對數、三角函數

單元16 二項式定理與二項式係數

單元17 利用二項分布計算重複事件發生的機率

單元18 指數運算規則與指數函數圖形

單元19 用對數的觀念處理大數字

單元20 對數的性質與運算規則

單元21 尤拉數 e 與邏輯斯迴歸

單元22 畢氏定理計算兩點距離

單元23 三角函數的基本觀念

單元24 三角函數的弧度制與單位圓

第 4 篇 機械學習需要的Σ、向量、矩陣

單元25 整合大量數據的 Σ 運算規則

單元26 向量基本運算規則

單元27 向量的內積

單元28 向量內積在計算相關係數的應用

單元29 向量、矩陣與多元線性迴歸

單元30 矩陣的運算規則

單元31 轉置矩陣求解迴歸係數

第 5 篇 機器學習需要的微分與積分

單元32 函數微分找出極大值或極小值的位置

單元33 n 次函數的微分

單元34 積分基礎－從幾何學角度瞭解連續型機率密度函數

單元35 積分基礎－用積分計算機率密度函數

單元36 合成函數微分、鏈鎖法則與代換積分

單元37 指數函數、對數函數的微分積分

單元38 概似函數與最大概似估計法

單元39 常態分佈的機率密度函數

單元40 多變數積分 – 雙重積分算機率密度函數係數

第 6 篇 深度學習需要的數學能力

單元41 多變數的偏微分－對誤差平方和的參數做偏微分

單元42 矩陣型式的偏微分運算

單元43 多元迴歸分析的最大概似估計法與梯度下降

單元44 由線性迴歸瞭解深度學習的多層關係

單元45 多變數邏輯斯迴歸與梯度下降法

單元46 神經網路的基礎－用非線性邏輯斯函數組合出近似函數

單元47 神經網路的數學表示法

單元48 反向傳播－利用隨機梯度下降法與偏微分鏈鎖法則",https://cf-assets2.tenlong.com.tw/products/images/000/144/245/medium/9789863126140_bc.jpg?1578368531
圖解AI｜機器學習和深度學習的技術與原理,"株式会社アイデミー, 山口達輝, 松田洋之
          衛宮紘 譯",碁峰資訊,9789865025885,2020/10/16,"收錄豐富的圖示與詳盡的解說，即便完全零知識也能夠輕鬆學習。

機器學習與深度學習的原理與技術，單靠這一本 就能深入瞭解的教科書



「人工智慧」、「機器學習」、「深度學習」這些以前在科幻小說中才會見到的字眼，如今已經深入我們的日常，成為大家平日琅琅上口的名詞。可是，真的想要深入一點了解這些名詞，一翻開相關書籍，看到滿滿的數學公式頭就暈了，難道沒有人能夠用大家都聽得懂的方式解釋這些科技名詞嗎？



本書就是因應您心中的吶喊而生的一本書。這本書不會給你滿滿的數學式，而是藉由生活化的舉例、圖解進行說明，盡可能地表達人工智慧的正確知識。期望各位能夠透過本書，觸及機器學習的趣味與可能性，進而踏入機器學習的世界中。



藉由本書，您將可以：

．了解人工智慧、機器學習、深度學習三者之間的關係

．機器學習的程序與核心技術

．了解機器學習應用了哪些演算法

．深度學習的程序與核心技術

．了解深度學習應用了哪些演算法

 

<序>

近年，出現愈來愈多不需要機器學習資料庫、程式設計的機器學習服務，即便不是這方面的專家，只要準備好資料利用這類服務，就能夠獲得相應的結果。然而，明明不清楚機器學習演算法是如何運行，卻毫無根據地相信跑出的結果，將其用於重要的商業場景上，不得不說是相當危險的情況。一般的IT工程學會兼顧初學者與熟練者，網羅各種網路文章、專業書籍的解說。然而，在機器學習的習得上，網路文章通常給人偏重「容易閱讀」的印象，但有許多文章省略了必要的說明，難以讓人扎實地理解機器學習。而專業書籍的解說，又使用了大量的數學公式，這對以成為AI工程師為目標的人來說，進入的門檻相當高。



本書採取折衷的做法，不是堆砌數學式進行艱難的解說，而是藉由示例、插圖用簡單易懂的方式講解，盡可能正確表達AI工程師必須理解的知識。期望各位能夠透過本書，觸及機器學習的趣味與可能性，進而踏入機器學習的世界當中。



    

    作者簡介
    
      山口 達輝

Aidemy股份有限公司的工程師。在Aidemy Premium Plan中，指導學員基本的機器學習程式設計、機器學習的實作。大學專攻運輸的自動駕駛技術，但在其他學科課程上，偶然從講師的題外話感受到機器學習的可能性，遂轉而成為AI工程師。

現在的興趣是人工智慧與腦科學的科技整合。「何謂人心？」這從國中時期就抱有的疑問再次點燃於胸中，開始大量閱讀認知科學的論文。



松田 洋之

Aidemy股份有限公司的工程師，在Aidemy Premium Plan中，協助回答學員的問題、諮詢討論、Aidemy的教材修正。原為文科出身，因高中時期對三角函數的加法定理感到挫折，大學起初選擇文學系（經濟學），但途中轉而攻讀工學系，成為機器學習工程師。興趣是經濟學與資訊科學的融合領域，前者是討論財產分配的最佳化，後者是討論運算資源的最佳化，由這點認為兩者的差異並不大。另外，因感覺機器學習幾乎不會用不到積分，而確信即便是文科出身，只要正確學習也能夠開拓通往機器學習工程師的道路。

 

    

    目錄大綱
    
      第1章｜人工智慧的基礎知識

01 何謂人工智慧？

02 何謂機器學習（ML）？

03 何謂深度學習（DL）？

04 人工智慧與機器學習的普及過程

第2章｜機器學習的基礎知識

05 監督式學習的機制

06 非監督式學習的機制

07 增強學習的機制

08 統計與機器學習的差異

09 機器學習與特徵量

10 擅長與不擅長的領域

11 機器學習的運用範例

第3章｜機器學習的程序與核心技術

12 機器學習的基本工作程序

13 蒐集資料

14 資料變形

15 模型的作成與學習

16 批次學習與線上學習

17 使用測試資料驗證預測結果

18 學習結果的評估基準

19 超參數與模型的調整

20 主動學習

21 相關與因果

22 反饋迴圈

第4章｜機器學習的演算法

23 迴歸分析

24 支援向量機

25 決策樹

26 整體學習

27 整體學習的運用

28 邏輯迴歸

29 貝葉斯模型

30 時序分析與狀態空間模型

31 K 近鄰法（K-NN）與 K 平均法（K-Means）

32 維度縮減與主成分分析

33 最佳化與遺傳演算法

第5章｜深度學習的基礎知識

34 類神經網路與其歷史

35 深度學習與圖像辨識

36 深度學習與自然語言處理

第6章｜深度學習的程序與核心技術

37 誤差反向傳播法的類神經網路學習

38 類神經網路的最佳化

39 梯度消失問題

40 遷移學習

第7章｜深度學習的演算法

41 卷積類神經網路（CNN）

42 遞歸類神經網路（RNN）

43 增強學習與深度學習

44 自動編碼器

45 GAN（生成對抗網路）

46 物體偵測

第8章｜系統開發與開發環境

47 編寫人工智慧的主要程式語言

48 機器學習用資料庫與框架

49 深度學習的框架

50 GPU程式設計與高速化

51 機器學習服務",https://cf-assets2.tenlong.com.tw/products/images/000/153/418/medium/ACD020500.jpg?1601974636
"基礎資料結構 ─ 使用 C (Fundamentals of Data Structures in C, 2/e)",Ellis Horowitz、Sartaj Sahni、Susan Anderson-Freed 著、蔡錫鈞、戴顯權 譯,開發,9789868359710,2008/8/29,,https://cf-assets1.tenlong.com.tw/images/46411/medium/9789868359710.jpg
大話 AWS 雲端架構：雲端應用架構圖解輕鬆學,李秉鴻、周廷諺、何松穎、李建德,博碩文化,9789864345137,2020/10/8,"掌握AWS雲端運算服務全架構‧搭上台灣重點發展的雲端產業列車！

AI需求火爆的背後，是對於強大運算能力的渴求，以共享機房為基礎的雲端服務完美解決了AI的剛性需求。雲端服務付費模式的變化，讓傳統系統整合商的收費模式從買斷制演進到訂閱制，創造了新型商業模式－雲端代理商，造就了大量雲端人才缺口。

有鑑於此，我們為想學習雲端架構的讀者，以平常生活輕鬆常見的對話形式，綜覽多種在AWS使用的架構。期勉讀者研讀後，能夠為公司提出雲端代理商的轉型商業模式，並能依照公司客戶的需求提供多種雲端解決方案。

本書適合尚未導入雲端服務的企業、系統架構師、開發/運維工程師，以及剛入門雲端的新手。若你公司正準備導入雲端，但又不知道該如何提案或者是以何種架構進行導入，則本書將會對你有很大的幫助。

★本書特色★

✪沉浸式的故事情境搭配應用場景，快速瞭解雲端架構應用

✪圖解方式說明雲端架構，並由淺至深進行架構演進

✪書附AWS雲端認證小幫手，協助考取AWS雲端認證

✪以簡單生活化的案例對應複雜的雲端技術名詞





雲育鏈官網　　　　雲育鏈LINE@



    

    作者簡介
    
      李秉鴻、周廷諺、李建德、何松穎

雲育鏈資深講師群，超過十年的雲端服務使用經驗，集資訊業多元職業角色，架構師、開發工程師、DevOps管理員、資深系統運維管理員，並在中央大學、資策會、Tibame緯育、工研院、AI全智網等多處擔任講師，並協助多家企業開發新型態的多種雲端與區塊鏈資訊系統。

現為雲育鏈雲端服務考證課講師、區塊鏈服務技術講師。學生人數遍佈AWS、GCP、Azure原廠、各大雲端代理商、金控、銀行等雲端技術部門。

在雲端教育領域之卓越成就，使勞動部勞動力發展署邀請執行長李秉鴻、台灣大學資工系教授與AWS原廠等專業人員進行針對「雲端系統軟體與維運工程人員」勞動力市場供需及訓練計畫規劃討論。

    

    目錄大綱
    
      推薦序

前言

人物關係圖

人物角色介紹



第一單元　經典雲應用架構

01 經典雲應用架構總覽

1.1 本地怎麼做，雲端就怎麼做

1.2 人類世界與資訊世界是相似的，經典生活化商業案例

1.3 本地經典應用架構

1.4 AWS經典應用架構

1.5 雲育鏈的雲服務考題練習機器人



02 IAM

2.1 AWS的root帳號

2.2 root權限太大，必須實踐多用戶權限管理

2.3 IAM服務的設計思維與核心名詞

2.4 Policy的組成要件

2.5 Policy的組織流程

2.6 常見的應用情境

2.7 考題解析與思路延伸

2.8 IAM帳號管理歸納圖

2.9 本章相關名詞

2.10 本章小結



03 VPC

3.1 一棟公寓大廈的核心組成

3.2 經典網路環境組成

3.3 Virtual Private Cloud -AWS的網路環境組成

3.4 VPC的四大類服務對接方式

3.5 考題解析與思路延伸

3.6 VPC整體架構圖

3.7 本章相關名詞

3.8 本章小結



04 EC2

4.1 添購伺服器的流程

4.2 AWS的EC2虛擬主機服務

4.3 在專案使用EC2時的應用考量

4.4 考題解析與思路延伸

4.5 EC2整體架構圖

4.6 本章相關名詞

4.7 本章小結



05 S3

5.1 公司以往的資料共享方式

5.2 S3的核心要件

5.3 考題解析與思路延伸

5.4 S3整體架構圖

5.5 本章相關名詞

5.6 本章小結



06 RDS

6.1 客戶想要一個關聯式資料庫

6.2 自建資料庫與選用RDS服務的差異

6.3 RDS的高可用、備援與效能調校

6.4 考題解析與思路延伸

6.5 RDS整體架構圖

6.6 本章相關名詞

6.7 本章小結



07 Route 53

7.1 使用Route 53做域名註冊與流量分配

7.2 A Record、Alias與CName等三種常見的DNS格式

7.3 Route 53的導流分發

7.4 考題解析與思路延伸

7.5 Route 53整體架構圖

7.6 本章相關名詞

7.7 本章小結



08 CloudWatch

8.1 CloudWatch-AWS的監控運維服務

8.2 CloudWatch與CloudWatch Logs

8.3 CloudWatch Agent的使用方式

8.4 CloudWatch Logs的核心結構

8.5 考題解析與思路延伸

8.6 CloudWatch整體架構圖

8.7 本章相關名詞

8.8 本章小結



09 CloudTrail

9.1 雲端服務的操作行為監控- CloudTrail

9.2 考題解析與思路延伸

9.3 CloudTrail整體架構圖

9.4 本章小結



第二單元　高併發架構

10 高併發架構總覽

10.1 在線用戶數量大幅成長

10.2 生活化的應用案例-商品產業鏈

10.3 經典的資訊化應用案例

10.4 AWS雲端的漸進式解決方案

10.5 CloudFront、ELB、Auto Scaling、SQS、ElastiCache、DynamoDB



11 CloudFront

11.1 流量緩解的第一道關卡-CloudFront

11.2 CloudFront的核心結構

11.3 考題解析與思路延伸

11.4 CloudFront整體架構圖

11.5 本章相關名詞

11.6 本章小結



12 Elastic Load Balancer

12.1 系統內的流量負載分流- Elastic Load Balancer

12.2 CloudFront與Elastic Load Balancer的差異

12.3 Elastic Load Balancer的核心組件

12.4 Elastic Load Balancer的健康檢查

12.5 Elastic Load Balancer協助加解密

12.6 傳統單機應用碰到Elastic Load Balancer

12.7 容器虛擬技術的負載均衡思維-多機器內多個port多個應用作分流

12.8 考題解析與思路延伸

12.9 Elastic Load Balancer整體架構圖

12.10 本章相關名詞

12.11 本章小結



13 Auto Scaling

13.1 按流量變化，自動增減機器- Auto Scaling

13.2 經典配置- ELB結合Auto Scaling

13.3 EC2 Auto Scaling的核心概念

13.4 增減機器的時機點控制- Scaling Policy

13.5 考題解析與思路延伸

13.6 Auto Scaling整體架構圖

13.7 本章相關名詞

13.8 本章小結



14 SQS

14.1 任務暫存器-SQS

14.2 經典應用案例-工作便利貼

14.3 SQS的核心架構

14.4 每一個任務的Message容量限制

14.5 SQS的兩種版本- Standard與FIFO

14.6 消息不可見性，避免任務重複處理

14.7 考題解析與思路延伸

14.8 SQS整體架構圖

14.9 本章相關名詞

14.10 本章小結



15 DynamoDB

15.1 彈性資料結構的自動全受管數據庫- DynamoDB

15.2 DynamoDB的核心組件

15.3 DynamoDB的資料分散與排序方式- Partition Key與Sort Key

15.4 增強資料讀取效率的二級索引

15.5 DynamoDB按讀寫量來計費

15.6 DynamoDB的兩大備份方案

15.7 考題解析與思路延伸

15.8 DynamoDB整體架構圖

15.9 本章相關名詞

15.10 本章小結



16 ElastiCache

16.1 短期記憶的最佳存放處-ElastiCache

16.2 短期資料的經典儲存方式-記憶體共享

16.3 兩種常見的緩存資料操作手法

16.4 ElastiCache的兩種底層引擎-Memcached與Redis

16.5 Redis

16.6 Memcached

16.7 考題解析與思路延伸

16.8 ElastiCache整體架構圖

16.9 本章相關名詞

16.10 本章小結



第三單元　敏捷式架構

17 敏捷式架構總覽

17.1 以往部署新功能需要停機，造成用戶流失

17.2 敏捷式開發方法論，縮短功能的開發部署週期

17.3 對應到DevOps方法論，AWS也出了一系列工具



18 CloudFormation

18.1 透過設定檔或程式碼，快速建置AWS環境CloudFormation

18.2 視覺化設計架構與設定檔-CloudFormation Designer

18.3 CloudFormation的核心組件

18.4 CloudFormation的收費方式

18.5 考題解析與思路延伸

18.6 CloudFormation整體架構圖

18.7 本章相關名詞

18.8 本章小結



第四單元　手機應用架構

19 手機應用總覽

19.1 現代手機應用透過社群軟體做身份登入驗證，免註冊

19.2 寄發通知與E-mail至手機應用內

19.3 AWS提供了Cognito與SNS來完成這兩項任務



20 Cognito

20.1 以社群應用做身份驗證-Cognito

20.2 Cognito驗證分成兩塊，身份與權限驗證

20.3 Cognito整體架構圖

20.4 本章相關名詞

20.5 本章小結



21 SNS

21.1 推播通知用戶- SNS

21.2 SNS的核心組件

21.3 SNS與SQS結合打造消息重用系統

21.4 考題解析與思路延伸

21.5 SNS整體架構圖

21.6 本章相關名詞

21.7 本章小結



第五單元　成本控管

22 成本控管總覽

22.1 資訊部門雲端專業化

22.2 雲服務的新商業模式-雲端代理商

22.3 雲服務成本計算-Organization



23 單帳號的成本控管

23.1 專案的雲服務成本估算工具

23.2 雲端服務的三大收費方向

23.3 雲端服務成本追蹤

23.4 雲端服務付費方案一覽

23.5 單帳號成本管理架構圖

23.6 本章相關名詞

23.7 本章小結



24 多帳號的權限與成本控管

24.1 單帳號管理容易引發的情形

24.2 多帳號管理有效解決單帳號的管理問題

24.3 多帳號管理衍生出新的管理議題

24.4 AWS推出了Organization服務進行整併

24.5 問題整合對照表

24.6 多帳號權限與成本管理架構圖.

24.7 本章相關名詞

24.8 本章小結



第六單元　大數據架構

25 大數據架構總覽

25.1 大數據接收、操作與倉儲

25.2 Kinesis、EMR、Redshift



26 Kinesis、EMR與Redshift

26.1 物聯網、大量感測器、巨量數據

26.2 Kinesis 進行巨量數據搜集

26.3 Elastic Map Reduce進行巨量數據操作

26.4 整理後的大數據資料會轉存到S3或Redshift

26.5 Redshift資料分析用的大數據資料倉儲

26.6 考題解析與思路延伸

26.7 大數據應用整體架構圖

26.8 本章相關名詞

26.9 本章小結



第七單元　Serverless架構

27 Serverless架構總覽

27.1 腳底按摩店的經營模式解析

27.2 Serverless架構的運行生態

27.3 Serverless架構在AWS上的Solution

27.4 Serverless衍生的微服務架構



28 API Gateway

28.1 大型資訊架構內，會包含多個資訊系統

28.2 AWS提供API Gateway當整合性接口

28.3 API Gateway整體架構圖

28.4 本章相關名詞

28.5 本章小結



29 Lambda

29.1 新型軟體虛擬化技術-容器

29.2 AWS版本的容器運算方案-Lambda

29.3 Lambda的核心結構

29.4 Lambda計費方案

29.5 考題解析與思路延伸

29.6 Lambda整體架構圖

29.7 本章相關名詞

29.8 本章小結



第八單元　混合雲架構

30 混合雲的快速一覽

30.1 本地機房與雲端資源混合使用，保留架構彈性

30.2 Multi-Site解決方案

30.3 考題解析與思路延伸

30.4 混合雲整體架構圖

30.5 本章相關名詞

30.6 本章小結



31 尾聲

32 經典架構圖一覽

33 高併發架構圖一覽

34 DevOps架構圖一覽

35 Serverless架構圖一覽

36 名詞索引表",https://cf-assets2.tenlong.com.tw/products/images/000/153/190/medium/MP22007.jpg?1601453870
Python for DevOps｜學習精準有效的自動化 (Python for Devops: Learn Ruthlessly Effective Automation),"Grig Gheorghiu, Noah Gift, Kennedy Behrman, Alfred...
          盧建成 譯",歐萊禮,9789865026073,2020/10/19,"「搭配進階的課程，對Python提供極佳的介紹。透過這個課程了解如何應用Python到對現今軟體發展具有重要性的所有技術領域之中。」

—Jeremy Yabrow

Director of Engineering, BeyondView, Inc.



「你將遠離如尋寶般的探索，獲得能協助你改善DevOps實踐的新知和技術。」

—Wes Novack

Systems Architect, Pluralsight



在過去的十年裡，科技領域有許多事情發生改變。炙手可熱的資料科學、無所不在的雲端科技和許多組織需要某種方式的自動化。經歷這些轉變，Python已經成為世界上最受歡迎的語言之一。這本基於實務的技術指南將為你展示如何利用Python並與目前最有用的DevOps工具(包括Docker、Kubernetes和Terraform)結合，來處理日常Linux系統的管理與維護任務。



對於眾多的專家來說，學習如何操作Linux及自動化是十分重要的。Python讓這些事變得更為簡單。透過本書，你將學會如何開發軟體和解決使用容器的問題，當然還包括了如何設置監控與監測、進行負載測試和運維你的軟體。如何有效的使用Python「讓事情被完成」？以下是獻給你的指南。



‧Python基礎知識，包含語言的介紹

‧如何自動發送訊息、實作命令列工具和自動化檔案系統管理

‧Linux工具集、套件管理、建構系統、監控與監測和自動化測試

‧雲計算、基礎設施即程式碼、Kubernetes和無伺服器架構

‧從DevOps觀點出發，進行機器學習和資料工程

‧建構、部署和維運機器學習專案



    

    作者簡介
    
      Noah Gift 是西北大學與杜克大學資料科學與工程研究所課程的講者和顧問

Kennedy Behrman 是具有豐富經驗為新創公司提供雲端解決方案架構與實作的顧問

Alfredo Deza 是軟體工程師與開源軟體的開發者，並且具有重建公司基礎架構的經驗

Grig Gheoghiu 程式設計師、研究室經理、系統/網路/安全架構師和軟體測試工程師

    

    目錄大綱
    
      前言

譯者序

第1章 以 Python 實踐 DevOps 的必需知識

第2章 檔案與檔案系統操作自動化

第3章 使用命令列

第4章 有用的 Linux 工具

第5章 套件管理

第6章 持續整合與持續部署

第7章 監控與日誌收集

第8章 運用 pytest 於 DevOps

第9章 雲端運算

第10章 基礎設施即程式碼

第11章 容器技術：Docker 和 Docker Compose

第12章 容器調度：Kubernetes

第13章 無伺服器技術

第14章 MLOps 和機器學習工程

第15章 資料工程

第16章 DevOps 戰爭故事與訪談

索引",https://cf-assets2.tenlong.com.tw/products/images/000/153/469/medium/A629.jpg?1602060933
"無限的力量 - 這個世界表面上看似混亂且不講理, 但其最深處卻是合乎邏輯, 並且確實遵守著一條條的數學定律 (Infinite Powers: How Calculus Reveals the Secrets of the Universe)","Steven Strogatz 博士 著
          黃駿 譯",旗標科技,9789863126348,2020/9/9,"本書榮獲：英國皇家學會科學圖書獎入選, 紐約時報科學類 Bestseller

[名人推薦]

● 清華大學榮譽教授 李家同博士

● 華盛頓郵報：『本書妙趣橫生, 藉由一個個讓人驚喜的故事, 闡明微積分帶來的現代文明…』

● 史丹佛大學數學教育教授 Jo Boaler 博士：『這本引人入勝的書, 帶你認識數學在這個世界所扮演的角色, 相信能讓老師與學生都受益匪淺』

● 理論物理學與超弦理論家 Brian Greene 博士在推特上推薦：『…本書將微積分這門數學史上最重要的發明, 用很精彩的方式帶到大眾眼前』

● 電影黑天鵝原著作者 Nassim Nicholas Taleb：『此書具有危險性！會讓你不經意就喜歡上數學…』

……

[窺探未知與預測未來的能力]

距離地球十億光年外的兩個黑洞環繞相撞產生的重力波, 竟然能被浩瀚宇宙中渺小的人類捕捉到, 想想都覺得不可思議。多少人從事愛滋病研究未果，而何大一卻靠數學公式發明出抑制 HIV 病毒突變的雞尾酒療法。X 光斷層掃描將光束射入人體就能產生 3D 透視影像, 這也太神奇了吧！

你是否曾經思考過？人類的科技發展在幾個世紀前還相當緩慢, 例如輪子是距今 5000 年前就發明出來, 直到 1885 年才造出第一台以汽油驅動的汽車。然而, 現代科技卻進步飛快, 例如 1903 年才發明出最陽春的飛機, 卻在 1978 年就能讓太空梭飛出地球, 而在 2020 年 SpaceX 以民營企業的身分完成太空載人任務。世界變化越來越快, 我們有幸生在這個時代, 親眼見證了人類科技的大躍進。為什麼古今的差異如此之大？

這一切都要感謝牛頓與萊布尼茲發明出微積分, 留給後代珍貴的寶藏！如果沒有微積分, 那微波爐、電腦、手機、衛星、網路、… 都不會出現, 我們將無法分裂原子、揭開人類基因的奧秘, 也不能預測傳染病疫情, 更無法窺探宇宙深處的動靜。

[因為無限, 才有微積分的誕生]

這個世界表面上看似混亂且不講理, 但其最深處卻是合乎邏輯, 並且確實遵守著一條條的數學定律。微積分就像是宇宙的語言, 能描述大自然現象與萬事萬物的運行規律, 它改變了世界、形塑了人類的新文明, 但這一切神奇的躍進並非一蹴而就。

微積分雖然是在十七世紀由牛頓與萊布尼發明, 但他們承襲「無限 Infinite」的觀念, 正是數學發展史上最具爭議也最有創造力的觀念, 無限扮演了革命性的角色, 加快了科技發展的進程。在這場歷史大戲中, 數學、天文、物理天才們一一上場, 有的不可一世, 有的抑鬱而終, 有的生性多疑, 有的廣結善緣, 就讓本書像說故事一樣一一揭曉他們留給世人這「無限的力量」吧。 

本書特色: 

● 英國皇家學會科學圖書獎入選 / 紐約時報科學類 Bestseller

● 就算害怕數學的人也能讀得津津有味

● 瞭解現今科技發展如此快速的根本原因



    

    作者簡介
    
      史蒂芬．斯托加茨（Steven Strogatz）

是康乃爾大學應用數學系的雅各布．古爾德．舒爾曼教授（編註：此為康乃爾大學最崇高的教職頭銜，名稱來自於第三任校長雅各布．古爾德．舒爾曼)。他是知名的教育工作者以及文獻被引用次數最高的幾名數學家之一。曾為《紐約時報》（New York Times）及《紐約客》（The New Yorker）雜誌撰寫數學專題的文章，同時也是電台節目《廣播實驗室》（Radiolab）和《科學星期五》（Science Friday）的常客。其著作還有《同步》（Sync）以及《x 的奇幻旅程》（The Joy of x）。目前居住於美國紐約州的綺色佳市。

[譯者]

黃駿 

臺灣大學 腦與心智科學碩士

    

    目錄大綱
    
      前言

讓人人皆懂微積分

充斥著微積分的世界

微積分不僅僅是一種語言, 更是高層次的論證邏輯

不合理地有效

無限原理

名為『無限』的怪物

弧、運動與變化

第 1 章 無限

1.1 無限 (infinity) 是一座橋

1.2 利用披薩進行證明

1.3 極限與牆之謎

1.4 .333… 的寓言

1.5 無限多邊形的寓言

1.6 無限的致命誘惑

1.7 犯了以零為分母之罪

1.8 實無限 vs. 潛無限：實無限的原罪

1.9 季諾悖論

1.10 當季諾數位化

1.11 當季諾遇上量子

第 2 章 駕馭無限的人

2.1 包夾逼出圓周率

2.2 π 的哲學之道

2.3 當立體主義遇上微積分

2.4 以起司進行證明

2.5 阿基米德的『方法』

2.6 阿基米德對電腦動畫應用的影響

2.7 阿基米德對高端精密手術的貢獻

2.8 邁向運動之謎

第 3 章 揭露物體運動的法則

3.1 亞里斯多德眼中的世界

3.2 靠近伽利略

3.3 下落、滾動與奇數法則

3.4 科學中的極簡之美

3.5 從搖晃的吊燈到全球定位系統

3.6 克卜勒與行星運動之謎

3.7 克卜勒第一定律：橢圓軌道

3.8 克卜勒第二定律：相同時間掃過相同面積

3.9 克卜勒第三定律與神聖的狂熱

3.10 克卜勒與伽利略的同與異

3.11 風起雲湧

第 4 章 初露曙光的微分

4.1 崛起於東方的代數學

4.2 代數如何興起，幾何又為何衰落？

4.3 當代數遇上幾何

4.4 當方程式成為曲線

4.5 代數與幾何相得益彰

4.6 費馬 vs. 笛卡兒

4.7 尋找失傳的分析發現法

4.8 如何在箱子裡放入最多東西

4.9 費馬如何幫助聯邦調查局

4.10 最短時間定律

4.11 關於切線的爭論

4.12 希望之地就在前方

第 5 章 微積分發展的交叉點

5.1 函數的功能

5.2 幂函數

5.3 指數函數

5.4 十的次方

5.5 對數函數

5.6 自然對數與它的指數函數

5.7 指數增長與消退背後的機制

第 6 章 描述變化的詞彙

6.1 微積分中的三個核心問題

6.2 線性函數具有固定的變化率

6.3 非線性函數與其變化率

6.4 以導數描述白天長度的變化率

6.5 代表瞬時速率的導數

第 7 章 祕密之泉

7.1 面積、積分、以及基本定理

7.2 以運動為例將基本定理視覺化

73 固定加速度

7.4 利用油漆滾筒刷證明微積分基本定理

7.5 基本定理的意義

7.6 積分的聖杯

7.7 微分是區域 vs. 積分是全域

7.8 孤獨的男孩

7.9 冪級數的遊戲

7.10 牛頓：一位混搭藝術家

7.11 非公開的微積分

第 8 章 腦中的虛構之物

8.1 轉瞬之間

8.2 無窮小量 infinitesimal

8.3 對接近 2 的數字進行立方

8.4 微分

8.5 透過微分求導數

8.6 使用微分得到基本定理

8.7 是什麼讓萊布尼茲發現了微分和基本定理？

8.8 藉由微積分的幫助對抗愛滋病毒 HIV

第 9 章 遵守邏輯的宇宙

9.1 自然界的邏輯

9.2 二體問題

9.3 當牛頓遇上《關鍵少數》

9.4 微積分與啟蒙運動

9.5 從笛卡兒到連續系統

9.6 常微分方程與偏微分方程

9.7 偏微分方程與波音 787

9.8 無處不在的偏微分方程

第 10 章 引起波動

10.1 與弦相關的理論

10.2 為什麼使用正弦波？

10.3 將振動模式視覺化：克拉德尼圖形

10.4 最崇高的勇氣

10.5 微波爐

10.6 為什麼微波爐曾經被稱為雷達爐

10.7 電腦斷層掃瞄與腦部造影

第 11 章 微積分的未來

11.1 DNA 纏繞數

11.2 決定論與它的極限

11.3 非線性

11.4 混沌

11.5 龐加萊的視覺化方法

11.6 戰爭中的非線性

11.7 微積分和電腦結盟

11.8 複雜系統與高維度的詛咒

11.9 電腦、人工智慧與認知之謎

結論 

結一 小數點後八位

結二 召喚正子

結三 為什麼我們可以理解宇宙",https://cf-assets2.tenlong.com.tw/products/images/000/151/592/medium/9789863126348_bc.jpg?1597716710
你所不知道的 JS｜範疇與 Closures，this 與物件原型 (You Don't Know JS: this & Object Prototypes),Kyle Simpson 著、黃銘偉 譯,歐萊禮,9789864760497,2016/5/24,"<內容簡介>

 「Kyle 對於 JavaScript 語言運作的每一個細節所展現出來的關鍵思考方式將會融入你的思維和工作流程中。」

—Shane Hudson，自由前端網站開發人員

「this 關鍵字和原型(prototypes)非常關鍵，因為它們是使用 JavaScript 進行真實世界編程的基石。」

—Nick Berardi，RDA 公司資深顧問

《你所不知道的 JS》系列包括：

■ 導讀，型別與文法

■ 範疇與 Closures，this 與物件原型

■ 非同步處理與效能

■ ES6 與未來發展

■ 範疇與 Closures 篇

不管你有多少的 JavaScript 使用經驗，很有可能你還是沒有完整地了解這個語言。本篇會帶你潛入範疇(scope)與 closures(閉包)的內部，若想成為效率更好、實力更高強的 JavaScript 程式設計師，你就一定得了解這兩個核心概念。你會學到它們如何運作，以及為何如此運作，並且知道對 closures 的理解如何成為你開發技能組合中強大的一部分。

在本篇中，你會：

■ 學習何謂範疇，也就是 JavaScript 引擎用來找出程式碼中區域變數位置的一組規則

■ 深入到巢狀範疇(nested scope)中，也就是內含變數與函式的一系列容器

■ 探索函式範疇與區塊範疇、拉升(hoisting)動作，以及基於範疇的資訊隱藏所構成的模式和帶來的好處

■ 了解如何使用 closures 來進行同步或非同步的任務，包括建立 JavaScript 程式庫

■ this 與物件原型篇

本篇會帶你潛入 JavaScript 的 this 結構和物件原型(object prototypes)的內部。你會學到它們的運作方式，以及它們為何是行為委派(behavior delegation)不可或缺的一部分，在這種設計模式中，物件是連結在一起的，而非複製產生的。

在本篇中，你會：

■ 探索 this 繫結如何依據函式被呼叫的方式指向不同的物件

■ 探討 JS 物件的本質，以及為何你需要指向它們

■ 學習開發人員如何使用 mixin 模式在 JS 中偽造出類別

■ 檢視 JS 的原型機制如何形成物件之間的連結

■ 學習如何從類別與繼承設計轉移到行為委派

■ 了解 OLOO(objects-linked-to-other-objects)編程風格如何自然地實作行為委派

如同《你所不知道的 JS》系列其他書籍，《範疇與 Closures 篇》及《this 與物件原型篇》會深入探討這個語言較為棘手的部分，也就是許多 JavaScript 程式設計師會乾脆避開的那些部分。裝備了這些知識後，你就能真正精通 JavaScript。

本系列之補充資料(程式碼範例、練習等)可在此處下載：https://github.com/getify/You-Dont-Know-JS

<作者簡介>

Kyle Simpson 是來自德州奧斯汀的 Open Web 的傳道者，對 JavaScript 的所有東西都充滿熱情。他是一位作家、研討會講師、技術講者，以及 OSS 的貢獻者和領導者。 



<目錄>

  

PART 1 範疇與Closures篇

Chapter 1 何謂範疇？

Chapter 2 語彙範疇

Chapter 3 函式 vs. 區塊範疇

Chapter 4 拉升

Chapter 5 範疇的 Closure

PART 2 this 與物件原型

Chapter 6 this or That ?

Chapter 7 this 現在全都說得通了！

Chapter 8 物件

Chapter 9 混合的「類別」物件

Chapter 10 原型

Chapter 11 行為委派

APPENDIX A 動態範疇

APPENDIX B Polyfilling 區塊範疇

APPENDIX C 語彙的 this

APPENDIX D ES6 類別

APPENDIX E 致謝",https://cf-assets1.tenlong.com.tw/images/108185/medium/07.jpg
金魚都能懂的 CSS 選取器：金魚都能懂了你還怕學不會嗎（iT邦幫忙鐵人賽系列書）,李建杭 (Amos),博碩文化,9789864344994,2020/7/8,"☛☛☛☛☛☛☛台灣第一本CSS選取器!!!☚☚☚☚☚☚☚

【Amos帶你搶先看】

 



 

 



內容簡介



本書內容改編自第11屆iT邦幫忙鐵人賽，Modern Web組冠軍網路系列文章《金魚都能懂的CSS 選取器 - 金魚都能懂了你還怕學不會嗎》，源於太多的網頁新手對CSS選取器不熟練，而市面上也缺乏專門探討CSS選取器的資源與項目。本書一方面能提供讀者對CSS選取器有更進一步的整理與思考；二方面讓廣大的網頁新手或老手們，有個便利查詢與了解的地方。

在網頁的世界中，有太多對新手不友善的因素，不管是教學文章的敘述方式、專有名詞的應用、學習章節的安排、或舉例與引導過程等，Amos為了解決這問題，便開始了「金魚都能懂」的系列教學，希望能用最淺顯易懂的教學與講解方式，帶領眾新手們，在新手村中學好學滿，自信滿滿地踏出新手村。





必看！學習路徑懶人包---CSS 選取器學習地圖



➠ 新手必學的CSS 選取器

➠ 入門進階者必學的CSS選取器

➠ 提升效率必學的CSS選取器

➠ 多國語言網站必學的CSS選取器

➠ 技能探究者必學的CSS選取器



《金魚都能懂的CSS 選取器》有別於一般的書籍，這本書的閱讀方式你可以從一開始就照順序閱讀，也可以直接跳不同章節閱讀，更可以按照「必看！學習路徑懶人包---CSS 選取器學習地圖」中的分類建議來閱讀，又或者是當作字典來跳章節學習，不管使用哪一種閱讀方式，對各位來說，全部學完是必要的喔，這樣才能彈性運用在工作上，開發效益絕對翻倍。





【Amos線上免費教學影片】



金魚都能懂的網頁入門，可點下方logo前往：



金魚都能懂的網頁切版，可點下方logo前往：







讀者好評



「看了金魚系列，讓我對HTML的觀念更加清楚，再閱讀其他文章或官方文件能夠更快解讀。而熟悉後再回來看，又會有新的發現！很多觀念在重複閱讀後更加精粹，更加精實。」------張潪榤



「從 0 →1 建立穩固觀念，讓你遇到任何版型都能自行推導，而不是只會照抄老師教過的範例，誠心推薦給網頁新手。」------ shika



「老師的課程除了扎實的語法講解以外，最珍貴的就是老師的思考方式以及實戰經驗。切版時常常會想起老師的防衛性切版，思考每個地方有可能會遇到的更動，該如何撰寫較有彈性，便於調整與修改。」------ Lai



「以前的學習是死背方式，當遇到版面變化就會卡住出現BUG。金魚系列每篇簡短卻是字字珠璣、紮紮實實的基本功！一篇篇導引我學習正確觀念、推導邏輯。每段的學習、複習讓我在網頁切版的細節上更加紮實（感謝金魚系列讓我遇到好講師及一起學習的夥伴，也讓我換到新工作）。」------ 凱特



「CSS是個看似簡單實質卻有很多「眉角」的技術。Amos老師學習CSS的方式，正是自己跌跌撞撞習得的，也因為這樣的過程，老師很清楚新手學習CSS會遇到的瓶頸到底有哪些，因此在教學的同時，自然而然的會強調那些必須注意的細節，人家說魔鬼藏在細節裡大概就是這樣的道理了！」------ 王泉富

 

 

 

 



    

    作者簡介
    
      李建杭 (Amos Li)

一個熱血的斜槓開發者，過去從事視覺設計師，後來轉職成為前端工程師，同時也是國內知名的前端技術講師及技術研討會講者，熟稔 HTML & CSS、Bootstrap、RWD、CSS3 等，2018 年起開始成為 YouTuber，致力於使用簡單易懂的方式讓新手學習前端網頁製作相關技術。目前斜槓路亞釣魚技能與生態研究中。

連續2年在iT邦幫忙鐵人賽獲得兩個冠軍一個佳作

冠軍　金魚都能懂的網頁設計入門 - 金魚都能懂了你還怕學不會嗎

冠軍　金魚都能懂的 CSS 選取器 - 金魚都能懂了你還怕學不會嗎

佳作　金魚都能懂的網頁切版 - 金魚都能懂了你還怕學不會嗎

    

    目錄大綱
    
      01 CSS 入門

1-1 CSS 選取器是什麼？怎麼用？它能做些什麼事？

關於網頁的組成

CSS 選取器與其它技術的搭配

CSS 選取器的基本組成與作用

CSS 選取器能做什麼？

1-2 學習CSS 選取器為何如此重要

1-3 超重要的CSS 優先權

基本CSS 優先權規則

進階CSS 優先權

優先權總結

02 基本類型CSS 選取器

2-1 Tag 元素選取器 ― 最常用到的基本設定選取器

CSS 標籤選取器的設定方式

實際範例一：Reset 瀏覽器預設值

實際範例二：統一網站視覺外觀

2-2 CSS 類別選取器 ― 切版與前端框架最常使用的CSS 選取器

class 的語法外觀

CSS class 名稱規則

CSS class 命名方法

2-3 ID 選取器 ― 程式設計最常用到的CSS 選取器

CSS ID 選取器特性與規則

瀏覽器對ID 的處理不同調

ID 選取器的實際應用

ID 選取器的效能迷思

我到底要不要使用ID 選取器

2-4 CSS 群組式宣告 ― 每個開發者必學的選取方式

使用群組式宣告的重點與誤區

實務上面的應用狀況

實際範例一：多欄版面製作

2-5 CSS 組合式宣告 ― 新手開發從這裡開始進步

舉個生活一點的例子

CSS 組合式宣告實務應用面

實際範例一：設定超連結

實際範例二：設定文繞圖

實際範例三：凸顯作用中的項目

2-6 CSS 層疊式宣告 ― 快速選到特定元素內的物件

暗藏毒藥的層疊式選取器

瀏覽器對CSS 的選取流程與疑惑

層疊選取器寫幾層最好

2-7 CSS 通用選取器 ― 你我都該熟知的老朋友

在那個瀏覽器的戰國時代

什麼都選！什麼都設定！什麼都長一樣！

開發者的覺醒

星號本無罪，只是被濫用

2-8 CSS 屬性選取器 ― 選取自由度超高的選取器

選取【擁有特定屬性】的物件

選取屬性值【完全等於】特定文字的物件

選取屬性值【開頭等於】特定文字的物件

選取屬性值【結尾等於】特定文字

選取屬性值中【包含特定文字】的物件

選取屬性值中【包含特定單字】的物件

選取屬性值【開頭等於特定文字或包括 - 號】的物件

實際應用

實際範例一：強迫更改頁面廣告區塊

2-9 親代選取器 ― 妹妹選取器與鞭炮串選取器

「+」號之跟屁蟲選取器

「~」連接號之弟弟妹妹一起來選取

實際範例一：變色的區塊

實際範例二：表單選取變色

2-10 子代選取器 ― 一個不會讓你株連九族的選取器

美好的？還是具風險的？

CSS 汙染是什麼

實際範例一：多層選單

03 偽元素

3-1 ::before & ::after ― 無中生有的偽元素選取器

沒了會死，有了更精彩

有哪些貨，通通給我拿出來

你這個中看不中用的XX

特別注意事項

3-2 ::first-line 首行選取器 ― 低調到不行的選取器

3-3 ::selection 選取狀態偽元素 ― 讓你沒有選擇困難

設定的彈性

那些不常用到的值

實際應用

04 CSS 偽類選取器

4-1 何謂偽類選取器

偽類選取器的特性

偽類的子分類

4-2 常用於超連結的動態偽類選取器 ― 網頁互動變豐富

點擊一個超連結要經過多少動作

不是所有人都會用滑鼠

過程的順序

佛克斯的應用

4-3 :checked 表單狀態選取器 ― 讓你可以開開關關好開勳

特性應用發想

製作一個動態改變色彩的清單

更多範例

4-4 :lang 語言偽類選取器 ― 多長的單字都不煩惱

:lang 應用

太長的困擾

太長了？用hyphens 斬斷吧

4-5 :first-letter 首字選取器 ― 玩轉首字設計的好功能

首字放大的問題

更多的應用

4-6 :empty 空值選取器 ― 比谷關的空氣更乾淨的選取器

實際範例：動態欄數

實際範例：顯示缺貨

4-7 :not() 否定選取器 ― 一個搞排擠的選取器

學:not() 選取器要腦袋轉一下

你想不到應用的地方是你的問題

選取第一個以外的項目

選取站外連結的超連結

選取沒有加註alt 資訊的圖片

把不是特定class 的項目隱藏

4-8 :first-child & :last-child 頭尾選取器 ― 有頭有尾有始有終的選取器

重點在順序

實務應用

4-9 :first-of-type & :last-of-type 首項分類與尾首分類選取器 ―一個不會讓你看錯男女的選取器

實務應用

4-10 :only-child 獨子選取器 ― 這是啥媽寶選取器

獨子的概念

到底可用在哪裡

4-11 :only-of-type 類型獨子選取器

你可能會誤會

4-12 :nth-child() & :nth-last-child() ― 你覺得燒腦但其實根本不燒腦的選取器

選取奇數與偶數

選取特定單一物件

間隔跳位選取物件

間隔選取原理

公式分解前段

公式分解後段

公式變化

實際應用與計算技巧

表格色彩的應用

4-13 :nth-of-type() & :nth-last-of-type() ― 你覺得燒腦但其實根本不燒腦的選取器趴兔

選取奇數與偶數

選取特定單一物件

間隔跳位選取物件

間隔選取原理

實際應用與計算技巧

文章頁面前言的應用

4-14 :disabled & :enabled 表單用偽類選取器 ― 一眼看穿那些不能按的按鈕

實際應用

4-15 :required & :optional 選取器 ― 必填的欄位看這邊

實際範例：使用選取器標示必填欄位

4-16 :valid & :invalid 選取器 ― 資料格式的糾察員

有效與無效的資料格式

實際應用：預先檢查欄位資料正確性的表單

4-17 :in-range & :out-of-range 選取器 ― 你太超過囉

不是只有上限還有下限

實際範例：提示購買規則

4-18 :read-only 選取器 ― 唯讀啦就是不給你改

實際範例：讓唯讀欄位不顯示為表單外觀

4-19 ::placeholder 選取器 ― 你就醬子寫啦

實際範例：提醒使用者尚未填寫的欄位

4-20 :focus-within 焦點選取器 ― 誰的孩子一清二楚

:focus-within 與:focus 的差異

實際範例：自動滑開的表單

4-21 :root 根目錄選取器 ― 變幻莫測的應用

:root 的好朋友CSS variables

CSS 變數的使用方式

建立變數

套用變數

CSS 區域變數的特性

全域變數跟區域變數我該怎麼選擇

05 CSS 未來

5-1 可預見的CSS 未來

5-2 還有哪些CSS 選取器

5-3 後記",https://cf-assets2.tenlong.com.tw/products/images/000/149/880/medium/MP22010.jpg?1593488759
深入淺出 Go (Head First Go),"Jay McGavren 著
          潘國成 譯",歐萊禮,9789865026257,2020/11/4,"「《深入淺出Go》對於只想能所學即所用，而不想在無止盡的語法與技術細節中掙扎的我們真是恰到好處。只需要付出一點心力，就算你工作的主力是其他程式語言，依然能在這本書中學到不少相當受用的新知。」

Peter Cooper

Golang Weekly編輯



你將從本書學到什麼？

Go讓打造出精簡、可信及有效率的軟體變得簡單，而這本書讓程式設計者能夠輕鬆上手。Go是針對高效能網路應用及多執行緒所設計的，可以如同Python及JavaScript這樣的程式語言易於閱讀和使用。透過這本書中的範例，你可以實地演練這個語言學習如何編寫Go的程式。最棒的是，你會了解初學Go應該知道的慣例及技巧。



本書為何如此與眾不同

我們認為你的時間寶貴，不應該浪費在與新概念周旋不下的窘境中。運用認知科學與學習理論的最新研究成果，精心建構出一段引發多重感知的學習體驗。《深入淺出Go》採取專為大腦運作而設計的豐富視覺化風格，而不是令你昏昏欲睡的冗贅敘述。



    


    目錄大綱
    
      1 讓我們起步 Go 吧：基本語法（syntax）

2 接下來是什麼程式？條件式（conditionals）與迴圈（loops）

3 調用我吧：函式（functions）

4 打包程式碼：套件（packages）

5 排排站：陣列（arrays）

6 關於附加：切片（slices）

7 標籤化資料：映射表（maps）

8 建立儲存：結構（structs）

9 我就喜歡你這型：自定型別（types）

10 你自己留著用吧：封裝（encapsulation）與嵌入（embedding）

11 你還能做什麼？：介面（interfaces）

12 回到原點：從錯誤恢復

13 分擔工作：goroutines 與通道（channels）

14 確保程式品質：自動化測試

15 回應請求：網際網路應用程式（web apps）

16 追隨模板：HTML 模板

A 了解 os.OpenFile：開啟檔案

B 六件我們還沒提到的事情：還有呢",https://cf-assets2.tenlong.com.tw/products/images/000/153/855/medium/A563.jpg?1603273555
"無瑕的程式碼－敏捷完整篇－物件導向原則、設計模式與 C#實踐 (Agile principles, patterns, and practices in C#)","Robert C. Martin, Micah Martin 著、鄧輝、孫鳴 譯、陳錦輝 審校",博碩文化,9789864342099,2017/5/30,"~~~《名家名著》03 　 V.S. 《無瑕的程式碼》03~~~





小記者︰能說說你對《無瑕的程式碼──敏捷完整版》的讀後心得嗎？

工程師︰自從讀了這本《敏捷完整版》之後，我再也不怕面對那些慣老闆、慣客戶了。而且客戶滿意度、專案完成度都一百分呢！



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



這本書是《無瑕的程式碼》系列書的第三冊，也是《名家名著》系列書的第三冊。主題是「敏捷開發」，而重點仍舊是回歸到「如何撰寫出好的程式碼」。



什麼是「敏捷開發（Agile Development）」呢？簡單來說，它是軟體開發的一套方法，特點是只要透過這套方法，就能使你的專案更敏捷。



我們為何非得要讓專案變得敏捷呢？原因無他，就是因為我們有慣老闆、還有慣客戶。也就是說，對於現今的市場環境而言，專案不夠敏捷是不行的。這一點，相信所有的軟體工程師都無法否認吧！



可是你可能會反駁說，各行各業都有慣老闆和慣客戶啊（至少在台灣是這樣），為什麼軟體業就要一套特別的方式來應付他們呢？這就是要回歸到一個最根本的問題，「什麼是軟體？」，或者更精確地說「什麼是軟體設計？」，而這個問題和所有的軟體工程師（或程式設計師）習習相關，因為這是工作的本質。



各式各樣的工程有著所謂的程序，例如橋樑工程師會先進行結構分析，他們會建立電腦模型並進行模擬，接著他們會建立比例模型，並在風洞中或用其他一些方法進行測試。當這些程序都完成了，才會將設計圖交給橋樑的建造工人去建造出真實的橋樑。



以上是橋樑工程的開發程序，那麼軟體開發的程序呢？在很久很久以前（真的是很久很久以前了），軟體開發也發展出了所謂的程序，也就是瀑布型開發程序。在瀑布型開發中，系統分析師會依照需求與規畫，畫出所謂軟體的設計圖（例如UML圖），然後由「程序員」根據這些圖去寫出程式碼，最後建置（build）成可使用的軟體。



依照瀑布型開發程序開發出來的軟體，客戶只能選擇要用，還是不要用。不要用的話，是否有其他選擇？如果沒有，那麼客戶即便不滿意，也就只能將就著用（只是邊用邊罵而已）。當然，這是指套裝軟體的開發而言。



用一個例子來做比方，數十年前，台灣只有國道一號的日子，一位民眾想要開車從彰化到新竹，就只能有一個選擇，即便他不滿意苗栗那段高爬坡會折損車輛壽命，他也別無選擇。但當國道三號建造完畢後，他就有了第二個選擇，因此他會選擇他喜歡的國道來行使。建造國道的總經費是昂貴的（無論是時間還是金錢），但最貴的部分是在於建造部分，而非設計部份。所以國道並不多。競爭者很少。但這種商業模式在軟體業是行不通的。



若用早期的瀑布型開發程序來對比於國道建設，真正的建造部分，其實就是軟體建置（build）的部分，這部分只要一台電腦，一個編譯器，一個連結器，還有一點點的時間就完成了。所以代價是極低的。或許有人會說，不對，建造的部分應該也要包含按照UML圖去Coding的人工與時間成本。所以這部分的代價應該也是昂貴的。



這種說法表面上看似合理，但有多少程式碼是完全依照UML圖編寫的呢？在撰寫程式碼的過程中是否會修改原有的UML設計呢？早期這類情況並不嚴重，但晚期因為客戶的挑剔，這種情況早就屢見不鮮，甚至任何軟體工程師在開發專案時，心中早有預期會出現需求發生變化的情況。



國道的建造工人是無權修改設計圖的，他只能「按圖施工」。而程序員卻去修改了設計圖，這將使得設計圖無法作為最終產品的設計文件。因此，在這種情況下，最終產品的設計文件其實只有一份是準確的，這份文件就是「程式碼」。同時，在這種情況下，程序員應該已經不再只是「程序員」或「碼農」了，因為他參與了設計，換句話說，他應該稱之為程式「設計師」或軟體「工程師」。（在敏捷開發中，並不只有那些繪製UML圖的才叫做設計人員，正確地說，繪製UML圖的人常常也是負責寫程式的人）。



好的，如果你已經承認「寫程式」也算是「設計」的一環，那麼軟體建置（build）的成本（也就是軟體的建造成本，而非設計成本），應該是無庸置疑的低廉了。這也就是為什麼，客戶說，那邊改成XXX顏色，可以嗎？你會很乾脆地回答，當然沒問題，然後五分鐘內就給客戶看改完之後的結果。想一想，如果要改的是一整段國道護欄的顏色，相信沒有客戶敢做這樣要求，因為他們能預期到，這會花很多很多的錢。



所以說，建造軟體的花費是很少的，大多數的錢都是花費在「設計」上的。但對於其他工程就不一樣了，設計花費的錢相對於建造花費的錢來說，低廉了許多。



也就是軟體的這種特殊性，導致了客戶（更有可能的是上司）常常想要東改改、西改改，需求常常在變化。在現今這個快速變化的世界裡，慣客戶與慣老闆們為了競爭優勢（他們心中的競爭優勢），提出需求的變化根本是家常便飯。



在確定了「需求會變化」、甚至是「會頻繁地變化」這個軟體工程師一定得面對的事實後，軟體工程師該怎麼辦呢？有一群大師級的軟體工程師，開始發明了一系列因應的對策，包含設計模式、極限程式設計、測試驅動開發等等的技藝，還總結了一些物件導向的設計原則。這些都有助於應付變化。最終，這些人集合起來成立了一個「敏捷聯盟」，取名為敏捷（Agile），意思是軟體開發者及軟體本身應該如何敏捷地應付需求的變化，當中牽涉到的範圍極廣，從成員的組織到程式碼的組織都必須敏捷起來，這是門現代軟體設計的顯學，國外大廠早已採用多年。



Robert C. Martin（Bob大叔）是敏捷聯盟的創始成員之一，也是當中付諸行動並且有所成效的成員之一。他擁有極具說服力的文筆與口才。在這些年中，不斷出書、演講、作為顧問實際前往開發現場指導，並自創「Clean」一詞，其著作還曾獲得Jolt大獎，《Clean Code》一書也成為Amazon該類別最暢銷的著作，這些都對於敏捷開發的推廣有著極重要的貢獻。



根據《Clean Code》內文的說法，《Clean Code》可說是本書的前傳，而本書是完整說明如何實踐敏捷的書籍。如果您也喜歡Bob大叔的著作，如果你也是Clean派的弟子，或者你想實際體驗敏捷開發，那麼你一定不能錯過這本書。



本書的寫作風格是循序漸進，由淺入深的，作者會先提出一個問題，然後分析問題，接著實作它，然後是檢討它，展現出初次實作時的錯誤與失策，接著就展示如何透過作者所主張的技術來解決這些問題。這是一本非常講究實務的實踐書籍。此外，本書主要使用的是C#程式碼，這是由Bob大叔的兒子Micah Martin根據C#與.NET平台的特性重新改寫Jolt得獎著作而來的，改寫幅度包含所有的程式碼與內文，並採用了更容易理解的案例來詳述敏捷開發。如果你平常使用的是其他語言，也不必在意，因為傳播的介質不重要，傳授的內容才是本書的價值所在。



對於一些技術細節，本書果真是大師級的作品，原創性極高，在UML章節中，Bob大叔示範了他如何使用UML（果真和一般人不太一樣），還示範了如何使用UML才能幫助你而非是製造混亂的來源。對於設計模式而言，除了GoF的知名設計模式之外，Bob大叔還在本書中提到幾個他自己常用的設計模式，有些可以視為GoF 23個設計模式的變形，有些則不是，但重點是這些模式都非常好用，可以應用在不同的應用場合，同時Bob大叔也釐清了，某些模式為何不該在哪些場合中使用，他是以效益來看待這件事的，而這也是本書的最大特色：務實。

 

~~~~~~~~~~~~~~本書讚譽~~~~~~~~~~~~~~





這也許是第一本把敏捷方法、模式和最新的軟體開發基本原則完美結合在一起的圖書。當Bob Martin發言時，我們最好洗耳恭聽。

John Vlissides ──《設計模式》作者



這本書中充滿了對於軟體開發的真知灼見。不管你是想成為一個敏捷開發人員，還是想提升自己的技能，本書都同樣有用。我一直在期盼著這本書，它沒有令我失望。

Erich Gamma ── JUnit之父，《設計模式》作者



我期待這本書已經很久了，關於如何去掌握我們的行業技能，本書作者擁有非常豐富的實際經驗可以傳授。

Martin Fowler ── 軟體開發大師，《重構》作者



前幾天，我找到了記有我對Bob大叔第一印象的備忘錄。上面寫著'優秀的物件思維'。你手中的這本書就是能讓你受益終生的'優秀的物件思維'。

Kent Beck ── 軟體開發大師，JUnit之父，設計模式先驅



讀過無瑕的程式碼，一定要再讀「敏捷完整篇」，否則就是您的損失，它會解答您所有的疑惑。

《博碩文化》、《名家名著》 總編輯 ── 陳錦輝



    

    作者簡介
    
      Robert C. Martin：

人稱Uncle Bob，程式設計經驗超過40年，Agile Software（敏捷軟體開發）的提倡者之一。創立Object Mentor，這是一間專注於C ++、Java物件導向、模式、UML、敏捷方法學和極限程式設計的顧問諮詢公司。

在這些領域，作者撰寫了相當多的名著，並獲得有IT奧斯卡獎之稱──Jolt震撼年度大獎。本書為該得獎作品的C#版。該得獎年度，Jolt僅頒布通用類、技術類各一本著作得獎，通用類由本書原版獲得大獎，而技術類書籍則由另一本廣為人知的《Thinking in Java（第三版）》獲得。



Micah Martin：Robert C. Martin之子，他也是一位敏捷軟體專家，本書的C#程式碼主要是由他幫忙改寫，並包含了許多.NET平台上的特性。

    

    目錄大綱
    
      關於本書

Section I 敏捷開發

Chapter 1 敏捷實踐

Chapter 2 極限程式設計概觀

Chapter 3 計畫

Chapter 4 測試

Chapter 5 重構

Chapter 6 一次真實的程式設計場景



Section II 敏捷設計

Chapter 7 什麼是敏捷設計

Chapter 8 SRP：單一職責原則

Chapter 9 OCP：開放－封閉原則

Chapter 10 LSP：Liskov替換原則

Chapter 11 DIP：依賴反向原則

Chapter 12 ISP：介面隔離原則

Chapter 13 寫給C#程式設計師的UML概述

Chapter 14 使用UML

Chapter 15 狀態圖

Chapter 16 物件圖

Chapter 17 使用案例

Chapter 18 循序圖

Chapter 19 類別圖

Chapter 20 咖啡的啟示



Section III 薪水支付案例研究

Chapter 21 COMMAND模式和ACTIVE OBJECT模式：多功能與多任務

Chapter 22 TEMPLATE METHOD模式和STRATEGY模式：繼承和委派

Chapter 23 FACADE模式和MEDIATOR模式

Chapter 24 SINGLETON模式和MONOSTATE模式

Chapter 25 NULL OBJECT模式

Chapter 26 薪水支付案例研究：Iteration 1

Chapter 27 薪水支付案例研究：實作



Section IV 打包薪水支付系統

Chapter 28 包和元件的設計原則

Chapter 29 FACTORY模式

Chapter 30 薪水支付案例研究：包分析

Chapter 31 COMPOSITE模式

Chapter 32 OBSERVER ── 演化為模式

Chapter 33 ABSTRACT SERVER、ADAPTER和BRIDGE模式

Chapter 34 PROXY和GATEWAY模式：管理協力廠商API

Chapter 35 VISITOR模式

Chapter 36 STATE模式

Chapter 37 薪水支付案例研究：資料庫

Chapter 38 薪水支付系統使用者介面：MODEL VIEW PRESENTER



Appendix A 兩間公司

Appendix B 什麼是軟體",https://cf-assets2.tenlong.com.tw/products/images/000/107/585/medium/9789864342099.jpg?1525539215
Python 機器學習超進化：AI影像辨識跨界應用實戰 (附100分鐘影像處理入門影音教學/範例程式),鄧文淵 總監製/文淵閣工作室 編著,碁峰資訊,9789865026196,2020/9/22,"轟動程式圈3大AI影像辨識利器

從收集資料、圖片擷取、建立標籤、訓練模型

到智慧影像辨識的全面進化實戰！



人工智慧(Artificial Intelligence)應用基本上可分五大層面：時間序列、圖像處理、音訊處理、自然語言處理以及動態影像處理，其中與「智慧影像」相關者就佔了兩大領域。智慧影像是透過電腦視覺技術，從中學習人類的視覺辨識能力，並自動判讀影像中的關鍵資訊，目前被大量使用在圖像辨識、人臉識別、物體動作捕捉、光學文字識別...等，是人工智慧最為廣泛的應用之一。



在這個領域的研究中有許多功能強大的工具，如OpenCV、Yolo與dlib，但許多使用者卻不知如何收集資料、建立標籤，更不知道如何訓練模型，進而達成智慧影像辨識的結果！本書將引領讀者運用自己的資料，透過本機與雲端的資源，以目前主流技術進行自有模型的訓練來完成實際可用的智慧影像應用。



挑戰智慧影像最佳學習地圖，

結合本機與雲端應用，

真正深入AI影像辨識核心！



■掌握智慧影像的技術特性與主流的應用模組，涵蓋OpenCV、Pillow、Yolo與dlib。

■根據不同模組特性介紹其資料來源的收集方式，除了一般土法煉鋼的徒手拍攝影像，也能利用Kaggle資料庫進行下載，或是利用動態影片進行大量圖片的擷取，再運用自動批次的方式進行圖片整理與特徵標記。

■當本機在訓練模型時發生記憶體不足、效能不夠等問題時，使用Google專為機器學習而生的Colab雲端服務來訓練自己的模型。

■集結最具代表性的實務應用主題，包括人臉辨識、口罩人臉辨識、車牌辨識、車流統計…等專題，在真實的情況中體驗智慧影像的應用，並擁有開發能力。

■針對OpenCV與Pillow影像處理特別提供入門影音輔助教學，加速學習效率。



書附超值學習資源：範例程式檔/100分鐘OpenCV與Pillow影像處理入門影音教學

 

<序>

近年來人工智慧(Artificial Intelligence)的浪潮席捲全球科技領域，歷經數十年發展，伴隨著硬體效能不斷提升，在各領域都有突飛猛進的驚人突破。許多看似遙遠的科技名詞都不再是冷冰冰的高端技術，而是真實存在你我生活中的重要應用。而「智慧影像」應用則是人工智慧使用最為廣泛的功能之一。

人工智慧在各個領域中的應用基本上可以分成五大層面：時間序列、圖像處理、音訊處理、自然語言處理以及動態影像處理，其中與「智慧影像」相關的就佔了二大領域。智慧影像是透過電腦視覺技術，從中學習人類的視覺辨識能力，並自動判讀影像中的關鍵資訊，目前被大量使用在圖像辨識、人臉識別、物體動作捕捉、光學文字識別 ... 等。

雖然這個領域的研究中已經有了許多功能強大的工具，如OpenCV、Yolo或dlib，但是許多人應用時常會不知道如何收集資料，如何建立標籤，更不知道如何訓練模型，進而達成對於研究主題進行智慧影像辨識的結果！本書的論述主軸，即是想要帶領讀者利用自己的資料，透過本機以及雲端的資源，利用目前主流的技術，進行自有模型的訓練來完成實際可用的智慧影像應用。

如果您對於Python及機器學習有基本知識，想對於智慧影像進一步探索研究，並想將理論應用在自己的研究項目或是問題的解決上，就跟我們一起前進吧



    

    作者簡介
    
      一個致力於資訊圖書創作二十餘載的工作團隊，擅長用輕鬆詼諧的筆觸，深入淺出介紹難懂的 IT 技術，並以範例帶領讀者學習電腦應用的大小事。

我們不賣弄深奧的專有名辭，奮力堅持吸收新知的態度，誠懇地與讀者分享在學習路上的點點滴滴，讓軟體成為每個人改善生活應用、提昇工作效率的工具。

舉凡程式開發、文書處理、美工動畫、攝影修片、網頁製作，都是我們專注的重點，而不同領域有各自專業的作者組成，以進行書籍的規劃與編寫。一直以來，感謝許多讀者與學校老師的支持，選定為自修用書或授課教材。衷心期待能盡我們的心力，幫助每一位讀者燃燒心中的小宇宙，用學習的成果在自己的領域裡發光發熱！

我們期待自己能在每一本創作中注入快快樂樂的心情來分享， 也期待讀者能在這樣的氛圍下快快樂樂的學習。



官方網站：www.e-happy.com.tw

FB粉絲團：www.facebook.com/ehappytw

    

    目錄大綱
    
      CH01 認識智慧影像辨識



1.1 人工智慧

1.1.1 人工智慧是什麼？

1.1.2 人工智慧基本應用

1.1.3 人工智慧實際應用

1.2 智慧影像辨識應用

1.2.1 影像處理

1.2.2 智慧影像辨識

1.2.3 突破智慧影像辨識學習的困境



CH02 OpenCV和Pillow影像處理



2.1 OpenCV

2.1.1 以OpenCV讀取及顯示圖形

2.1.2 儲存影像檔

2.1.3 OpenCV基本繪圖

2.1.4 使用OpenCV進行臉部偵測

2.1.5 擷取臉部圖形及存檔

2.2 圖片特效處理

2.2.1 認識圖片的維度

2.2.2 圖片灰階和黑白處理

2.3 建立新畫布與圖形合併

2.3.1 建立新畫布

2.3.2 圖形合併

2.4 擷取攝影機影像

2.5 Pillow

2.5.1 Pillow圖片基本操作

2.5.2 Pillow圖片編輯

2.5.3 圖片灰階處理

2.5.4 Pillow繪製圖形

2.6 OpenCV與Pillow圖像格式互轉

2.6.1 OpenCV轉Pillow

2.6.2 Pillow轉OpenCV

2.6.3 OpenCV和Pillow黑白圖片處理比較



CH03 OpenCV模型訓練



3.1 專題方向

3.2 準備訓練Haar特徵分類器資料

3.2.1 認識Haar特徵分類器

3.2.2 處理正樣本及實測圖片

3.2.3 處理負樣本圖片

3.3 建立車牌號碼Haar特徵分類器模型

3.3.1 處理Haar特徵分類器模型的檔案結構

3.3.2 加入正樣本

3.3.3 加入負樣本

3.3.4 正樣本標記資料

3.3.5 顯示及修改框選區域

3.3.6 調整框選區域寬高比

3.3.7 增加車牌數量

3.3.8 訓練Haar特徵分類器

3.4 使用Haar特徵分類器模型

3.4.1 Haar特徵分類器模型語法

3.4.2 車牌號碼偵測



CH04 OpenCV影像辨識-車牌



4.1 專題方向

4.2 車牌號碼擷取

4.2.1 原始圖片轉換尺寸

4.2.2 擷取車牌號碼圖形

4.2.3 以輪廓偵測分割車牌號碼文字

4.2.4 組合擷取車牌號碼文字圖形

4.2.5 去除畸零地

4.3 車牌辨識

4.3.1 文字辨識

4.3.2 單一車牌辨識

4.3.3 整批車牌辨識



CH05 火箭級智慧影像辨識-Yolo



5.1 Yolo是什麼？

5.1.1 Yolo發展歷程

5.1.2 Yolo偵測物體原理概述

5.1.3 Yolo偵測物體種類

5.2 建立Yolo系統

5.2.1 安裝軟體與模組

5.2.2 編譯Yolo

5.2.3 在命令提示字元視窗執行Yolo

5.2.4 以Python程式執行Yolov3

5.3 訓練自訂Yolo偵測模型

5.3.1 標記工具

5.3.2 下載Kaggle口罩資料

5.3.3 轉換PascalVOC為Yolo格式

5.3.4 建立訓練組態資料結構

5.3.5 訓練模型



CH06 使用Colab訓練Yolo模型



6.1 Colab：功能強大的虛擬機器

6.1.1 Colab介紹

6.1.2 Colab建立記事本

6.1.3 Jupyter Notebook基本操作

6.1.4 Colab連接Google Drive雲端硬碟

6.1.5 執行Linux命令

6.2 Colab中訓練Yolo模型

6.2.1 整理口罩資料

6.2.2 進行Yolov3模型訓練

6.2.3 訓練Yolo模型注意事項

6.2.4 訓練其他Yolo模型

6.3 使用自行訓練的Yolo模型

6.3.1 在Colab中使用自行訓練Yolo模型

6.3.2 在Python中使用自行訓練Yolo模型



CH07 最強智慧影像辨識-dlib



7.1 dlib人臉偵測

7.1.1 安裝dlib

7.1.2 簡單人臉偵測

7.1.3 5點特徵人臉偵測

7.1.4 CNN訓練模型人臉偵測

7.1.5 68點特徵人臉偵測

7.1.6 攝影機圖像中畫出點輪廓

7.2 dlib人臉辨識

7.2.1 人臉辨識

7.2.2 dlib人臉登入系統

7.3 dlib其他應用

7.3.1 偵測嘴巴是否張開

7.3.2 偵測打瞌睡

7.3.3 物體追蹤



CH08 dlib自行訓練模型



8.1 dlib訓練自己模型

8.1.1 擷取影片畫面蒐集資料

8.1.2 標記圖片

8.1.3 訓練模型

8.1.4 使用模型

8.1.5 自行訓練模型應用：車流偵測

8.2 dlib訓練進階模型

8.2.1 偵測多物體功能

8.2.2 訓練車牌特徵點模型

8.2.3 使用車牌特徵點模型

8.2.4 車牌特徵點模型應用",https://cf-assets2.tenlong.com.tw/products/images/000/152/448/medium/ACL059700.jpg?1599812248
"人月神話：軟體專案管理之道 (20 週年紀念版)(The Mythical Man-Month: Essays on Software Engineering, Anniversary Edition, 2/e)",Frederick P. Brooks Jr. 著、錢一一 譯,經濟新潮社,9789867889188,2004/3/31,"本書內容


有些書，對於讀者和作者就像是年金一樣，可以年年分紅。《人月神話》就是這樣一本書……年輕的軟體工程師、缺錢的研究生、懶惰的程式設計老手，常問我哪一本電腦書最好：「如果我被困在荒島上，只能帶一本電腦書，應該選哪一本？」這問題很荒謬，但他們堅持要答案。假如你真的被放逐到這樣的小島上，應該陪伴你的是《人月神話》。——Edward Yourdon，軟體界知名顧問與作者



我唯一讀過一遍以上的計算機相關書籍，是Fred Brooks的《人月神話》，事實上我每隔幾年都會重讀其中某些章節。部分原因是這本書文筆很好，而且書中的忠告很有價值，即使是在這本書出版了超過25年之後。當然，現在在很多細節上，還有我們做事的方法都不一樣了，我們的工作更自動化，電腦的「馬力」也更強了，但書中依然有非常多很好的忠告。我非常推崇這本書，這是我唯一覺得你能從中體會到樂趣和思想的計算機科學書籍。——Brian Kernighan，The C Programming Language



作者很少有一本軟體專案管理的書，像《人月神話》這樣深具影響力而且歷久不衰。Fred Brooks以軟體工程上的實例，搭配發人深省的評論，為如何管理大型、複雜的專案，提供了精闢的見解。他曾經擔任過IBM System/360電腦系列，以及與之搭配的OS/360這種大型軟體系統的專案經理，書中文章即取材自他擔任這些職務的實際經驗。在這本書首次出版二十年後，作者對他當初所提出的理念做了一番回顧，並加入了新的思維與建議，出版了這個「20週年紀念版」，獻給對這本書已經熟悉的讀者，以及第一次接觸這本書的人。



20週年紀念版新增的章節包括：

（１）將本書初版中所主張的所有論斷整理出一個簡潔的摘要，包括了原書的主要理念：就人力配置的比例而言，大型軟體專案所面臨的是跟小型專案完全不同的管理問題，這引申出產品的概念整體性是其中的關鍵，而達成概念整體性雖然困難，但卻是可能辦到的；（２）作者對他當初所提出的這些論斷，在經過一個世代之後所做的觀察；（３）轉載他1986年發表於IEEE Computer的經典論文〈沒有銀彈〉；以及（４）他對於他1986年的論斷「十年內不會有任何銀彈」所做的回應。



＊1975年首次出版的《人月神話》是軟體工程方面的經典之作，被譽為軟體領域的「聖經」。近三十年來，這本書能在技術日新月異的計算機領域持續受到歡迎，正是因為它不僅是技術性的書籍，還包括要開發一個大型系統所應注意的管理層面問題，這使得本書涵蓋了軟體和管理的面向，而經得起考驗。如果您從事程式設計，或是和程式設計者共事，或負責軟體專案的管理，如果您是IT產業的經營管理者，您都應該閱讀這本書。


本書目錄


推薦序一 大型複雜系統的創新管理經驗與智慧

推薦序二 技術再怎麼變，人還是人 導讀 軟體人生知何似二十週年紀念版序初版序

第1章 焦油坑

第2章 人月神話

第3章 外科手術團隊

第4章 專制、民主與系統設計

第5章 第二系統效應

第6章 意念的傳達

第7章 巴別塔為什麼失敗？

第8章 預估第9章 地盡其利，物盡其用

第10章 文件假說

第11章 失敗為成功之母

第12章 神兵利器

第13章 化整為零

第14章 釀成大災難

第15章 一體兩面

第16章 沒有銀彈：軟體工程的本質性與附屬性工作

第17章 再論「沒有銀彈」

第18章 《人月神話》的主張：是真是假？

第19章 《人月神話》二十年

後記

註解與參考資料

索引

譯後記",https://cf-assets1.tenlong.com.tw/images/20616/medium/9867889185.jpg
演算法圖鑑：26種演算法 + 7種資料結構，人工智慧、數據分析、邏輯思考的原理和應用 step by step 全圖解,石田保輝(Moriteru Ishida)、宮崎修一 (Shuichi Miyazaki) 著、,臉譜,9789862356319,2017/12/7,"◆日本超人氣演算法學習書

◆逾50萬次下載量，「Apple年度最佳APP」書籍化！

◆隨書附贈獨家贈品「圖形搜尋和排序圖解記憶表」

★★ 讀再多文字解說都看不懂？沒關係，全部畫給你看，一次弄懂演算法到底是什麼！★★

█ 演算法時代來了！

現今我們的世界已離不開演算法，從線上搜尋、社群交友、法院判案、醫學診斷、金融運作、大腦決策到人工智慧的未來，越了解演算法，越可能掌控權力，成為時代的贏家。有些演算法對我們有益、有些有用，有些則可能使我們陷入大麻煩，但我們對這些演算法所知極少。

不管用哪種程式語言編寫程式，演算法都是不可或缺的，不過如果認為只有學電腦的人才要了解演算法，那就太可惜了。演算法其實是一連串解決問題的邏輯步驟，只要熟悉這些步驟和運用方式，每個人都能設計自己的演算法並應用於各種不同領域。學習演算法正是建構嚴謹思維和幫助做出最佳判斷的訓練。

█ 演算法的第一本書，從基礎開始學習！

演算法是用以執行計算或完成作業的程序，可以想像成料理食譜，如果做出某種料理的步驟是食譜，那麼用電腦解出特定問題的步驟就是演算法了。然而，食譜與演算法的決定性差異，在於演算法非常嚴謹。相較於食譜有很多概略的描述，演算法的所有步驟都用數學方式表現，沒有模糊地帶。

本書蒐羅介紹26種基本的演算法和7種資料結構，貨真價實完全圖解。每一個步驟都以圖片和文字詳細說明，拆解具體演算過程，逐步建立邏輯概念，輕鬆進入演算法的世界。

書中解說的演算法範疇包括「排序」、「陣列搜尋」、「圖形搜尋」、「安全性演算法」、「聚類」，以及「網頁排名」等各種廣泛使用的基礎演算法。不用艱澀的專有名詞，步步口語分解，完全沒有概念的人也能漸進學習。

【本書特色】

◎直觀理解，從基礎開始學習，一用就上手的演算法專書！

◎全圖像化step by step，完整拆解制霸AI時代的演算法精髓！

◎詳解演算法的奧妙、運作效率、優缺點，活化思維，做出最佳決斷！

 



    

    作者簡介
    
      石田保輝

住在東京的自由業工程師。2011年京都大學研究所碩士課程結業。曾任職於幾家新創公司，後獨立成為自由業。2016年製作上架以工程師為對象的學習APP「アルゴリズム図鑑」。上架後不到一年即達成全世界50萬次下載，獲選「Apple 2016年度最佳APP」。



宮崎修一

京都大學學術信息媒體中心（学術情報メディアセンター）副教授。1998年九州大學研究所博士課程結業，博士（工學）。1998年起任京都大學研究所情報學研究科助理教授。2002年開始擔任現職。從事演算法和計算複雜性理論的研究，近來鑽研近似演算法和線上演算法。主要著作為《圖論入門：基礎與演算法》（グラフ理論入門 ～基本とアルゴリズム～，2015年，森北出版）。

    

    目錄大綱
    
      前言

關於APP「アルゴリズム図鑑」（演算法圖鑑）

【序章 演算法的基礎】

0-1 何謂演算法？

0-2 運作時間的量測方法

【第1章 資料結構】

1-1 何謂資料結構？

1-2 列表

1-3 陣列

1-4 堆疊

1-5 佇列

1-6 雜湊表

1-7 堆

1-8 二元搜尋樹

【第2章 排序】

2-1 何謂排序？

2-2 泡沫排序

2-3 選擇排序

2-4 插入排序

2-5 堆排序

2-6 合併排序

2-7 快速排序

【第3章 陣列搜尋】

3-1 線性搜尋

3-2 二元搜尋

【第4章 圖形搜尋】

4-1 何謂圖形？

4-2 廣度優先搜尋

4-3 深度優先搜尋

4-4 貝爾曼―福特演算法

4-5 戴克斯特拉演算法

4-6 A*

【第5章 安全性演算法】

5-1 安全性和演算法

5-2 加密的基礎

5-3 雜湊函數

5-4 共通金鑰加密法

5-5 公開金鑰加密法

5-6 混成加密法

5-7 迪菲―赫爾曼金鑰交換

5-8 訊息鑑別碼

5-9 數位簽章

5-10 數位憑證

【第6章 聚類】

6-1 何謂聚類？

6-2 k-means分群法

【第7章 其他的演算法】

7-1 輾轉相除法

7-2 質數判定法

7-3 網頁排名

7-4 河內塔",https://cf-assets2.tenlong.com.tw/products/images/000/111/582/medium/FQ1048.jpg?1525540340
和艦長一起 30 天玩轉 GitLab（iT邦幫忙鐵人賽系列書）,陳正瑋,博碩文化,9789864345311,2020/11/10,"♛ 第一本屬於台灣本土的 GitLab 專書 ♛

還在苦苦尋覓適合團隊的 DevOps 工作流程與工具？

不如儘早擁抱 GitLab Workflow 已為您備齊的開發維運生態系！



入門指引 ☛ 幫助讀者迅速進入 GitLab Workflow 的世界！

經驗分享 ☛ 在規劃 CI/ CD Pipeline 時會遇見哪些重要的關鍵問題？

邁向未來 ☛ GitLab Auto DevOps 會成為 DevOps 界的殺手級產品嗎？

 

內容簡介

本書改編自第 11 屆 iT 邦幫忙鐵人賽，DevOps 組冠軍網路系列文章

 ──《和艦長一起 30 天玩轉 GitLab》── 

除了是一本能引領讀者入門 GitLab 的技術書籍，也是第一本屬於台灣本土的 GitLab 專書；在 2011 年誕生之時，GitLab 還只是自架 Git Service 的一項替代方案，如今 GitLab 已發展出具備完整工作流程及工具鏈的 GitLab Workflow，搖身一變成為肩負團隊協作中心地位的 DevOps 平台。

 

三大重點

❑ 運用 GitLab Workflow 建構團隊的開發協作工作流程

迅速一窺 GitLab Workflow 規劃的 10 個步驟，搭配 GitLab 的豐富功能，迅速為團隊搭建一條從開發至維運的工作流程。

❑ 學習以 GitLab CI 建立 CI/CD Pipeline

只要一個 YAML 檔案，即可編織出多條包含不同工作內容的 CI/CD Pipeline，GitLab CI 是團隊 DevOps / 自動化的重要中心。

❑ GitLab Auto DevOps 之牛刀小試

認識名為 Auto DevOps 的神秘黑魔法，究竟能自動產生 CI/CD Pipeline 的神奇功能，其葫蘆裡賣的是什麼藥。

 

好評推薦



早在 2015 年，那個台灣對於 DevOps 還懞懞懂懂的年代，正瑋與一群熱血份子就率先成立 DevOps Taiwan 社群，對於推廣 DevOps 觀念及技術，有難以磨滅的貢獻。

在這本書中，你並不會看到他一股腦推銷 GitLab 功能，而是不斷為文提醒讀者反思。

有技術，有熱情，由他來詮釋 DevOps，我們是充滿信心的。

 

敏捷魔藥師 ──── 葉秉哲/ William Yeh



    

    作者簡介
    
      陳正瑋

表面上是只會在臉書釋放夫妻閃光文的愛妻家，私底下其實是默默關注新知的技術愛好者。

平時熱衷關注 DevOps 相關新知與技術，期盼未來人人都可以像畢凱艦長一樣用嘴巴叫所有主機做事！

工作之餘亦擔任 GitLab Hero、DevOps Taiwan community 志工，並於 2017 ~ 2019 擔任 DevOpsDays Taipei 其中一位 Organizer。

曾擔任《Effective DevOps 中文版》翻譯，並且於第 11 屆 iT 邦幫忙鐵人賽以《和艦長一起 30 天玩轉 GitLab》 網路系列文章獲得 DevOps 組冠軍。

--

個人網站 ☛ https://chengweichen.com

 

    

    目錄大綱
    
      01 DevOps 及 GitLab 的基本認識

1-1 何謂 DevOps

1-2 GitLab 基本認識

1-3 [延伸題] GitLab CE 和 GitLab EE 該如何選擇？

1-4 [延伸題] 自行架設 GitLab Server 或使用 gitlab.com ？

02 使用 GitLab

2-1 GitLab 的環境需求

2-2 GitLab 的安裝

2-3 Admin Area：維運 GitLab Server 的管理者後台

2-4 GitLab 的 User 與權限控管

2-5 First Project 與 First Commit

2-6 [延伸知識] 神奇的自動安裝包 Omnibus GitLab

03 GitLab Workflow

3-1 GitLab Workflow 簡介

3-2 GitLab flow

3-3 在 GitLab Workflow 運用 GitLab 各項功能

04 GitLab CI

4-1 GitLab Runner 簡介

4-2 架設 GitLab Runner

4-3 建立第一條 CI/CD Pipeline

4-4 CI/CD Pipeline 之 Stage: Build

4-5 CI/CD Pipeline 之 Stage: Deploy

4-6 CI/CD Pipeline 之 Stage: Test

4-7 CI/CD Pipeline 之 Stage: Prod-deploy

4-8 GitLab CI 與 Container

4-9 [狀況題] 當 CI Service 臨時無法提供服務時該怎麼辦？

4-10 [延伸題] 運用 GitLab CI 實現更多自動化動作

05 Auto DevOps 之牛刀小試

5-1 Auto DevOps 簡介

5-2 在沒有 Kubernetes 的狀況下試用 Auto DevOps

5-3 為 Auto DevOps 啟用 Kubernetes

5-4 Auto DevOps 之 Auto Deploy

5-5 Auto DevOps 之 Auto Browser Performance Testing

5-6 Auto DevOps 之 Auto Monitoring

5-7 客製化你的 Auto DevOps Pipeline",https://cf-assets2.tenlong.com.tw/products/images/000/153/887/medium/9789864345311.jpg?1603433542
大話設計模式,程杰,悅知文化,9789866761799,2009/3/15,"<本書特色>

■ 重視過程。完整呈現程式從無到有，以及逐步優化的歷程，讓讀者可以更加容易了解如何寫出好程式。

■ 輕鬆易讀。有別於一般技術書籍的生硬，本書以情境對話的方式，透過日常生活的場景與譬喻，解說設計模式，保證是一本可以讓您從頭讀完的技術書籍。

<內容簡介>

由Erich Gamma、Richard Helm、Ralph Johnson、John M. Vlissides「四人幫」（Gang of Four, GoF）所合著的《Design Patterns》（設計模式），將軟體設計問題，歸納出23種設計模式，影響深遠，已是當代軟體開發人員必讀的聖經之一。但大師之作，對初窺堂奧的人稍嫌晦澀，因而陸續出現了許多「釋義本」。而這本《大話設計模式》，可說是當中最為特別的一本。

作者根據多年軟體開發與教學經驗寫作而成本書，精確掌握初學者常見的疑惑，創新詮釋四人幫的23個設計模式。全書分為三大部分，首先闡述物件導向的意義，以及重要的設計原則；其次，則針對各個設計模式，融合真實世界的範例作深入的講解，藉此讓讀者跟隨書中人物的練習，以提升對模式的理解，進而學習更精鍊的程式設計技巧。最後，以「超級模式大賽」作為總結，將所有的物件導向與模式概念擬人化，以類似選秀的情境，進行各種模式之比較，加強讀者更全面而完整的理解。 


        

    


    目錄大綱
    
      第01章｜程式碼無錯就是優？—簡單工廠模式

第02章｜商場促銷—策略模式

第03章｜拍攝UFO—單一職責原則

第04章｜升學求職兩不誤—開放-封閉原則

第05章｜會修電腦不會修收音機？—依賴倒轉原則

第06章｜穿什麼有這麼重要？—裝飾模式

第07章｜為他人做嫁衣—代理模式

第08章｜南丁格爾依然在人間—工廠方法模式

第09章｜履歷影印—原型模式

第10章｜考題抄錯會做也白搭—範本方法模式

第11章｜無熟人難辦事？—迪米特法則

第12章｜多頭市場股票還會虧錢？—外觀模式

第13章｜好菜每回味不同—建造者模式

第14章｜老闆回來，我不知道—觀察者模式

第15章｜就不能不換嗎？—抽象工廠模式

第16章｜無盡加班何時休—狀態模式

第17章｜在NBA我需要翻譯—轉接器模式

第18章｜如果再回到從前—備忘錄模式

第19章｜分公司=一部門—組合模式

第20章｜想走？可以！先買票—迭代器模式

第21章｜有些類別也需計畫生育—獨體模式

第22章｜手機軟體何時統一—橋接模式

第23章｜烤羊肉串引來的思考—命令模式

第24章｜加薪非要老總批？—職責鏈模式

第25章｜世界需要和平—仲介者模式

第26章｜專案多也別傻傻做—享元模式

第27章｜其實你不懂老闆的心—解譯器模式

第28章｜男人和女人—訪問者模式

第29章｜OOTV杯超級模式大賽—模式總結

附 錄A｜訓練實習生—物件導向基礎

附 錄B｜參考文獻",https://cf-assets1.tenlong.com.tw/images/49583/medium/9789866761799.jpg
"軟體開發人員職涯發展成功手冊 (The Complete Software Developer's Career Guide: How to Learn Programming Languages Quickly, Ace Your Programming Interview, and Land Your Software Developer Dream Job)","John Z. Sonmez 著
          黃詩涵 譯",碁峰資訊,9789865025502,2020/7/9,"讓你快速上手新語言，掌握面試訣竅，一舉拿下夢想中的程式開發工作



暢銷書作家JOHN SONMEZ繼《Soft Skills軟實力：軟體開發人員的生存手冊》最新力作！





‧應該學JavaScript、C#、Python還是C++？本書會教你如何決定最適合自己學習的程式語言，以及如何有效地掌握程式語言。



‧取得電腦科學學位是否有其必要性，或者根本是浪費時間？本書會教你如何在背負最低學貸的情況下，拿到聲譽最高的大學學位。



‧教你如何應付緊迫盯人的控制狂主管，以及如何輔佐主管達成他的目標，讓你成為團隊裡的MVP。



‧雖然面試官告訴你，「在這裡工作，大家都穿得很休閒，尤其是開發團隊，他們都穿拖鞋上班。」所以，你該怎麼穿？本書會教你如何穿出個人的職場魅力。



‧教你一位專業開發人員應該必備哪些技術能力。多數開發人員都缺少一些關鍵能力，為什麼大學沒教，因為他們預期你已經「知道」。



    

    作者簡介
    
      John Sonmez 身兼軟體開發人員與暢銷書作家，他的著作《Soft Skills軟實力：軟體開發人員的生存手冊》長期盤踞在暢銷排行榜上。早在職涯發展初期，John就發現開發人員光只有技術能力不夠，還需要具備溝通和領導力這類的「軟實力」才能獲得成功。他現在是一名高薪、高知名度的開發人員和顧問，每年幫助140萬名以上的程式人員培養個人的獨特能力。

    

    目錄大綱
    
      前言

本書適合我嗎？

1 本書的使用方法

Section 1 起步

2 入門

3 必備的技術能力

4 培養技術能力

5 我應該學習哪個程式語言？

6 學習第一個程式語言

7 上大學

8 程式研習營

9 自學程式

Section 2 上工

10 實習

11 沒有工作經驗時該如何求職？

12 求職技巧

13 打造履歷

14 面試流程

15 第一次談薪水就上手

16 離職

17 中途轉職（後來進入者）

18 從QA 或其他技術職轉任開發工作

19 約聘 V.S. 正職

20 人力派遣業的運作

Section 3 軟體開發的基本概念

21 漫談程式語言

22 網頁開發

23 行動開發

24 後端開發

25 遊戲開發

26 資料庫與營運開發

27 軟體開發方法論

28 淺談測試與品保

29 測試驅動開發與單元測試

30 原始程式碼控制

31 持續整合

32 除錯

33 程式碼維護

34 職務與職稱

35 工作內容的類型

Section 4 職場進行式

36 職場「人氣王」

37 向上管理

38 和QA人員打交道

39 達成工作／生活的平衡

40 團隊合作

41 推銷個人想法

42 穿出個人魅力

43 高分通過績效評估的訣竅

44 應付職場歧視

45 位居領導職位

46 獲得加薪或升遷

47 科技業女性

Section 5 職涯未來式

48 塑造名聲

49 拓展人脈

50 時時更新技術能力

51 通才V.S 專才

52 演說達人

53 打造人氣部落格

54 自由工作者與創業

55 職涯規劃

56 工作穩定性與保障性

57 培訓與證照

58 開發副業專案

59 私房書單

60 結語",https://cf-assets2.tenlong.com.tw/products/images/000/149/865/medium/9789865025502.jpg?1593492545
ASP.NET Core 3.x MVC 跨平台範例實戰演練,聖殿祭司 奚江華,碁峰資訊,9789865025991,2020/9/11,"「DotNet聖殿祭司」以多年程式開發經驗，將業界的專業開發技巧融入於書中！

ASP.NET Core是跨平台的.NET框架，除了跨平台特性，整個框架底層更是高度重新大改寫，導入許多軟工Design Pattern與Principals原則，讓整個框架程式組織、運作與耦合度達到前所未有新高度。而ASP.NET Core中最重要的四大天王：Dependency Injection相依性注入、Configuration組態系統、Hosting與Middleware，更是貫穿整個應用程式設計與執行，可以說掌握此四者便掌握了ASP.NET Core核心精髓。無論新手與老手，本書皆能循序漸進地引導您，一步步深入ASP.NET Core精華的奧義殿堂。



精選章節，讓您Do Less, Get More，短時間內培養出即戰力，本書內容有：

＊ Visual Studio 2019工具安裝、ASP.NET Core MVC開發環境建立與程式部署

＊ 用CLI命令及Visual Studio Code建立ASP.NET Core專案，體驗真正跨平台開發模式

＊ 介紹MVC架構如何三分天下，精解Model、View與Controller三者職責與運作

＊ 以DI相依性注入設計抽象介面與實作，達成IoC控制反轉與鬆散耦合

＊ Configuration組態與Options Pattern選項模式共舞

＊ Model / Scaffolding CRUD / LINQ與Entity Framework Core資料庫存取

＊ View / Partial View / Tag Helpers / HTML Helpers / View Component / Layout功能解析

＊ 說明MVC中如何整合Bootstrap前端開發框架，有效建構RWD響應式網站

＊ 全面掌握Razor語法，提升View頁面的智慧與判斷力

＊ 用開源Chart.js及JSON製作HTML5互動式商業統計圖表

＊ 以jQuery Ajax / Web API / JSON三劍客建立輕量級高效能網站

＊ EF Core程式優先、資料庫存取與Transaction交易完全制霸

＊ 將ASP.NET Core應用程式部署至Microsoft Azure雲端平台

＊ 適用ASP.NET Core 3.1 & 3.0



    

    作者簡介
    
      *碼魔法軟體學院站長 www.codemagic.com.tw

*DotNet開發聖殿Blog版主 blog.sina.com.tw/dotnet/

*曾歷任台灣微軟MSDN, TechED, TechDay研討會講師

*軟體開發技術顧問



歡迎讀者與技術圈的朋友前來交流!

「CodeMagic碼魔法FB」https://www.facebook.com/CodeMagicTw/

    

    目錄大綱
    
      CH1 　.NET Core 與 ASP.NET Core 技術總覽

CH2 　ASP.NET Core MVC 概觀與 VS 2019 開發環境

CH3 　用 CLI 及 Visual Studio Code 建立與管理 .NET Core 專案

CH4 　ASP.NET Core 3.1 框架與基礎服務

CH5 　掌握 Controller / View / Model / Scaffolding / Layout 五大元素

CH6 　Bootstrap 4 網頁美型彩妝師

CH7 　用 Razor、Partial View 及 C# 8.0 語法增強 View 戰鬥力

CH8 　以 Chart.js 及 JSON 繪製 HTML5 Dashboard 商業統計圖表

CH9 　以 Web API、JSON 和 Ajax 建立前後端服務分離架構

CH10　用 Tag Helpers 標籤協助程式設計 Razor View 檢視

CH11　以 HTML Helpers 製作 CRUD 資料庫讀寫電子表單

CH12　用 View Component 建立可重複使用的檢視元件

CH13　以 Dependency Injection 相依性注入達成 IoC 控制反轉

CH14　Configuration 組態及 Options Pattern 選項模式

CH15　Entity Framework Core 資料庫存取與 Transaction 交易

CH16　EF Core - Code First 程式優先、DbContext 與 CLI 命令工具

CH17　將 ASP.NET Core 應用程式部署到 Microsoft Azure 雲端

附錄A　Action 回傳的 Action Result 動作結果類型",https://cf-assets2.tenlong.com.tw/products/images/000/152/153/medium/AEL024000.jpg?1598952871
"計算機概論, 4/e (Forouzan: Foundations of Computer Science, 4/e)","Behrouz A. Forouzan 著
          林仁勇 , 梁廷宇 , 陳怡良 等譯",CS滄海,9789579282543,2019/1/1,"本書序言

本書是根據美國電腦協會(Association of Computing Machinery；ACM)的建議，設計作為計算機基礎課程的一本教科書，它涵蓋了計算機科學的全部領域。

本書的幾個特點不僅使它獨特，而且也讓初學者容易理解內容。

概念　在整本書中，我們努力強調的是概念而不是數學模型。我們相信對於概念的瞭解可增進對於模型的理解。

新增章節與附錄 幾乎所有的章節都已經做了些許的修改。第19、20 章是新增的章節，第四章有部分內容移到兩個新增的附錄 E 和 F。

視覺化導向 當你概要地檢視本書，可看出我們是以非常視覺化的方式來撰寫。本書包含約400 張圖片，雖然圖片會增加書的厚度，但卻可以幫助讀者更容易瞭解文字的意義。

重點 在本書中由方框框起來的文字是重點摘要．是用來協助學生考前複習。

範例和應用 我們會在適當時機使用範例來展示概念及數學模型。

演算法 本書介紹十數種演算法，如此可讓學生熟悉解題及程式寫作技巧。

UML（統一模式語言）在整本書中我們使用 UML 圖表使學生能熟悉此一漸漸成為工業標準的工具。

本書特色

概念的建立 囊括電腦科學領域的重要概念,可加強讀者的理解能力。

豐富的圖片 大量的圖片讓讀者更容易瞭解文字敘述的意義。

新增數種演算法 涵括數十種演算法，讓讀者熟悉解題及程式寫作技巧。

UML 的使用 使用UML圖表使讀者能熟悉此一漸漸成為工 業標準的工具。

重點提示 書中特別提出重點標示，以協助讀者掌握重 要概念。



    

    作者簡介
    
      作者簡介

Behrouz Forouzan has more than 35 years of electronics and computer science experience in industry and academia. His industry experience includes designing electronic systems. After leaving the industry, he joined De Anza College as a professor of computer science. In addition to this text, he has authored and co-authored nine other textbooks including: Computer Science: A Structured Approach Using C, Computer Science: A Structured Approach Using C++, and Data Structures: A Pseudocode Approach with C++. 

 

譯者簡介

林仁勇

學歷:國立中正大學電機工程所博士

專長:行動網路與計算、無線感測網路與隨意網路

梁廷宇

學歷:國立成功大學電機工程所博士

專長:分散式系統、雲端與行動計算

陳怡良

學歷:國立成功大學電機工程所博士

專長:計算機組織與結構、類神經網路、影像處理

張志標

學歷:國立成功大學電機工程所博士

專長:雲端計算、分散式系統、大數據分析、行動裝置程式設計

韓端勇

學歷:國立中興大學應用數學研究所資訊組博士

專長:資訊網路、自然計算、天線設計

    

    目錄大綱
    
      第1章 簡介

第2章 數目系統

第3章 資料儲存

第4章 資料運算

第5章 計算機組織

第6章 電腦網路與網際網路

第7章 作業系統

第8章 演算法

第9章 程式語言

第10章 軟體工程

第11章 資料結構

第12章 抽象資料型態

第13章 檔案結構

第14章 資料庫

第15章 資料壓縮

第16章 資訊安全

第17章 計算理論

第18章 人工智慧

第19章 社群媒體

第20章 社會與道德議題",https://cf-assets2.tenlong.com.tw/products/images/000/140/788/medium/9789579282543.jpg?1569233233
MIS 一定要懂的 82個網路技術知識,"福永勇二
          黃瑋婷",旗標科技,9789863125044,2018/2/14,"從 【TCP/IP、區域網路】基本概念, 到【建構網路系統】、【維護網路安全】重要知識, 

雙頁圖文對照, 讓你一看就懂！

社群軟體、郵件、網站、聊天軟體、線上遊戲、公司區域網路...各種服務我們天天都在使用, 它們共同的橋樑就是網路架構。本書將聚焦在網路這個讓我們既依賴又陌生的角色, 以【雙頁圖文清楚對照】的方式介紹學習網路基礎必備的知識。

具體來說, 要掌握網路知識並且立竿見影, 我們需要認識 TCP/IP 基礎及架構、各種網路設備的功能、網路應用程式的通訊處理方式、避免惡意攻擊的安全機制, 以及實務上建構網路需要的各種知識。

本書專為有心從事 IT 工作的新鮮人、MIS 網管人員、想知道網路技術如何落實到實務工作的自學者所撰寫。一般人覺得網路難懂的原因是網路內部無法直接窺見或是親手碰觸到, 只能停留在想像的境界, 因此本書每個主題都精心設計滿滿一整頁的圖解輔助說明。同時期待各位讀者在閱讀本書時, 能一邊思考如何能將書中提到的每個知識運用在周遭環境, 或是實際去體驗一下書裡所提到的設備, 將實物與理論互相印證, 一定能加速對網路的瞭解！



本書特色 :

‧採雙頁圖文對照, 讓你一看就懂！

‧介紹實務網路規劃流程, 包括設計網路架構、子網路規劃、IP 位址配置到軟硬體的選擇...等

‧各種安全機制的建立, 認識各種惡意攻擊手法、防火牆與 DMZ 的防衛機制..等

‧虛擬化及 SDN 最新網路技術的介紹



    


    目錄大綱
    
      目錄 :

Ch01【基礎知識】

通訊協定 / 網路階層結構 / OSI 參考模型 / LAN 和 WAN / 企業網路的架構 / 點對點通訊 / 電路交換及封包交換 / 二進制與十六進制 

Ch02【TCP/IP 基礎架構】

TCP/IP階層架構 / 網路介面層 / 傳輸層/ 建立高可靠性通訊程序 / 應用層的功能 / IP 位址 / 連接埠 / 公用IP和私有IP / 子網路切割和子網路遮罩 /廣播和群播 / 集線器 / 交換器

Ch03【TCP/IP通訊架構】

可變長度子網路遮罩及 CIDR / MAC位址 / ARP / 網域名稱 / 路由 / 預設閘道 / 靜態路由和動態路由 / 路由協定 / DHCP伺服器 / NAT 和 NAPT

Ch04【網路設備及虛擬化】

乙太網路的功能架構 / L2 交換器 / 無線區域網路 / Port based VLAN 和 Tag based VLAN / VPN / 虛擬化 / 雲端 (Cloud) 架構 / Iaas / PaaS / SaaS

Ch05【網路通訊協定】

HTTP / HTTPS / SSL / TLS / SMTP / POP3 / IMAP4 / FTP / SSH / DNS / NTP / HTTP Proxy / REST API

Ch06【網路安全性】

資安三要素 / 加密及電子證書 / 防範非法入侵 / 惡意程式 / 防火牆與 DMZ / 病毒防護 / 內容過濾 / IDS / IPS / UTM 及新世代防火牆 / 社交工程 / 標靶型攻擊

Ch07【網路建構實務】

設計網路架構 / IP 位址配置 / 選擇硬體與軟體 / Windows的工作群組及網域 / Directory Service (目錄服務) / LAN 配線架設與加工 / 網路監控 / 故障排除",https://cf-assets2.tenlong.com.tw/products/images/000/115/627/medium/9789863125044_bc.jpg?1525540783
"決心打底！Python 深度學習基礎養成
            はじめてのディープラーニング","我妻 幸長 著
          吳嘉芳 譯",旗標科技,9789863126331,2020/7/7,"內容介紹: 

一步步拆解複雜的數學算式, 一筆筆手工算給你看, 硬派學習才能紮穩根基！

「想要學好深度學習, 深入了解底層各種演算法的運算細節絕對有其必要！」相信不少初學者正抱持著相同的想法, 希望好好熟悉 mini-batch 反向傳播、梯度下降等各種深度學習演算法的細節, 但多數的情況卻可能一直碰壁...

原因很簡單, 當你深究神經網路的底層運算, 會發現種種演算法的背後統統都是數學, 學寫程式還行, 滿滿的數學算式卻很容易讓人打退堂鼓, 但是, 真有決心學好基礎千萬不要就此放棄！

其實神經網路底層並沒用到多深的數學, 只需要向量、矩陣等線性代數, 以及偏微分、鏈鎖法則等微分技巧, 掌握這些就綽綽有餘, 但為什麼一堆數學算式總是讓人看了頭昏腦脹？因為數學光用看的是「無感」的！既然無法逃避, 我們就帶你跟數學來個正面對決！當遇到看起來很複雜的數學算式時, 我們會先一步步手工算給你看, 再用 Python + NumPy 算一遍來驗證, 完成這兩個步驟後保證清楚了解各種算式的涵義！

而針對深度學習的精髓－mini-batch 反向傳播運算, 我們也將硬派拆解背後的數學運算, 你將清楚看到 DNN、CNN 神經網路所有「反」著算來進行優化的細節, 這絕對是其他深度學習書籍少見的紮實內容。

若你之前看了一大堆深度學習書籍或網路文章, 始終對數學心存畏懼, 也對底層的運算似懂非懂, 請跟著本書潛心修練, 一定可以紮實養成深度學習的基礎！　 

本書特色: 



Python 基礎紮根 ✕ 正面迎戰數學 ✕ 神經網路底層概念, 該學的一次搞定！

□惡補深度學習的數學基礎, 手工算最清楚！

對數／指數／向量／矩陣／矩陣乘積／微分／偏微分／全微分／鏈鎖法則

□紮實打好 Python 與常用套件的基礎

list／tuple／條件式／迴圈／函式／類別／reshape／transpose／NumPy／Matplotlib／scikit-learn

□零框架！硬派拆解深度學習演算法背後的數學運算

DNN 反向傳播／CNN 反向傳播／mini-batch SGD／Dropout／AdaGrad

□詳細解說, 流暢翻譯

本書由【施威銘研究室】監修, 書中針對原書進行大量補充, 並適當添加註解, 幫助讀者更加理解內容！ 



    

    作者簡介
    
      我妻幸長 Yukinaga Azuma (@yuky_az)

R&D 工程師 / 技術書作者 / AI、程式設計講師

物理學博士, 畢業於東北大學理學研究所, 從事 AI 教育與研發工作。開發了 VR、遊戲、社群相關應用程式, 同時為 Udemy 線上平台 AI 課程講師, 學生累積近 4 萬人, 另著有「世界第一的 iPhone App 開發」、「數學的教科書 - 機器學習、深度學習必要的基礎知識」等書。

https://sai-lab.co.jp

https://www.udemy.com/user/wo-qi-xing-chang/

    

    目錄大綱
    
      目錄: 

  Ch01 深度學習基礎養成指引

Ch02 深度學習需要的 Python 語法與運算套件

2-1 安裝 Python 環境

2-2 Python 的基本語法

2-2-1 資料型別 (Data Type) 與變數 (Variable)

2-2-2 算符 (Operator)

2-2-3 list 型別

2-2-4 tuple 型別

2-2-5 dict 型別

2-2-6 if 判斷式

2-2-7 for 迴圈

2-2-8 while 迴圈

2-2-9 串列生成式 (list Comprehensions)

2-2-10 函式 (Function)

2-2-11 變數的有效範圍 (Scope Rule)

2-2-12 類別 (Class)

2-2-13 繼承 (Inheritance)

2-3 NumPy 快速上手

2-3-1 匯入 NumPy 套件

2-3-2 NumPy 的陣列

2-3-3 其他建立陣列的方式

2-3-4 再以圖解看陣列的軸 (axis)

2-3-5 利用 reshape() 改變陣列形狀

2-3-6 陣列間對應元素 (element-wise) 的運算

2-3-7 擴張 (Broadcasting)

2-3-8 陣列元素的存取

2-3-9 切片 (Slicing)

2-3-10 陣列轉置 (transpose)

2-3-11 其他常用的 NumPy 函式

2-4 Matplotlib 快速上手

2-4-1 將一堆資料點繪成圖表 

2-4-2 裝飾圖表內容

2-4-3 繪製散佈圖

2-4-4 將數值以圖像呈現

Ch03 深度學習需要的數學知識

3-1 數學符號與運算式

3-1-1 利用 sigma (Σ) 表示總和

3-1-2 自然底數

3-1-3 自然對數

3-2 線性代數

3-2-1 純量 (Scalar)

3-2-2 向量 (Vector)

3-2-3 矩陣 (Matrix)

3-2-4 張量 (Tensor)

3-2-5 純量與矩陣乘積 

3-2-6 對應元素 (element wise) 的乘積

3-2-7 矩陣乘積 (Matrix multiplication)

3-2-8 矩陣轉置 (Transpose)

3-3 微分

3-3-1 常微分

3-3-2 微分的公式

3-3-3 鏈鎖法則 (Chain Rule)

3-3-4 偏微分

3-3-5 全微分

3-3-6 多變數的鏈鎖法則

Ch04 神經網路的基礎

4-1 認識人類神經網路

4-2 單一神經元的人工神經網路

4-3 多層神經網路架構

4-4 再從實作認識「激活函數」

4-4-1 階梯函數 (Step function)

4-4-2 Sigmoid 函數

4-4-3 tanh 函數

4-4-4 ReLU 函數

4-4-5 Leaky ReLU

4-4-6 恆等函數

4-4-7 Softmax 函數

4-5 神經網路最廣泛的應用：迴歸與分類

4-6 實戰演練 (一)：實作「單一神經元 + 單一輸出」的神經網路

4-6-1 單一神經元的架構

4-6-2 程式內容說明

4-6-3 實驗：看看權重與偏值對輸出值的影響

4-7 實戰演練 (二)：實作「多層 + 單一輸出」的神經網路

4-7-1 神經網路的架構

4-7-2 程式內容說明

4-7-3 權重與偏值對輸出的影響

4-8 實戰演練 (三)：實作「多層 + 多個輸出」的神經網路

4-8-1 神經網路的架構

4-8-2 程式內容說明

4-8-3 利用輸出結果替輸入資料做分類

Ch05 訓練神經網路

5-1 訓練神經網路的基本概念

5-2 用損失函數 (Loss Function) 計算誤差

5-2-1 均方誤差 (Mean-Square Error, MSE)

5-2-2 交叉熵 (Cross Entropy)

5-3 認識修正權重的方法 - 梯度下降法 (Gradient Descent) 

5-3-1 梯度下降法的基本概念

5-3-2 利用「梯度下降法」找到誤差值最低點所對應的權重

5-4 計算梯度 (Gradient), 了解權重參數對誤差的影響

5-4-1 用「反向傳播法 (Back Propagation)」計算各層間單一權重的梯度

5-4-2 四組單一權重梯度算式的微分推導

5-4-3 梯度下降法的數學算式

5-5 訓練前的資料準備工作

5-5-1 將資料切割成「訓練資料集」與「測試資料集」

5-5-2 分批訓練的概念

5-6 將分批訓練概念引入梯度計算

5-6-1 將輸入資料、預測結果轉換成矩陣形式

5-6-2 將輸入矩陣傳入神經網路, 進行前向傳播運算

5-6-3 權重矩陣的梯度計算 (反向傳播運算)

5-7 實作演練：模擬數據讓神經網路訓練

Ch06 深度學習實戰演練

6-1 訓練神經網路常遇到的問題

6-1-1 陷入局部最小值 (Local minimum)

6-1-2 過度配適 (Overfitting) 的問題

6-1-3 梯度消失 (Vanishing gradient)

6-2 避免過度配適的方法

6-2-1 找出最佳的層數與神經元數

6-2-2 減少訓練週期

6-2-3 資料擴張 (Data Augmentation)

6-2-4 常規化 (Regularization)

6-2-5 丟棄法 (Dropout)

6-3 避免發生局部最小值的方法

6-3-1 Momentum 優化演算法

6-3-2 AdaGrad 優化演算法

6-3-3 RMSProp 優化演算法

6-3-4 Adam 優化演算法

6-4 實作演練 (一)：使用神經網路替鳶尾花分類

6-4-1 範例概要說明

6-4-2 載入資料集並做前置處理

6-4-3 設定神經網路各初始值

6-4-4 用 Python 類別定義各層的運算

6-4-5 將前向傳播、反向傳播、修正權重、計算誤差等運算撰寫成函式

6-4-6 開始訓練神經網路

6-4-7 執行程式, 看看訓練成果

6-5 實作演練 (二)：解決訓練成效不佳的問題

6-5-1 導入 Adagrad 演算法

6-5-2 導入丟棄法 (Dropout)

6-5-3 導入 Adagrad + Dropout

6-5-4 驗證 4 種組合的訓練成果

6-5-5 實際拿神經網路模型預測全新資料

Ch07 卷積神經網路 (CNN)

7-1 卷積神經網路 (CNN) 的基本概念

7-1-1 為什麼使用 CNN？

7-1-2 卷積神經網路 (CNN) 的基本架構

7-1-3 卷積層 (Convolution Layer) 的運算

7-1-4 池化層 (Pooling Layer) 的運算

7-1-5 池化層 → 密集層 (Dense Layer) 的運算

7-1-6 填補 (Padding) 與步長 (Stride) 的概念

7-1-7 訓練 CNN 網路的方法

7-1-8 整理本節使用的變數

7-2 認識 im2col 與 col2im 演算法

7-3 卷積層的程式實作

7-4 池化層的程式實作

7-5 密集層的程式實作

7-6 實戰演練 (一)：實作卷積神經網路

7-6-1 載入手寫數字資料集

7-6-2 CNN 網路的結構

7-6-3 開始訓練 CNN 神經網路

7-6-4 執行程式, 看看訓練成果

7-6-5 實際拿 CNN 模型預測資料

7-6-6 回頭檢視卷積層的功用

7-7 實戰演練 (二)：實作層數更多的 CNN 網路

Ch08 RNN、LSTM、GRU、GAN、VAE、DRL、DQN...各種深度學習技術

8-1 循環神經網路 (RNN)

8-1-1 RNN 的基本概要

8-1-2 LSTM (長短期記憶神經網路)

8-1-3 LSTM 的改良版 - GRU

8-2 生成模型與 GAN、VAE 

8-2-1 GAN

8-2-2 VAE

8-3 深層強化學習 (Deep reinforcement learning)

8-3-1 強化式學習

8-3-2 深層強化學習",https://cf-assets2.tenlong.com.tw/products/images/000/149/337/medium/9789863126331_bc.jpg?1592273812
下世代超前佈署：用 Zabbix 全面監管巨量伺服器,吳兆松,深智數位,9789865501471,2020/8/20,"◎ 第一本Zabbix完整說明手冊

◎ 完全掌握Zabbix監控系統的核心技術

本書重點

► 系統當機不用怕被老闆罵，造成損失前就修復好，只有Zabbix做得到

► 全面監控硬體、作業系統、網路、軟體、應用程式，一條龍式掌握整

  個平台的運作情況，全面提升網站健康度

本書特色

► 以Zabbix 4為基礎，對Zabbix的各項功能進行詳細而深入的講解

► 從Zabbix的架構、安裝、監控設定、自訂監控項、警告設定、警告

  指令稿等開始了解，進而學習Zabbix的觸發器使用以及內部原始程

  式實現進行，如IPMI、SNMP、JMX、ODBC等。

► 對自動化功能也有深入說明，如分散式監控系統，大量自訂指令稿的

  監控案例，還有自動發現(LLD)。

► 最後說明Zabbix效能最佳化，底層實現機制，效能瓶頸解析，以及如何

  解決，講解Zabbix API擴充Zabbix。

► 訂製RPM套件，原始程式建置安裝，使用Elasticsearch作為後端資料儲

  存，使用SaltStack自動化部署和設定，還有完整的實例建置企業級分散

式監控系統。

適合讀者群 想了解、學習和規劃建置監控系統人員、想更深入了解Zabbix

監控系統的讀者。



    

    作者簡介
    
      吳兆松

資深系統工程師，熟悉IT運維領域，對伺服器運行及DevOps平台的構思、設計、開發等都具有豐富的經驗，尤其是IT監控系統領域，是早期使用和研究Zabbix的先驅。

曾為多個大型企業建構Zabbix監控平台體系，從業經歷豐富，對系統營運、程式開發及產品都有深入的實務經驗，在業界有「監控專家」的美譽。

    

    目錄大綱
    
      目錄

前言

01 開篇—監控系統簡介

1.1 監控系統的功能概述

1.2 監控系統的實現原理 

1.3 監控系統的開放原始碼產品

02 Zabbix 簡介

2.1 Zabbix 的使用者群眾都有誰

2.2 使用Zabbix 需要具備什麼基礎

2.3 Zabbix 是一個什麼樣的產品

2.4 為何選擇Zabbix 作為監控系統

2.5 該選用Zabbix 的哪個版本

2.6 Zabbix 的架構是什麼樣的 

2.7 Zabbix 的功能特性都有哪些

03 安裝與部署

3.1 安裝環境概述

3.2 Zabbix-Server 伺服器端的安裝

3.3 Zabbix-Agent 用戶端的安裝

3.4 SNMP 監控設定

3.5 在Windows 中安裝Zabbix-Agent 

3.6 在其他平台安裝Zabbix-Agent

3.7 Zabbix-Get 的使用 

3.8 Zabbix 相關術語（指令）

3.9 Zabbix-Server 對資料的儲存

3.10 高可用性和安全 

3.11 Zabbix 資料庫備份

3.12 升級Zabbix

04 快速設定和使用

4.1 設定流程

4.2 增加主機組

4.3 增加範本

4.4 增加主機

4.5 設定圖形

4.6 設定大螢幕

4.7 設定幻燈片

4.8 設定地圖

4.9 使用IT 服務

4.10 使用報表

4.11 資產管理

4.12 圖形共用

4.13 全域搜索

4.14 最新資料

4.15 故障

4.16 資料的匯入/ 匯出

4.17 使用者許可權

4.18 偵錯模式

4.19 與LDAP 對接

4.20 維護模式

4.21 故障確認

4.22 批次更新

05 處理監控指標資料

5.1 增加新的監控項

5.2 監控指標的自訂

5.3 Zabbix 內建的監控方式

5.4 監控項指標資料的前置處理

5.5 設定巨集

5.6 設定值對映

06 精通警告設定

6.1 警告流程

6.2 警告觸發器的設定

6.3 警告處理的設定

6.4 郵件警告設定

6.5 自訂指令稿警告

6.6 郵件警告指令稿的設定

6.7 警告升級機制

6.8 觸發器標籤設定

6.9 手動關閉警告

6.10 如何取消警告發送

6.11 如何刪除故障資訊

6.12 警告聚合

6.13 警告設定故障排除

07 深入警告觸發器

7.1 Trigger 函數的意義

7.2 Trigger 函數的分類

7.3 Trigger 函數—比較與尋找 

7.4 Trigger 函數—計算

7.5 Trigger 函數—時間

7.6 Trigger 函數—記錄檔

7.7 Trigger 函數—字串比對

7.8 Trigger 函數—趨勢預測

7.9 參考資料

08 剖析監控方式

8.1 Zabbix 支援的監控方式

8.2 Zabbix 監控方式的邏輯

8.3 Zabbix-Agent 的工作模式

8.4 Zabbix-Trapper（zabbix_sender）監控方式

8.5 SNMP 監控方式 

8.6 SNMPTraps 監控方式

8.7 IPMI 監控方式本章歸納

8.8 JMX 監控方式

8.8.1 JMX 在Zabbix 中的執行流程

8.8.2 JMX 監控的安裝和設定

8.8.3 安裝Zabbix-Java-Gateway

8.8.4 設定Zabbix-Java-Gateway

8.8.5 檢視Zabbix-Java-Gateway記錄檔

8.8.6 監控Java 應用程式的方法

8.8.7 開啟Tomcat 的JMX

8.8.8 取得JMX 資料

8.8.9 JMX 資料的LLD 

8.8.10 JMX 監控的核心技術實現

8.9 HTTP agent 監控方式

8.10 Web 監控方式

8.11 Dependent item 監控方式

8.12 ODBC 監控方式

8.13 其他監控方式

8.14 指令執行的監控方式

09 分散式監控與自動化

9.1 Zabbix-Proxy 分散式監控

9.2 監控的自動化功能

9.3 網路自動發現

9.4 主動方式的自動註冊功能

9.5 監控項自動發現功能

9.6 使用自動化工具SaltStack 批次部署Zabbix

10 監控功能案例

10.1 監控TCP 連接狀態

10.2 監控Nginx

10.3 監控PHP-FPM

10.4 監控MySQL 

10.5 監控實體伺服器 

10.6 監控實體機磁碟

10.7 監控Cisco 路由器

10.8 監控VMware

10.9 監控RabbitMQ

10.10 監控Elasticsearch

10.11 監控Kafka 

10.12 監控Redis

10.13 監控Oracle 資料庫

10.14 監控WebLogic

10.15 監控SQL Server 

10.16 監控HTTPS 憑證過期

11 監控資料視覺化

11.1 Grafana

11.2 Graphtrees 

11.3 Google 瀏覽器警告外掛程式

11.4 Mac App 的使用 

11.5 手機App 的使用

11.6 匯出即時監控資料

11.7 網路拓撲自動發現

11.8 監控資料視覺化的意義 

11.9 歸納

12 監控效能最佳化

12.1 Zabbix 效能最佳化概述 

12.2 Zabbix 效能最佳化依據

12.3 Zabbix 設定檔參數的最佳化

12.4 Zabbix 架構的最佳化

12.5 Item 的工作模式及Trigger 的最佳化

12.6 Zabbix 資料庫的最佳化 

12.7 Zabbix 執行硬體的最佳化 

12.8 Zabbix 壓力測試

12.9 Zabbix-Server 內部實現原理 

12.10 Zabbix-Server 設定參數

12.11 Zabbix-Server 效能最佳化歸納

13 Zabbix API 的使用

13.1 Zabbix API 簡介

13.2 JSON-RPC

13.3 Zabbix API 的使用流程

13.4 協力廠商Zabbix API 模組

13.5 撰寫命令列管理工具zbx-tool 

14 安裝與部署的擴充

14.1 原始程式安裝Zabbix-Server 

14.2 原始程式安裝Zabbix-Agent

14.3 訂製安裝套件

14.4 使用RPMbuild 訂製RPM 套件

14.5 使用Elasticsearch 作為資料庫

15 分散式監控專案實作

15.1 監控系統專案概述

15.2 監控系統專案的背景

15.3 監控系統專案的步驟

15.4 監控系統專案的規劃—工作計畫

15.5 監控系統專案的啟動—需求研究

15.6 監控系統架構的設計—架構設計圖 

15.7 監控系統專案的推進—軟硬體環境設定

15.8 監控系統專案的實施—安裝與部署 

15.9 監控功能的實現—設定與訂製開發

15.10 監控系統與其他系統的整合 

15.11 監控系統專案的歸納

16 後記—深入監控系統

16.1 監控系統的使用場景 

16.2 如何設定監控指標

16.3 如何度量設定警告指標

16.4 如何發送警告與處理警告風暴

16.5 警告輪班機制

16.6 DevOps 與監控

16.7 ITIL 與監控",https://cf-assets2.tenlong.com.tw/products/images/000/151/170/medium/DM2036_%E7%AB%8B%E9%AB%94%E6%9B%B8.jpg?1596697582
"CODE COMPLETE：軟體開發實務指南, 2/e (中文版) (Code Complete: A Practical Handbook of Software Construction, 2/e)","Steve McConnell
          金戈、湯凌、陳碩、張菲 譯，裘宗燕 審校，博碩文化 編譯",博碩文化,9789864341313,2018/11/28,"【名家名著 17】

所有軟體工程師必備的聖經，沒有之一！





「即便第一版的《Code Complete》已經納入我的軟體工程經典收藏裡，但第二版卻更是青出於藍。」

——Ralph Johnson，伊利諾大學，《Design Patterns》合著者



「無論你是新手還是熟手，《Code Complete》第二版都能幫助你透徹瞭解程式設計。」

——Jeffrey Richter（www.wintellect.com），《Applied Microsoft® .NET Framework Programming》作者



「關於軟體建構的絕佳指南，也是作為程式設計師的必讀著作。」

——Diomidis Spinellis，《Code Reading: The Open Source Perspective》作者



「Steve McConnell是少數真正在知識傳授上做到深入淺出的人士。」

——John Vlissides，IBM研究院，《Design Patterns》合著者



「Steve McConnell比任何人都更通曉軟體建構的奧義，我們很幸運能夠藉由這部原創著作，汲取他的豐富經驗與真知灼見。」

——Alan Cooper，Visual Basic之父，《About Face》作者



「《Code Complete》是有關程式設計風格和軟體建構的絕佳指引書籍。」

——Martin Fowler,《Refactoring》



「Steve McConnell 的《Code Complete》……為程式設計師提供了邁向智慧的捷徑……他的書讀起來富有趣味，要知道他可是有真實的親身經驗的。」

——Jon Bentley,《Programming Pearls, 2nd ed.》



「這無疑是我看過的軟體建構方面最好的書籍。每位開發人員都應該手持一本，並且每年都從頭到尾讀一遍。九年來我每年都讀這本書，仍能從中獲得新的收穫。」

——John Robbins,《Debugging Applications for Microsoft .NET and Microsoft Windows》



「當今的軟體必須是健全、有彈性的，而安全的程式碼始於規範的建構。第 1 版出版後的十年裡，沒有出現比《Code Complete》更權威的書。」

——Michael Howard,《Writing Secure Code》



「《Code Complete》廣泛剖析程式設計工藝的各種實戰話題。McConnell 的著作涵蓋軟體架構、coding 標準、測試、整合及軟體工藝本質等內容。」

——Grady Booch,《Object Solutions》



「對軟體開發者而言，終極的百科全書就是Steve McConnell 的《Code Complete》。這本長達 912 頁厚的書籍誠如副標所說的，是一本實用指南。它意圖縮短業界大師與教授（例如 Yourdon 和Pressman）的知識與一般商業實踐之間的距離，幫助讀者用較短的時間、碰觸較少的麻煩去編寫更好的程式……每個開發者都應該擁有這本書，本書的風格和內容是極為實用的。」

——Chris Loosley,《High-Performance Client/Server》



「Steve McConnell 的開創性書籍《Code Complete》是詳述軟體開發方面最易懂的一本書……」

——Erik Bethke,《Game Development and Production》



「《Code Complete》是個寶藏，收藏了設計與生產優質軟體方面的有用資訊與建議。」

——John Dempster,《The Laboratory Computer: A Practical Guide for Physiologists and Neuroscientists》



「如果你有意增進程式設計技術，就該有一本Steve McConnell 的《Code Complete》。」

——Jean J. Labrosse,《Embedded Systems Building Blocks: Complete and Ready-To-Use Modules in C》



「Steve McConnell 寫出了一本獨立於電腦環境的軟體開發最好的書籍。」

——Kenneth Rosen,《Unix: The Complete Reference》



「每個時代你都會遇到一本書，提供你獲得經驗的捷徑，節省數年痛苦的學習時間……千言萬語都無法說明這本書有多好。標題《Code Complete》尚不足以表達出該作品的全部智慧與內涵。」

——Jeff Duntemann,《PC Techniques》



「Microsoft Press 出版了我認為是軟體建構方面很好的書，每位軟體開發人員的書架上都該有這本書。」

——Warren Keuffel,《Software Development》



「每個程式設計師都該閱讀這本傑出的書籍。」

——T.L. (Frank) Pappas,《Computer》



「假如你期望成為專業的程式設計師，這將是你投資 35 美元能獲得的最好回報。不要只是看看這個書評，趕快衝去買一本回來！McConnell 聲稱此書意在拉近業界大師的知識與一般商業實踐之間的距離……令人稱奇的是，他做到了！」

——Richard Mateosian,《IEEE Micro》



「《Code Complete》應該被軟體開發領域中的每個人閱讀。」

——Tommy Usher,《C User's Journal》



「我不遺餘力地為Steve McConnell 的《Code Complete》拍手叫好……這本書取代了 API 參考手冊，成為陪我工作的親密夥伴。」

——Jim Kyle,《Windows Tech Journal》



「這本編纂精良的巨著有望成為軟體實現的實踐方面最好的專書。」

——Tommy Usher,《Embedded Systems Programming》



「這是我所讀過的軟體工程方面最好的書籍。」

——Edward Kenworth,《.Exe Magazine》



「這本書必將成為一部經典、所有開發人員及管理者必備的讀物。」

——Peter Wright,《Program Now》



廣獲好評的程式設計實務指南，在過去十幾年間，由Steve McConnell所原創的《Code Complete》已幫助許許多多的開發者，開發出更完善的軟體。本書包含最新的更新與修訂內容，以及數百項全新的程式碼範例，充分闡明軟體建構的科學與藝術。McConnell匯集了來自學術研究與商業實務的各項知識，歸納出最有效的工作技巧、以及最關鍵的實踐原則，轉化成一系列清晰且務實的指引。無論你的知識水準、工作環境或專案規模如何，本書都能提昇你的智慧，幫助你建構出最佳品質的程式碼。



發掘各項歷久彌新的技巧與策略，使你能夠：

建構出低複雜性，但卻有高可塑性的設計。

組織健全的協作式開發並從中獲益。

應用防禦性程式設計技巧，消弭發生錯誤的機會。

洞察合適的時機，妥善地對程式碼進行重構或演變。

依專案規模選擇合適的實踐方法。

快速且有效地進行除錯。

及早且正確地解決重大的建構問題。

從一而終保持高品質的軟體專案。



    

    作者簡介
    
      Steve McConnell



Steve McConnell 是 Construx Software 公司的首席軟體工程師，負責監督控管軟體工程的實踐。他是軟體工程知識體（SWEBOK）專案建構知識領域的主管。Steve 曾為微軟、波音及西雅圖地區的其他一些公司工作。Steve McConnell 是以下書籍的作者：1996年的《Rapid Development》、1998年《Software Project Survival Guide 》和2004年的《Professional Software Development》。他的優秀著作兩度獲得當年的《Software Development》雜誌的優秀震撼大獎（Jolt Excellence Award）。



Steve 還曾是 SPC 評估專業版的開發領袖，軟體開發生產力大獎（Software Development Productivity award）的獲得者。1998 年《Software Development》的讀者推選 Steve McConnell 為軟體行業最有影響力的三人之一，與 Bill Gates、Linus Torvalds 齊名。Steve 從 Whitman 大學獲得學士學位，並從西雅圖大學獲軟體工程碩士學位。現居住在華盛頓的 Bellevue。



如果您對此書有任何疑問或評論，請與 Steve 聯繫，他的電子郵件信箱是stevemcc@construx.com，也可透過 www.stevemcconnell.com 與他聯繫。

    

    目錄大綱
    
      第一部分 打好基礎



第 1 章 歡迎進入軟體建構的世界

1.1 什麼是軟體建構

1.2 軟體建構為何如此重要

1.3 如何閱讀本書

要點



第 2 章 藉由隱喻進一步理解軟體開發

2.1 隱喻的重要性

2.2 如何使用軟體隱喻

2.3 常見的軟體隱喻

更多資源

要點



第 3 章 三思而後行：前期的前置作業

3.1 前置作業的重要性

3.2 確認你所從事的軟體類型

3.3 問題定義的先決條件

3.4 需求的先決條件

3.5 架構的先決條件

3.6 花費在前期的前置作業上的時間長度

更多資源

要點



第 4 章 關鍵的「建構」決策

4.1 程式語言的選擇

4.2 程式設計約定

4.3 你在技術浪潮中的位置

4.4 選擇主要的建構實踐方法

要點



第二部分 建立高品質的程式碼



第 5 章 軟體建構中的設計

5.1 設計中的挑戰

5.2 關鍵的設計概念

5.3 設計構造塊：啟發式方法

5.4 設計實踐

5.5 對流行的設計方法的評論

更多資源

要點



第 6 章 工作類別

6.1 類別的基礎：抽象資料類型（ADTs）

6.2 良好的類別介面

6.3 有關設計和實作的議題

6.4 建立類別的原因

6.5 與具體程式語言相關的問題

6.6 超越類別：套件（Package）

更多資源

要點



第 7 章 高品質的子程式

7.1 建立子程式的正當理由

7.2 在子程式層上設計

7.3 好的子程式名稱

7.4 子程式可以寫多長

7.5 如何使用子程式參數

7.6 使用函式時要特別考慮的問題

7.7 Macro 子程式和行內子程式

要點



第 8 章 防禦性程式設計

8.1 保護程式免遭非法輸入資料的破壞

8.2 斷言

8.3 錯誤處理技術

8.4 例外（Exceptions）

8.5 隔離程式，使之包容由錯誤造成的損害

8.6 輔助除錯的程式碼

8.7 決定在產品程式碼中該保留多少防禦性程式碼

8.8 對防禦性程式設計採取防禦的姿態

更多資源

要點



第 9 章 虛擬碼程式設計流程

9.1 建立類別和子程式的步驟概述

9.2 如何寫好程序的虛擬碼

9.3 透過PPP 建立子程式

9.4 PPP 的替代方案

要點



第三部分 變數



第 10 章 使用變數的一般事項

10.1 資料認知

10.2 輕鬆掌握變數定義

10.3 變數初始化原則

10.4 作用範圍

10.5 持續性

10.6 綁定時間

10.7 資料類型和控制結構之間的關係

10.8 為變數指定單一用途

要點



第 11 章 變數名稱的力量

11.1 選擇好變數名稱的注意事項

11.2 為特定型別的資料命名

11.3 命名規則的力量

11.4 非正式命名規則

11.5 標準前綴

11.6 建立具備可讀性的短名稱

11.7 應該避免的名稱

要點



第 12 章 基本資料型別

12.1 數值概論

12.2 整數

12.3 浮點數

12.4 字元和字串

12.5 布林變數

12.6 列舉型別

12.7 具名常數

12.8 陣列

12.9 建立你自己的型別（型別別名）

要點



第 13 章 不常見的資料型別

13.1 結構體

13.2 指標

13.3 全域資料

更多資源

要點



第四部分 語句



第 14 章 組織直線碼

14.1 必須有明確順序的述句

14.2 順序無關的述句

要點



第 15 章 使用條件述句

15.1 if 述句

15.2 case 述句

要點



第 16 章 控制迴圈

16.1 選擇迴圈的種類

16.2 迴圈控制

16.3 輕鬆建立迴圈——由內而外

16.4 迴圈和陣列的關係

要點



第 17 章 不常見的控制結構

17.1 子程式中的多處返回

17.2 遞迴

17.3 goto

17.4 針對不常見控制結構的觀點

更多資源

要點



第 18 章 表格驅動法

18.1 表格驅動法使用總則

18.2 直接存取表

18.3 索引存取表

18.4 階梯存取表

18.5 表格查詢的其他範例

要點



第 19 章 一般控制問題

19.1 布林運算式

19.2 複合述句（述句區塊）

19.3 空述句

19.4 馴服危險的深層巢狀結構

19.5 程式設計基礎：結構化程式設計

19.6 控制結構與複雜度

要點



第五部分 程式碼改善



第 20 章 軟體品質概述

20.1 軟體品質的特性

20.2 改善軟體品質的技術

20.3 不同品質保障技術的相對效能

20.4 什麼時候進行品質保證工作

20.5 軟體品質的一般原則

更多資源

要點



第 21 章 協同建構

21.1 協同開發實踐概要

21.2 結對程式設計

21.3 正式檢查

21.4 其他類型的協同開發實作

21.5 協同建構技術的比較

更多資源

要點



第 22 章 開發者測試

22.1 開發者測試在軟體品質中的角色

22.2 開發者測試的推薦方法

22.3 測試技巧錦囊

22.4 典型錯誤

22.5 測試支援工具

22.6 改善測試程序

22.7 保留測試記錄

更多資源

要點



第 23 章 除錯

23.1 除錯概述

23.2 尋找缺陷

23.3 修正缺陷

23.4 除錯中的心理因素

23.5 除錯工具——明顯的和不那麼明顯的

更多資源

要點



第 24 章 重構

24.1 軟體演化的類型

24.2 重構簡介

24.3 特定的重構

24.4 安全的重構

24.5 重構策略

更多資源

要點



第 25 章 程式碼調整策略

25.1 效能概述

25.2 程式碼調整簡介

25.3 脂肪和糖漿

25.4 效能測量

25.5 反覆調整

25.6 程式碼調整方法總結

更多資源

要點



第 26 章 程式碼調整技術

26.1 邏輯

26.2 迴圈

26.3 資料變換

26.4 運算式

26.5 子程式

26.6 用低階語言重寫程式碼

26.7 變得越多，事情反而越沒變

更多資源

要點



第六部分 系統考慮



第 27 章 程式規模對建構的影響

27.1 交流和規模

27.2 專案規模的範圍

27.3 專案規模對錯誤的影響

27.4 專案規模對生產率的影響

27.5 專案規模對開發活動的影響

更多資源

要點



第 28 章 管理建構

28.1 鼓勵撰寫良好的程式

28.2 設定管理

28.3 評估建構進度表

28.4 度量

28.5 把程式設計師當人看

28.6 管理你的管理者

28.7 有關管理建構的額外資源

要點



第 29 章 整合

29.1 整合方式的重要性

29.2 整合頻率——階段式整合還是增量整合

29.3 增量整合的策略

29.4 每日組建與冒煙測試

更多資源

要點



第 30 章 程式設計工具

30.1 設計工具

30.2 原始碼工具

30.3 可執行碼工具

30.4 工具導向的環境

30.5 打造你自己的程式設計工具

30.6 工具夢想世界

更多資源

要點



第七部分 軟體工藝



第 31 章 佈局與風格

31.1 佈局基本原則

31.2 佈局技術

31.3 佈局風格

31.4 控制結構的佈局

31.5 單條述句的佈局

31.6 註解的佈局

31.7 子程式的布局

31.8 類別的佈局

更多資源

要點



第 32 章 自我文件化程式碼

32.1 外部文件

32.2 程式設計風格的文件

32.3 註解或不註解

32.4 高效率註解之關鍵

32.5 註解技術

32.6 IEEE 標準

更多資源

要點



第 33 章 個人性格

33.1 個人性格是否和本書話題無關

33.2 聰明和謙虛

33.3 求知慾

33.4 誠實

33.5 交流與合作

33.6 創造力和紀律

33.7 懶惰

33.8 不如你想像中那樣起作用的性格因素

33.9 習慣

更多資源

要點



第 34 章 軟體工藝的話題

34.1 征服複雜性

34.2 挑選開發程序

34.3 首先為人寫程式，其次才是為機器

34.4 用程式去創造適合的語言環境，而不是遷就它

34.5 藉助規範集中注意力

34.6 根據問題領域的術語做程式設計

34.7 注意落石

34.8 迭代，反反覆覆，一次又一次

34.9 汝當分離軟體與信仰

要點



第 35 章 何處尋找更多資訊

35.1 關於軟體建構的資訊

35.2 建構以外的話題

35.3 期刊

35.4 軟體開發者的閱讀計劃

35.5 參加專業組織



參考文獻",https://cf-assets2.tenlong.com.tw/products/images/000/127/011/medium/PG21401_BIG.jpg?1542262703
物件導向設計模式－可再利用物件導向軟體之要素 (精裝典藏版) (Design Patterns: Elements of Reusable Object-Oriented Software),"Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides 著、葉秉哲 譯",天瓏,9789572054116,2001/12/31,"本書探討的是在物件導向軟體設計領域裡，用以描述對特定問題精簡優雅的解決方案：

設計模式。主要分兩個部份，

第一、它展示patterns在建構複雜系統時可以扮演什麼腳色模式；

第二、它提供非常實用的參考資料讓軟體開發者可以將這些精良的patterns運用在自己的專案上。作者以豐富的物件導向軟體設計經驗，將頻繁出現卻又非常精簡的解決方案彙編成型錄，因此書籍一出版立刻成為物件導向圈內人手一冊的聖經。

 


        

    


    目錄大綱
    
      本書內容

譯者序

作者序

前言

導讀

補充：關於此譯本

第一章、緒論

1.1 設計模式是什麼？

1.2 Smalltalk MVC 的設計模式

1.3 設計模式的描述

1.4 設計模式型錄

1.5 型錄的組織方式

1.6 設計模式如何解決設計問題

1.7 如何挑選設計模式

1.8 如何使用設計模式

第二章、個案研究：文書處理器設計

2.1 設計問題

2.2 文件結構

2.3 排版

2.4 美化使用者介面

2.5 支援多種操作介面標準

2.6 支援多種視窗系統

2.7用戶操作

2.8 拼字檢查與斷字

2.9 總結

設計模式型錄

第三章、生成模式 (Creational Patterns)

Abstract Factory

Builder

Factory Method

Prototype

Singleton

生成模式總結討論

第四章、結構模式 (Structural Patterns)

Adapter

Bridge

Composite

Decorator

Facade

Flyweight

Proxy

結構模式總結討論

第五章、行為模式 (Behavioral Patterns)

Chain of Responsibility

Command

Interpreter

Iterator

Mediator

Memento

Observer

State

Strategy

Template Medthod

Visitor

行為模式總結討論

第六章、結論

6.1 設計模式有什麼用

6.2 簡史

6.3 社群

6.4 邀請函

6.5 臨別贈言

附錄A、名詞解釋

附錄B、圖例介紹

B.1 類別圖 (Class Diagram)

B.2 物件圖 (Object Diagram)

B.3 互動圖 (Interaction Diagram)

附錄C、基礎類別

C.1 List

C.2 Iterator

C.3 ListIterator

C.4 Point

C.5 Rect

參考文獻

索引",https://cf-assets1.tenlong.com.tw/images/85778/medium/9572054112.jpg
Deep learning 深度學習必讀 - Keras 大神帶你用 Python 實作 (Deep Learning with Python),Keras 原創者 François Chollet 著,旗標科技,9789863125501,2019/5/31,"用 Python + Keras 實踐深度學習, 解開神經網路模型的黑盒子

在高階函式庫 Keras 的幫助下, 用 6 行程式就可寫一隻深度學習神經網路的程式, 建構深度學習模型就像玩樂高積木一樣, 可以輕易將各種神經網路組合在一起, 而每一種模型可用來解決不同的問題。

正宗 Keras 大神著作，正體中文版重磅登場

本書為 Keras 之父 François Chollet 親自撰寫, 詳細解說神經網路每一層的架構與原理, 並不時提供個人經驗累積而成的真知灼見, 帶領讀者熟悉機器學習的標準工作流程, 並了解如何使用 Keras 解決從電腦視覺到自然語言處理的各種實務問題, 例如圖像分類、時間序列預測、情感分析、圖像和文字資料的生成...等, 最有效率實作出可用的模型, 絕對是機器學習、資料科學、人工智慧從業人員必讀的經典之作。

最後引述 François Chollet 在書中所說：深度學習並不難, 只是又多又雜, 這本書就是希望能夠提供更多人瞭解深度學習的第一步。這不表示我們會把複雜的內容簡化 (因為這些都是深度學習所必需的), 而是希望各位不要擔心深度學習太過於困難而裹足不前。希望你能夠發現本書的價值, 並跟著本書逐步建構屬於你的人工智慧應用程式。 

本書特色: 

  本書由施威銘研究室 監修, 書中會針對原書所提及的背景知識做補充, 所有程式均經過實際執行測試, 並適當添加註解與程式碼, 幫助讀者能更加理解程式內容。

■ CNN – 用於電腦視覺的深度學習

■ RNN – 用於文字與序列資料的深度學習

■ LSTM、VAE 與 DeepDream

■ 神經風格轉換

■ GAN 生成對抗神經網路

■ 機器學習與神經網路

■ 張量 Tensor 與張量運算

■ Keras API、callbacks 與 TensorBoard

■ 超參數優化與模型集成

本書相關資源網頁如下, 請登錄下載範例程式及 Bonus：

http://www.flag.com.tw/bk/t/f9379

也歡迎加入本書社群, 和技術者們直接對話！

「從做中學 Learning by doing」粉絲專頁 

(https://www.facebook.com/flaglearningbydoing/)



    

    作者簡介
    
      作者 François Chollet 為 Keras 之父, 是 Keras 函式庫的創始者, 也是 TensorFlow 機器學習框架的貢獻者, 目前任職於 Google 深度學習小組, 公認為全球 AI 人工智慧領域的權威之一, 也經常在社群媒體針對 AI 或機器學習技術發表前瞻性的看法。

作者同時也是一名知名學者, 主要研究方向為電腦視覺和機器學習在正規推理中的應用, 其論文時常發表於該領域的主要學術會議上, 包括 電腦視覺和模式識別會議(Conference on Computer Vision and Pattern Recognition, CVPR)、神經資訊處理系統研討會(Conference and Workshop on Neural Information Processing System, NIPS)、國際學習表示法會議(International Conference on Learning Representations, ICLR)，與其他重要學術會議上。

    

    目錄大綱
    
      目錄 : 

Ch01何謂深度學習？

1-1 人工智慧、機器學習與深度學習

1-2 機器學習的基礎技術：深度學習之前

1-3 為什麼是深度學習？為什麼是現在？

Ch02 開始之前：了解神經網路的數學概念

2-1 初探神經網路

2-2 神經網路的資料表示法：張量 Tensor

2-3 神經網路的工具：張量運算

2-4 神經網路的引擎：以梯度為基礎的最佳化

2-5 回顧我們的第一個例子

Ch03 開始使用神經網路

3-1 神經網路的核心元件

3-2 Keras 簡介

3-3 建立一個深度學習的作業環境

3-4 二元分類範例：將電影評論分類為正評或負評

3-5 分類數位新聞專欄：多類別分類範例

3-6 預測房價：迴歸範例

Ch04 機器學習的基礎知識

4-1 機器學習的四個分支

4-2 評估機器學習模型

4-3 資料預處理 (preprocessing)、特徵工程 (feature engineering) 和特徵學習 (feature learning)

4-4 過度配適 (overfitting) 和低度配適 (underfitting)

4-5 機器學習的通用工作流程

Ch05 深度學習實務電腦視覺的深度學習

5-1 卷積神經網路 CNN

5-2 以少量資料集從頭訓練一個卷積神經網路

5-3 使用預先訓練的卷積神經網路

5-4 視覺化呈現卷積神經網路學習的內容

Ch06 應用於文字資料與序列資料的深度學習 

6-1 文字資料處理

6-2 了解循環神經網路

6-3 循環神經網路的進階使用方法

6-4 使用卷積神經網路進行序列資料處理

Ch07 進階深度學習的最佳實作方式

7-1 超越序列式 (Sequential) 模型：Keras 函數式 API

7-2 使用 Keras 回呼 (callbacks) 和 TensorBoard 檢查和監控深度學習模型

7-3 模型成效最大化

Ch08 生成式深度學習

8-1 使用 LSTM 產生文字資料

8-2 DeepDream

8-3 神經風格轉換 

8-4 使用變分自編碼器 Variational Autoencoders 生成圖像

8-5 生成對抗神經網路簡介 Generative Adversarial Network

Ch09 結語

9-1 回顧關鍵概念

9-2 深度學習的侷限性

9-3 深度學習的未來

9-4 在快速發展的領域保持最新狀態 

9-5 後語

附錄 A 在 Ubuntu 上安裝 Keras 及相關套件

附錄 B 在 EC2 GPU 虛擬主機上使用 Jupyter Notebook 開發機器學習專案",https://cf-assets2.tenlong.com.tw/products/images/000/134/708/medium/9789863125501_bc.jpg?1558317873
"精通 Python｜運用簡單的套件進行現代運算, 2/e (Introducing Python: Modern Computing in Simple Packages, 2/e)","Bill Lubanovic 著
          賴屹民 譯",歐萊禮,9789865024864,2020/6/2,"「本書是Bill Lubanovic的傑作，先為你紮下深厚的程式設計基礎，再教你用大型的Python工具箱來解決實際的問題，你絕對可以在這本書學會如何運用Python解決問題。」

—Loïc Pefferkorn

開放原始碼系統工程師



「本書以風趣、對話式、寓教於樂的風格介紹海量的Python程式語言與第三方程式包。」

—Nathan Stocks

Agile Perception



《精通 Python》是一本容易理解也很有趣的書，非常適合程式設計初學者以及剛要開始學習這個語言的讀者。本書的第二版將引領從基礎開始，循序進階到較複雜且多樣的主題，在教學過程中使用食譜風格的程式配方來說明Python 3的概念。最後透過每章結束的練習題來驗證所學到的技巧。



讀完本書，你將紮下深厚的Python基礎，包括測試、除錯、重複使用程式碼的最佳做法以及其他開發技巧。這個版本除了加入新的範例程式和習題之外，也會教你如何使用Python撰寫商業、藝術、科學應用程式，以及運用Python工具和開放原始碼套件。



‧學習簡單的資料類型、基本數學運算與文字操作

‧以Python的內建資料結構處理資料

‧探索Python程式碼結構，包括函式的使用

‧使用模組與套件編寫大型Python程式

‧深入討論物件、類別與其他物件導向功能

‧檢視一般檔案、關聯式資料庫與NoSQL的儲存機制

‧使用Python建構web用戶端、伺服器、API與服務

‧管理系統工作，例如程式、程序與執行緒

‧瞭解並行處理與網路程式設計的基礎


        

    

    作者簡介
    
      Bill Lubanovic 從1977年就開始用Unix開發軟體，1981年開發GUI，1990年開發資料庫，1993年開發web。目前他正在開發醫學影像web資料庫服務。

    

    目錄大綱
    
      第一部分 Python基礎

第一章 初嘗py

第二章 資料：型態、值、變數與名稱

第三章 數字

第四章 用if來選擇

第五章 文字字串

第六章 用while與for來執行迴圈

第七章 tuple與串列

第八章 字典與集合

第九章 函式

第十章 喔喔：物件與類別

第十一章 模組、程式包與好東西

第二部分 Python實務

第十二章 玩轉資料

第十三章 日曆與時鐘

第十四章 檔案與目錄

第十五章 時間中的資料：程序與並行處理

第十六章 盒子資料：持久保存

第十七章 空間中的資料：網路

第十八章 網路，解開

第十九章 成為Python鐵粉

第二十章 Py藝術

第二十一章 Py上工

第二十二章 Py科學

附錄A 硬體和軟體入門

附錄B 安裝Python 3

附錄C 全然不同的東西：非同步

附錄D 習題解答

附錄E 備忘錄",https://cf-assets2.tenlong.com.tw/products/images/000/148/534/medium/A615.jpg?1590373507
"The Pragmatic Programmer 20週年紀念版 (The Pragmatic Programmer, 20th Anniversary Edition)","David Thomas, Andrew Hunt 著
          張靜雯 譯",碁峰資訊,9789865022754,2020/4/30,"邁向大師之路



“我生命中最最要的書之一。”

—OBIE FERNANDEZ,《The Rails Way》作者



“20年前，第一版的《The Pragmatic Programmer》完全改變了我的職業軌跡。這個新版本會對您產生一樣的效用。”

—MIKE COHN,《Succeeding with Agile》《Agile Estimating and Planning》《User Stories Applied》等書籍作者



“...書中充滿了實用的建議，有技術的，也有專業的，這些建議將在未來幾年提升您和您的專案。”

—ANDREA GOULET, CEO, Corgibytes; Founder, LegacyCode.Rocks



“...神來兩筆是有可能的，這本書就是明證。”

—VM (VICKY) BRASSEUR, Director of Open Source Strategy, Juniper Networks



《The Pragmatic Programmer》是少數隨著歲月增長值得一讀再讀的經典書籍，無論您是新手還是實戰豐富的從業者，每次閱讀這本書，您都會得到新的領悟。



Dave Thomas和Andy Hunt於1999年撰寫了這本深具影響力的書，目的是為了幫他們的客戶建立更好的軟體，以及重新發現寫程式的樂趣。這些經驗幫助了一整世代的程式設計師檢視軟體開發的本質，不受限於任何特定語言、framework和方法論，其中的實用主義哲學催生了幾百本書、視訊教學、有聲讀物以及數千個職涯與成功故事。



二十年後的現今，本書再次檢視現代程式設計師的真義。主題範圍從個人責任與職涯探索，到能保持程式碼彈性與易於使用重用的架構技術。



閱讀本書，你將會學到：

‧對抗「軟體凋零」(software rot)

‧持續學習

‧避免重複知識的陷阱

‧寫出有彈性、動態和適應力強的程式碼

‧善用基本工具的威力

‧避免靠巧合寫程式

‧學習什麼是真正的需求

‧防範安全漏洞

‧解決並行程式碼真正的問題

‧建立由務實程式設計師組成的團隊

‧你的工作成果與職涯責任

‧進行嚴格、有效的測試，包括以屬性為基礎的測試

‧實作實用的新手工具集

‧取悅您的使用者



本書以一系列各自獨立的章節寫成，書中充滿了經驗和新奇的軼事、深思熟慮的例子和有趣的類比，這本書展示了軟體開發不同面向的最佳方法和主要陷阱。無論你是新手，有經驗的程式設計師，或是軟體專案經理，請每天使用您從本書所學到的，您會很快看到個人生產力、準確性和工作滿意度的提升。除了技能學習，也培養出習慣和態度，這些都是奠定職業生涯成長的基石。



您將會成為一位成功的程式設計師。



    


    目錄大綱
    
      Chapter 1 務實的哲學

1 這是您的人生

2 貓吃了我的原始碼

3 軟體亂度

4 石頭湯與煮青蛙

5 夠好的軟體

6 您的知識資產

7 溝通！

Chapter 2 務實的方法

8 優秀設計的精髓

9 DRY—重複的罪惡

10 正交性

11 可逆性

12 曳光彈

13 原型和便利貼

14 領域語言

15 評估

Chapter 3 基本工具

16 純文字的威力

17 shell

18 功能強大的編輯器

19 版本控制

20 除錯

21 操縱文字

22 工程日誌

Chapter 4 務實的偏執

23 合約式設計

24 死程式不說謊

25 assertion式程式設計

26 如何平衡資源

27 不要跑得比您的車頭燈還快

Chapter 5 彎曲或弄壞

28 去耦合

29 行走江湖

30 轉換式程式設計

31 繼承稅

32 設定

Chapter 6 並行

33 打破時間耦合

34 不要共用狀態

35 參與者與程序

36 黑板

Chapter 7 當您寫程式時

37 聆聽您的蜥蜴腦

38 靠巧合寫程式

39 演算法速度

40 重構

41 測試對程式碼的意義

42 以屬性為基礎的測試

43 待在安全的地方

44 命名

Chapter 8 專案啟動前

45 需求坑

46 解開不可能的謎題

47 一起工作

48 敏捷的本質

Chapter 9 務實的專案

49 務實的團隊

50 不要切開椰子

51 務實的上手工具

52 取悅您的客戶

53 傲慢與偏見

後記

Appendix A 參考書目

Appendix B 練習題參考解答

Appendix C 提示卡

索引",https://cf-assets2.tenlong.com.tw/products/images/000/147/406/medium/9789865022754.jpg?1587523932
"CCNA 網路認證先修班 (Understanding Cisco Networking Technologies, Volume 1: Exam 200-301 (CCNA Certification))","Todd Lammle 著
          林慶德、陳宇芬 譯",旗標科技,9789863126270,2020/6/18,"網管人至少要取得 CCNA 認證，來證明個人身價非凡

不論您是正要踏進變化快速的 IT 領域，或是想強化網路技術而深入這個領域，本書都能協助您建立互連網路的知識並應用到真實的網路環境中。本書詳述 TCP/IP 與 DoD 模型、並示範多個子網路切割方法，接著深入 Cisco 互連網路作業系統的操作及 Cisco 裝置管理，並教您 IP 遶送及廣域網路的拓樸、連線類型及除錯方法。

本書聚焦在網路技術的基礎，因此沒有涵蓋百分之百的 CCNA 認證範圍，不過若能徹底瞭解本書所教的網路知識和技能，除了幫您奠定全面且紮實的網管能力，還能銜接進階應用，讓您自信滿滿地參加認證。 

本書特色: 

  ★由 Cisco 頂尖專家親自解說，幫您奠定紮實的網路核心技術基礎！

★美國亞馬遜網路書店 Cisco Certification Guides 類最暢銷書籍！

★讀者公認 CCNA 認證考試必備參考書！

Cisco 網路權威 Todd Lammle 的暢銷學習手冊，以系統化的方式整理最精華的 CCNA 網路知識與技術，能幫初學者打穩網路的基礎，不論是考證照、轉職或想增進網管知識都能有所收穫。


        

    

    作者簡介
    
      Todd Lammle 是 Cisco 認證與互連網路方面的專家，不但取得 Cisco 各類別不同層級的認證，也具有 30 年以上的 LAN、WAN 和大型企業的無線網路經驗，曾任職於 Xerox、Hughes Aircraft、Texaco、AAA、Cisco 與 Toshiba 等知名大企業。

Todd Lammle 也是網路技術作家，出版的書籍超過 60 本以上，目前在美國科羅拉多經營一家國際性的顧問和教育訓練機構。您可以透過他的網站 www.lammle.com 取得更豐富的認證資源，包括：額外補充的教材、影片、練習題和實作題。

    

    目錄大綱
    
      Ch01　網路互連

Ch02　乙太網路與資料封裝

Ch03　TCP/IP 簡介

Ch04　子網路切割

Ch05　IP 位址的檢修

Ch06　Cisco 的互連網路作業系統 (IOS)

Ch07　管理 Cisco 互連網路

Ch08　管理 Cisco 裝置

Ch09　IP 遶送

Ch10　廣域網路",https://cf-assets2.tenlong.com.tw/products/images/000/148/859/medium/9789863126270_bc.jpg?1590979172
"C 語言教學手冊, 4/e",洪維恩,旗標科技,9789574424849,2007/4/19,"本書特色


 

□ 循序漸進從頭打好 C 語言基礎

□ 豐富範例展示語法最容易理解

□ 精心設計圖解掌握關鍵最速效

□ 每章附有自我評量教學最適用

□ 資料結構基本觀念導入最易懂 


本書內容


C語言幾乎是每一個專業的程式設計師在初學入門時所遇到的第一個功課，在程式設計師心裡佔有很高的地位。在某些以程序導向的處理中，C可以提供一個完整的結構化程式設計，同時又可兼顧後續程式維護時的便利性，更是訓練邏輯思考的一個有用的工具。



本書是由知名技術作家洪維恩老師精心撰寫，透過豐富的範例與精心設計的圖解，讓讀者能有效的理解C語言重要觀念，打下穩固的基礎。同時每章末均附有豐富的習題，不但可提供給自修者自我評量，也非常適合學校教學。除此之外，本書也導入資料結構的基本觀念，可作為資料結構課程的先修教材。另外，本書也包含有物件導向與C++程式語言的簡介，可以銜接未來物件導向或是C++程式語言設計的課程。

 


光碟內容


範例程式

習題選答

Dev C++視窗完整版軟體",https://cf-assets1.tenlong.com.tw/images/36587/medium/9789574424849.gif
再強一點：用 Go語言完成六個大型專案,陳劍煜、徐新華,深智數位,9789865501501,2020/9/20,"◎ 實作六個最強大的Go專案

◎ 想用Go不怕無用武之地

本書特色

► 最齊全Go工具

► HTTP網路程式剖所

► 完整RPC應用

► 高速WebSocket應用

► 處理程序快取加速    

► PProf、GODEBUG高級應用

本書重點

全書共分為6章，針對Go語言中較為常用的命令列應用、HTTP應用、RPC應用、WebSocket 應用、處理程序內快取、Go語言中的大殺器（分析工具）進行詳細的介紹，並開發一系列小的適合程式師日常使用的工具。

其中前5章是Go語言開發中最常見的專案類型。對專案開發、細節分析、執行時期分析等核心內容進行較為深入的剖析，提供相對完整的專案實作經驗。有了幾個大型專案的磨鍊之後，撰寫出專業等級的系統再也不是難事。

適合讀者群 有一定Go語言基礎的讀者，想要進行Go相關專案實作、希望熟悉Go常用分析工具的開發人員。



    

    作者簡介
    
      陳劍煜(網名：煎魚) 

微信公眾號「腦子進煎魚了」作者，「Go夜讀」 SIG小組成員，對Go語言有豐富的經驗。在社群連載過一系列Go語言相關的技術文章，其中「跟煎魚學Go」系列廣受歡迎。

徐新華(網名：polaris )

Go語言中文網站長，擔任北京一家創業公司CTO。2011年取得北京大學碩士，先後在開心網、奇虎360工作。一直從事服務端相關工作，有著豐富的經驗。在Go1.0正式發佈時開始接觸，並運用於工作中，致力推廣Go語言，建構Go語言中文社區。

    

    目錄大綱
    
      目錄

前言

01命令列應用：打造屬於自己的工具集

1.1 工具之旅 

1.2 單字格式轉換 

1.3 便捷的時間工具

1.4 SQL 敘述到結構的轉換 

02 HTTP 應用：寫一個完整的部落格後端

2.1 部落格之旅

2.2 專案設計

2.3 公共元件

2.4 介面文件

2.5 介面驗證

2.6 模組開發：標籤管理

2.7 上傳圖片和檔案服務

2.8 API 存取控制

2.9 常見應用中介軟體

2.10 鏈路追蹤

2.11 應用設定問題

2.12 編譯器應用 

2.13 優雅重新啟動和停止

2.14 思考

03 RPC 應用：啟動你的RPC 服務

3.1 gRPC 和Protobuf 

3.2 Protobuf 的使用

3.3 gRPC 的使用 

3.4 執行一個gRPC 服務

3.5 gRPC 服務間的內調 

3.6 提供HTTP 介面 

3.7 介面文件

3.8 gRPC 攔截器 

3.9 metadata 和RPC 自訂認證 

3.10 鏈路追蹤

3.11 gRPC 服務註冊和發現 

3.12 實現自訂的protoc 外掛程式

3.13 對gRPC 介面進行版本管理

3.14 常見問題討論

04 WebSocket 應用：聊天室

4.1 以TCP 為基礎的聊天室

4.2 認識WebSocket

4.3 聊天室需求分析和設計

4.4 專案結構組織和基礎程式架構

4.5 核心流程

4.6 廣播器

4.7 非核心功 能

4.8 關鍵性能分析和最佳化

4.9 Nginx 部署 

4.10 歸納

05 處理程序內快取

5.1 快取簡介

5.2 快取淘汰演算法

5.3 處理程序內快取

5.4 快取的效能和最佳化想法

5.5 高性能快取函數庫—BigCache

5.6 處理程序內快取的最佳化版

06 Go 語言中的大殺器

6.1 Go 大殺器PProf 之效能剖析（上） 

6.2 Go 大殺器PProf 之效能剖析（下）

6.3 Go 大殺器之追蹤剖析trace

6.4 用GODEBUG 看排程追蹤

6.5 用GODEBUG 看GC

6.6 Go 處理程序診斷工具gops

6.7 公開和發佈度量指標

6.8 逃逸分析

A Go modules 的入門和使用

A.1 Go modules 簡介

A.2 GOPATH 簡介

A.3 Go modules 的基本使用 

A.4 Go modules 下的go get 行為

A.5 Go modules 的go run/build 行為

A.6 Go modules 的匯入路徑說明 

A.7 Go modules 的語義化版本控制

A.8 Go modules 的最小版本選擇

A.9 go.sum 檔案要不要提交

A.10 go list 的作用是什麼

A.11 小結

B goroutine 與panic、recover 的小問題

B.1 思考問題

B.2 如何解決 

B.3 為什麼要先defer 才能recover

B.4 recover 是萬能的嗎

B.5 小結

C Go 在容器執行時期要注意的細節

C.1 問題描述

C.2 會造成什麼後果

C.3 解決方法

D 讓Go「恐慌」的十種方法",https://cf-assets2.tenlong.com.tw/products/images/000/152/377/medium/DM2040_3D.jpg?1599474998
"CCNA 網路認證教戰手冊 EXAM 200-301 (CCNA Certification Study Guide, Volume 2：Exam 200-301)","Todd Lammle 著
          林慶德、陳宇芬 譯",旗標科技,9789863126362,2020/9/15,"CCNA 認證考試必讀！



Cisco 網路權威 Todd Lammle 的暢銷學習手冊，能讓您充滿自信地參加 CCNA EXAM 200-301 認證考試。本書完全符合 CCNA 考試的最新變動，除了基本的網路觀念解說，還搭配動手練習、實驗以及「真實情境」的說明，逐步幫您奠定網路相關基礎。不論是考證照、

轉職或是想增進網管知識都能有所收穫。



EXAM 200-301 認證，考試範圍變廣，即使參加過坊間的補習課程，仍然不容易記住所有細節，本書是您最佳的參考手冊，請一定要徹底理解以下主題才能從容應試！



．路由器、交換器與控制器

．下一代防火牆 (NGFW)

．Cisco 無線網路架構

．IP 的連接與路由器

．DHCP、DNS 與 NAT

．存取控制與第二層安全

．安全性政策與協定

．遠端存取與 VPN

．自動化與可程式化

本書特色:

★100% 涵蓋最新 CCNA EXAM 200-301 認證考試範圍

★Cisco 頂尖專家 Todd Lammle 親自解說，幫您奠定紮實的網路核心基礎

★美國亞馬遜網路書店 Cisco Certification Guides 最暢銷書籍

★讀者公認 CCNA 認證考試必備參考書

★Sybex 互動式線上學習和試題庫 (英文介面)

與此書相輔相成的「互動式線上學習」提供了試題庫和研讀工具，可幫助您提高首次參加就能通過認證的機會。請連上 http://www.wiley.com/go/sybextestprep 網頁，依網頁說明註冊成為會員，即可瀏覽本書的試題庫：

．【測驗範例】：提供書中的所有題目，包括「評鑑測試」，以及每章結束之前的習題。此外，還有兩份測驗題。您可以透過這些題目來測試自己對內容的了解程度。

．【電子閃卡】：這些閃卡是可讓您快速學到知識的小工具，您可以將它當作額外的簡單練習題。

．【專有名詞 PDF 檔】：方便您以搜尋的方式查閱書中的專有名詞！


        

    

    作者簡介
    
      Todd Lammle 是 Cisco 認證與互連網路方面的專家，不但取得 Cisco 各類別不同層級的認證，也具有 30 年以上的 LAN、WAN 和大型企業的無線網路經驗，曾任職於 Xerox、Hughes Aircraft、Texaco、AAA、Cisco 與 Toshiba 等知名大企業。

Todd Lammle 也是網路技術作家，出版的書籍超過 60 本以上，目前在美國科羅拉多經營一家國際性的顧問和教育訓練機構。您可以透過他的網站 www.lammle.com 取得更豐富的認證資源，包括：額外補充的教材、影片、練習題和實作題。

    

    目錄大綱
    
      簡介

評鑑測試

Ch01　網路基礎知識

Ch02　TCP/IP

Ch03　子網路切割

Ch04　IP 位址的檢修

Ch05　IP 遶送

Ch06　開放式最短路徑優先協定 (OSPF)

Ch07　第 2 層交換

Ch08　虛擬區域網路 (VLAN) 與跨 VLAN 遶送

Ch09　高等交換技術

Ch10　存取清單

Ch11　網路位址轉換 (NAT)

Ch12　IP 服務

Ch13　安全性

Ch14　第一中繼站冗餘協定 (FHRP)

Ch15　虛擬私密網路 (VPN)

Ch16　服務品質 (QoS)

Ch17　網際網路協定第 6 版 (IPv6)

Ch18　IP、IPv6 和 VLAN 的故障檢測

Ch19　無線技術

Ch20　設定無線技術

Ch21　虛擬化、自動化、可程式化

Ch22　SDN 控制器

Ch23　組態管理

附錄　習題解答",https://cf-assets2.tenlong.com.tw/products/images/000/151/901/medium/9789863126362_bc.jpg?1598496662
Visual C# 網路程式設計 － 線上遊戲實作,張逸中、李美億,博碩文化,9789864345045,2020/7/31,"用C#輕鬆寫出網路連線程式！

精選14個線上遊戲程式範例，就是要讓你愈學愈有趣！



初學網路程式設計就靠這一本！包你輕鬆跨過網路程式設計的艱澀門檻

✪本書精選14個簡單、有趣主題範例，以實作線上遊戲程式的方式，帶領讀者循序漸進地學會撰寫UDP、TCP及HTTP等三種網路通訊模式的連線程式。

✪每個章節都是範例示範，每行程式碼都有詳細說明與註解，符合教學節奏，學校教學與初學自修均適宜，可快速上手。

✪範例有貼近實務運用的聊天室，塗鴉牆，及富有趣味的遊戲、五子棋、撲克牌等、讓學習不無聊！



【本書特色】

➤範例引導：實用有趣的遊戲範例引發讀者的學習興趣

➤情境設計：內容解說詳盡，由簡而繁逐步完成操作示範

➤知識補給：提供進階概念或實用設計技巧，可為延伸學習



 



    

    作者簡介
    
      張逸中

現職：逸中軟體設計有限公司執行長

學歷：國立台灣大學海洋學博士

經歷：台灣首府大學設計學院院長

　　　成功大學水工試驗所研究員

專長：程式設計

　　　網路程式設計

　　　影像辨識技術

　　　聲納資料處理

李美億

現職：逸中軟體設計有限公司研發專案經理

學歷：致遠管理學院網路通訊系學士

經歷：中央大學地球科學系(所)研究助理

　　　逸中軟體設計有限公司軟體工程師

專長：VB,C#,HTML5,Java,C++程式設計

　　　網路資料庫程式設計

　　　影像辨識演算法研發

    

    目錄大綱
    
      第01章 UDP即時通程式

1-1 UDP通訊模式簡介

1-2 執行緒的問題

1-3 網路傳訊必須是「純」資料

1-4 網路程式需要匯入的額外命名空間

1-5 表單介面的設計

1-6 監聽副程序

1-7 啟動監聽

1-8 關閉執行緒的程式

1-9 發送訊息的程式

1-10 單機測試網路程式的方式

1-11 找到自己的IP

第02章 UDP塗鴉牆

2-1 網路互動繪圖的通訊流程

2-2 表單設計

2-3 沿用的程式

2-4 使用Shape物件繪圖的準備

2-5 使用MouseDown與MouseMove繪圖

2-6 使用MouseUp傳出繪圖訊息

2-7 接收資料自動繪圖的程式

2-8 同時傳遞筆色的程式

第03章 UDP聊天室

3-1 UDP 聊天室通訊流程

3-2 有關網路廣播的意義

3-3 表單建置

3-4 沿用的程式碼

3-5 公用變數宣告與表單載入

3-6 發送訊息的程式

3-7 上線或離線按鍵

3-8 選擇訊息發送對象或廣播的機制

3-9 發送自訂訊息的程式

3-10 監聽與回應的Listen副程序

第04章 UDP Server–單一通訊埠的通訊

4-1 UDP Server通訊模式簡介

4-2 伺服端程式

4-3 客戶端程式

第05章 TCP連線與離線

5-1 TCP與UDP的差異

5-2 伺服端與客戶端

5-3 TCP 連線與離線的通訊流程

5-4 伺服端程式操作介面

5-5 匯入命名空間

5-6 公用變數宣告

5-7 啟動伺服器

5-8 監聽客戶訊息的程式

5-9 關閉伺服器的程式

5-10 客戶端的表單設計

5-11 匯入命名空間與公用變數

5-12 登入伺服器與傳訊副程序

5-13 客戶離線的程式

第06章 TCP 聊天室

6-1 TCP 聊天室的通訊流程

6-2 伺服端程式啟動部分的擴建

6-3 建立線上名單的副程序OnlineList

6-4 發送私密訊息的副程序SendTo

6-5 廣播訊息的副程序SendAll

6-6 監聽與回應訊息的Listen副程序

6-7 客戶端表單設計

6-8 匯入命名空間與公用變數宣告

6-9 登入伺服器的程式

6-10 發送訊息的相關程式

6-11 監聽與回應訊息的程式Listen

6-12 關閉視窗與連線的程式

第07章 線上五子棋

7-1 TCP 線上五子棋的通訊流程

7-2 表單的設計

7-3 棋盤的繪製

7-4 單機下棋的動作

7-5 檢查五子連線的副程序

7-6 傳送訊息Send 與監聽回應訊息的Listen副程序

7-7 與伺服器連線相關的程式

7-8 將訊息傳給對手的程式

第08章 線上射擊遊戲

8-1 TCP線上射擊遊戲通訊流程

8-2 表單設計

8-3 移動戰機的程式

8-4 產生砲彈的程式

8-5 控制砲彈跑動的程式

8-6 檢視擊中與否的程式

8-7 讓砲彈物件銷毀的程式

8-8 有關網路連線的程式

8-9 監聽與回應訊息的Listen副程序

8-10 告知對方自己動作的程式

8-11 繪製與處理敵方的砲彈

第09章 線上撲克牌遊戲

9-1 TCP線上撲克牌遊戲通訊流程

9-2 表單設計

9-3 沿用的通訊程式

9-4 發牌

9-5 收牌後，新增牌面物件的程式

9-6 接收發牌的通訊程式

9-7 遊戲規則和出牌順序

9-8 選牌與出牌

9-9 接收出牌與私訊的通訊程式

9-10 牌出完贏了

第10章 線上足球遊戲

10-1 TCP 足球遊戲的通訊流程

10-2 伺服端程式的部分改建

10-3 客戶端介面

10-4 沿用程式的部分改建

10-5 產生玩家物件的程式

10-6 委託主表單動態產生玩家的label物件

10-7 開始遊戲（發球）

10-8 玩家移動

10-9 踢球的方向與力道

10-10 球的移動與結束遊戲

第11章 網頁即時通

11-1 網頁程式簡介

11-2 建立網頁介面

11-3 發言的程式

11-4 收訊的程式

11-5 在本機測試的方式

第12章 網頁聊天室

12-1 網頁聊天室程式的通訊流程

12-2 建立網站公用變數

12-3 建立網頁

12-4 宣告上線與離線的程式

12-5 發言的程式

12-6 更新發言的程式

12-7 更新線上名單的程式

12-8 檢查並剔除逾時名單的程式

第13章 網頁白板

13-1 網頁白板程式的通訊流程

13-2 網頁介面設計

13-3 加入畫布物件

13-4 加入繪圖程式

13-5 記錄繪圖座標

13-6 自己的客戶端繪圖座標傳給對方

13-7 遠端繪圖座標傳給自己

13-8 繪製遠端傳來的繪圖座標

第14章 網頁五子棋

14-1 網頁五子棋程式的通訊流程

14-2 繪製棋盤影像

14-3 網頁設計

14-4 初始狀態設定的JavaScript程式

14-5 繪製棋子的副程序

14-6 檢查連線的副程序

14-7 我方下棋的程式

14-8 伺服端的程式

14-9 遊戲處理中心timer 副程序",https://cf-assets2.tenlong.com.tw/products/images/000/150/595/medium/MP32010.jpg?1595322749
Python + TensorFlow 2.x 人工智慧、機器學習、大數據｜超炫專案與完全實戰,柯博文,碁峰資訊,9789865025984,2020/9/29,"【聯合推薦】

嘉義基督教醫院 兒童醫學部兒童腎臟科主任、嘉基創新育成中心主任 周信旭醫師

Eco-City智慧生活科技區域整合中心執行長、國立交通大學土木工程系 曾仁杰教授

台北榮民總醫院 關艾琛醫師



【嚴選經典】美國矽谷創業家/全球科技大廠與業界指定工研院顧問講師之Python TensorFlow人工智慧機器學習入門鉅作!

本書為作者柯博文老師在各大企業教授Python、機器學習、人工智慧的課程內容匯集而成。歷經業界頂尖的工程師學員多次考驗，實戰多年後才匯集成冊。內容包含：Python、機器學習、人工智慧、TensorFlow、Keras、OpenCV等相關API的使用方法。並提供了203個範例程式，與169支影音教學影片。

◎以豐富的範例淺顯易懂的解說Python程式語言，並加入詳細的程式註解，使讀者瞭解每個程式的動作。

◎介紹業界統計分析相關的機器學習資料分析程式，並大量使用業界數據，進行分析和預測。

◎使用Tensorflow.Keras實踐人工智慧，以MLP類神經的原理和案例，讓讀者瞭解如何修改程式，才能達到百分百的準確率的目標，並用CNN的手寫辨識方法，結合OpenCV達到學習人工智慧，並且實際應用在生活中。



    

    作者簡介
    
      ‧美國矽谷iFrogLab公司

‧台灣錄克軟體公司負責人

‧全球數十家科技大廠內訓講師

‧工研院、資策會、勞動部的指定講師

‧教授過400餘場次的軟體硬體韌體開發課程

    

    目錄大綱
    
      1.Python程式語言

2.Python程式語言安裝

3.開發程式和工具

4.Python程式基礎

5.函數和物件導向OOP

6.視窗處理GUI Tkinter

7.資料定義Containers

8.圖表函式庫matplotlib.pylib

9.檔案處理和Open Data 開放資料

10.網路

11.資料庫MySQL

12.自然語言處理－文字、語意分析和繁簡體的轉換

13.人工智慧標記語言AIML

14.網頁伺服器

15.網路爬蟲BeautifulSoup4

16.Pandas數據分析和量化投資

17.Numpy 矩陣運算數學函數函式庫

18.執行檔包裝程式Pyinstaller

19.機器學習演算法－Regression迴歸分析

20.機器學習演算法－KNN最近鄰居法

21.機器學習演算法－K-means平均演算法

22.機器學習演算法－Decision Tree決策樹演算法

23.機器學習演算法－Random Forest隨機森林演算法

24.機器學習演算法－Bayes' theorem貝氏分類器

25.TensorFlow介紹和安裝

26.TensorFlow的類神經網路－MLP 快速上手

27.TensorFlow改善類神經模型MLP 結果

28.TensorFlow花的辨識－MLP

29.TensorFlow存取模型和訓練結果

30.TensorFlow實戰圖形和手寫辨識MLP

31.TensorFlow卷積神經網路CNN

32.OpenCV和TensorFlow卷積神經網路CNN即時辨識",https://cf-assets2.tenlong.com.tw/products/images/000/152/652/medium/ACL056431.jpg?1600423419
"NLP 工程師養成術：自然語言處理入門 (隨書附贈 NLP+ML ""雙生樹""思維導圖,送完為止)","何晗 著
          廖信彥 審校",博碩文化,9789864345014,2020/7/7,"隨書附贈 NLP+ML 雙生樹思維導圖,送完為止

 

不會艱深晦澀、不再高深莫測

你一定能看懂的自然語言處理入門書！

 

 

INTRODUCTION TO NATURAL LANGUAGE PROCESSING

 



♘Java與Python雙實作：圖文並茂！演算法、數學公式、程式碼相輔相成。

♘探索式學習路徑：循序漸進！從問題、演算法再到範例實作，一目瞭然。





編輯推薦



作者匯集多年經驗，從基本概念出發，逐步介紹中文分詞、詞性標註、命名實體識別、資訊抽取、文字聚類、文字分類、句法分析這幾個熱門問題的演算法原理與工程實作。透過講解多種演算法，比較它們的優缺點與適用場景，同時詳細展示實際專案導向的程式碼，協助讀者真正將自然語言處理（NLP）應用到正式環境之中。



儘管作者目前是NLP領域的翹楚，但他曾是非本科生，對自學入門有親身體驗，深諳初學者的學習痛點。希望透過這本與眾不同的入門讀物，為讀者打開另一扇機會之門，幫助你零起點上手NLP，讓你在通勤時也能把書讀完讀懂！



隨著本書的學習，你將從普通程式設計師晉級為機器學習工程師，最後進化為NLP工程師。





專家好評



HanLP作者何晗寫的這本書值得一讀。這本書系統性地介紹NLP的基礎技術，深入淺出、容易理解，對初學者助益極大。

周明

微軟亞洲研究院副院長，國際計算語言學會會長



本書不僅介紹NLP的任務及演算法，也提供可以實際執行的線上程式碼，非常適合NLP初學者入門並快速部署到正式環境。

王斌

小米人工智慧實驗室主任、NLP首席科學家





✍配套程式碼由Java 和Python雙語言編寫而成，與GitHub上的最新程式碼同步更新，分別位於https://github.com/hankcs/HanLP/tree/v1.7.5/src/test/java/com/hankcs/book和https://github.com/hankcs/pyhanlp/tree/master/tests/book。

 

 

 

 

 

 

 

 

 

 

 



    

    作者簡介
    
      何晗（@hankcs）

自然語言處理專案HanLP的作者（GitHub Star數量超過14,600），「碼農場」版主（日活躍讀者數超過3,000），埃默里大學計算機博士生，研究方向是句法分析、語義分析與問答系統。

HanLP和「碼農場」是NLP領域實用的學習資源，何晗大約每週處理一次HanLP GitHub上的Issues。

    

    目錄大綱
    
      推薦序

推薦語

前言

主要數學符號表

第1章：新手上路

1.1　自然語言與程式語言

1.2　自然語言處理的層次

1.3　自然語言處理的流派

1.4　機器學習

1.5　語料庫

1.6　開源工具

1.7　總結

第2章：詞典分詞

2.1　什麼是詞

2.2　詞典

2.3　切分演算法

2.4　字典樹

2.5　雙陣列字典樹

2.6　AC 自動機

2.7　基於雙陣列字典樹的AC自動機

2.8　HanLP的詞典分詞實作

2.9　準確率評測

2.10　字典樹的其他應用

2.11　總結

第3章：二元語法與中文分詞

3.1　語言模型

3.2　中文分詞語料庫

3.3　訓練

3.4　預測

3.5　評測

3.6　日語分詞

3.7　總結

第4章：隱馬可夫模型與序列標註

4.1　序列標註問題

4.2　隱馬可夫模型

4.3　隱馬可夫模型的樣本生成

4.4　隱馬可夫模型的訓練

4.5　隱馬可夫模型的預測

4.6　隱馬可夫模型應用於中文分詞

4.7　二階隱馬可夫模型 *

4.8　總結

第5章：感知器分類與序列標註

5.1　分類問題

5.2　線性分類模型與感知器演算法

5.3　基於感知器的人名性別分類

5.4　結構化預測問題

5.5　線性模型的結構化感知器演算法

5.6　基於結構化感知器的中文分詞

5.7　總結

第6章：條件隨機域與序列標註

6.1　機器學習的模型譜系

6.2　條件隨機域

6.3　條件隨機域工具包

6.4　HanLP的CRF++ API

6.5　總結

第7章：詞性標註

7.1　詞性標註概述

7.2　詞性標註語料庫與標註集

7.3　序列標註模型應用於詞性標註

7.4　自訂詞性

7.5　總結

第8章：命名實體識別

8.1　概述

8.2　基於規則的命名實體識別

8.3　命名實體識別語料庫

8.4　基於層疊隱馬可夫模型的角色標註框架

8.5　基於序列標註的命名實體識別

8.6　自訂領域命名實體識別

8.7　總結

第9章：資訊抽取

9.1　新詞提取

9.2　關鍵字提取

9.3　短語提取

9.4　關鍵句提取

9.5　總結

第10章：文字聚類

10.1　概述

10.2　文件的特徵提取

10.3　k 平均值演算法

10.4　重複二分聚類演算法

10.5　標準化評測

10.6　總結

第11章：文字分類

11.1　文字分類的概念

11.2　文字分類語料庫

11.3　文字分類的特徵提取

11.4　單純貝氏分類器

11.5　支援向量機分類器

11.6　標準化評測

11.7　情感分析

11.8　總結

第12章：依存句法分析

12.1　短語結構樹

12.2　依存句法樹

12.3　依存句法分析

12.4　基於轉移的依存句法分析

12.5　依存句法分析API

12.6　案例：基於依存句法樹的意見抽取

12.7　總結

第13章：深度學習與自然語言處理

13.1　傳統方法的局限

13.2　深度學習與優勢

13.3　word2vec

13.4　基於神經網路的高效能依存句法分析器

13.5　自然語言處理進階

自然語言處理學習資料推薦

書籍與雜誌

學術會議

公開課程

網站",https://cf-assets2.tenlong.com.tw/products/images/000/149/512/medium/MP12021.jpg?1592792434
絕對硬派：Windows 核心首度公開 C++解析,譚文、陳銘霖,深智數位,9789865501570,2020/10/21,"本書特色

本書作者使用了WDK作為驅動程式的開發，在重要部分，更使用了神級的組合語言進行修改編輯，久違的Windows核心剖析好書

◎ 用最強大的C++、組合語言，充分解析32位元及64位元

◎ 從Windows XP、Windows Vista、Windows 7到最新的Windows 10，處理程序大公開

◎ 徹底解決對Windows一知半解的尷尬局面，一探封閉系統Windows核心的究竟

專家推薦

本書是作者多年實作經驗的精華之作，深入淺出的揭開現代OS核心的神秘面紗，是每一位安全技術實作者的良器。

~~ 數篷科技CTO 楊一飛

本書系統地介紹Windows系統程式設計機制，內容豐富、簡單易懂，想學習Windows核心程式設計，有這一本足矣。

~~十五派信息安全教育創始人 任曉琿

本書作者以雄厚的技術實力和多年程式設計經驗，系統地介紹Windows核心程式設計的方方面面。本書適合入門與進階Windows和新開發的讀者閱讀。

~~騰訊安全部總監、安全應急響應中心(TSRC)負責人 胡珀 (lake2)

這是一本有關Windows驅動開發的寶典，內容全面、詳實。書中介紹的方法和技巧實用性強，有很高的參考和學習價值。

~~騰訊防毒實驗室負責人 馬勁松

Windows平台的核心安全在未來很長一段時間仍會是軟體安全界重要的技術領域之一，本書全新的技術內容會讓你受益匪淺。

~~《Android 軟體安全權威指南》作者 豐生強

本書內容豐富、主題清晰，作者有著豐富的驅動開發經驗，會助您快速進階Windows核心程式設計開發。

 ~~GeekPwn評委、滴滴美國研究院資深專家工程師 王宇

本書不僅可以學習Windows核心開發的理論知識，還有很多實際案例，可以很好地提高閱讀者的動手能力，並累積程式設計經驗。

~~永安在線 CTO 鄧欣

作者分享了Windows主機安全面向的開發技巧，讀者只要認真閱讀並動手實作，一定會收穫滿滿。

~~PC Hunter作者 linxer

適合讀者群  電腦軟體安全從業者，有C 語言基礎且有興趣了解 Windows 核心、希望從事 Windows 核心開發、或對電腦安全感興趣的讀者。

作者簡介

譚文，網名楚狂人

安全軟體發展經驗豐富，曾任職NEC、英特爾亞太研發有限公司、騰訊科技。從事過企業安全軟體、x86版Android的houdini專案、騰訊電腦管家、騰訊遊戲安全等開發工作，對Windows核心有深入研究。

現任騰訊科技遊戲安全團隊驅動程式開發負責人，專家工程師。

陳銘霖

終端開發經驗豐富，先後任深信服科技架構師、騰訊科技高級工程師；曾主導騰訊電腦管家核心安全驅動開發，以及疑難病毒打擊專案、騰訊Windows伺服器安全開發專案；對Windows及macOS系統有深入研究，在To C以及To B行業有豐富的開發經驗。

現任數篷科技高級架構師，終端安全負責人。

目錄

前言

第一篇 基礎篇

01 核心程式設計環境

1.1 下載開發編譯環境

1.2 撰寫第一個C 檔案

1.3 編譯第一個驅動

02 核心驅動執行與偵錯

2.1 驅動的執行

2.2 服務的基本操作

2.3 驅動的偵錯

03 核心程式設計基礎

3.1 上下文環境

3.2 插斷要求等級

3.3 驅動例外

3.4 字串操作

3.5 鏈結串列

3.6 迴旋栓鎖

3.7 記憶體分配

3.8 物件與控制碼

3.9 登錄檔

3.10 檔案操作

3.11 執行緒與事件

04 應用與核心通訊

4.1 核心方面的程式設計

4.2 應用方面的程式設計

05  64 位元和32 位元核心開發差異

5.1 64 位元系統新增機制

5.2 程式設計差異

06 核心程式設計技巧

6.1 初始化設定值問題

6.2 有效性判斷

6.3 即時申請

6.4 獨立性與最小化原則

6.5 巢狀結構陷阱

6.6 穩定性處理

第二篇　過濾篇

07 序列埠的過濾

7.1 過濾的概念

7.2 獲得實際資料

7.3 完整的程式

08 鍵盤的過濾

8.1 技術原理

8.2 鍵盤過濾的架構

8.3 鍵盤過濾的請求處理

8.4 從請求中列印出按鍵資訊

8.5 Hook 分發函數

8.6 Hook 鍵盤中斷反過濾

8.7 直接用通訊埠操作鍵盤

09 磁碟的虛擬

9.1 虛擬的磁碟

9.2 一個實際的實例

9.3 入口函數

9.4 EvtDriverDeviceAdd 函數

9.5 FAT12/16 磁碟卷冊初始化

9.6 驅動中的請求處理

9.7 Ramdisk 的編譯和安裝

10 磁碟的過濾

10.1 磁碟過濾驅動的概念

10.2 具有還原功能的磁碟卷冊過濾驅動

10.3 驅動分析

11 檔案系統的過濾與監控

11.1 檔案系統的裝置物件

11.2 檔案系統的分發函數

11.3 裝置的綁定前期工作

11.4 檔案系統控制裝置的綁定

11.5 檔案系統卷冊裝置的綁定

11.6 讀/寫操作的過濾

11.7 其他操作的過濾

11.8 路徑過濾的實現

11.9 把sfilter 編譯成靜態程式庫

12 檔案系統透明加密

12.1 檔案透明加密的應用

12.2 區分處理程序

12.3 記憶體對映與檔案緩衝

12.4 加密標識

12.5 檔案加密表

12.6 檔案開啟處理

12.7 讀/寫加密和解密

12.8 crypt_file 的組裝

13 檔案系統微過濾驅動

13.1 檔案系統微過濾驅動簡介

13.2 Minifilter 的程式設計架構

13.3 Minifilter 如何與應用程式通訊

13.4 Minifilter 的安裝與載入

14 網路傳輸層過濾

14.1 TDI 概要

14.2 TDI 的過濾架構

14.3 產生請求：取得位址

14.4 控制請求

14.5 本書實例tdifw.lib 的應用

15 Windows 過濾平台

15.1 WFP 簡介

15.2 WFP 架構

15.3 基本物件模型

15.4 WFP 操作

15.5 WFP 過濾實例

16 NDIS 協定驅動

16.1 乙太網路封包和網路驅動架構

16.2 協定驅動的DriverEntry

16.3 協定與網路卡的綁定

16.4 綁定的解除

16.5 在使用者態操作協定驅動

16.6 在核心態完成功能的實現

16.7 協定驅動的接收回呼

17 NDIS 迷你通訊埠驅動

17.1 迷你通訊埠驅動的應用與概述

17.2 迷你通訊埠驅動的初始化

17.3 開啟ndisprot 裝置

17.4 使用ndisprot 發送封包

17.5 使用ndisprot 接收封包

17.6 其他的特徵回呼函數的實現

18 NDIS 中間層驅動

18.1 NDIS 中間層驅動概述

18.2 中間層驅動的入口與綁定

18.3 中間層驅動發送資料封包

18.4 中間層驅動接收資料封包

18.5 中間層驅動程式查詢和設定

18.6 NDIS 控制碼

18.7 產生普通控制裝置

第三篇　應用篇

19 IA-32 組合語言基礎

19.1 x86 記憶體、暫存器與堆疊

19.2 x86 中函數的實現

19.3 x86 中函數的呼叫與傳回

19.4 從32 位元組合語言到64 位元組合語言

19.5 64 位元下的函數實現

20 Windows 核心掛鉤

20.1 系統服務描述符號表掛鉤

20.2 函數匯出表掛鉤

20.3 Windows 7 系統下IofCallDriver的追蹤

20.4 Windows 7 系統下內聯掛鉤

20.5 中斷與中斷掛鉤

21 Windows 通知與回呼

21.1 Windows 的事件通知與回呼

21.2 常用的事件通知

21.3 Windows 回呼機制

21.4 安全的死角，回呼的應用

22 保護處理程序

22.1 核心物件簡介

22.2 核心物件的結構

22.3 保護核心物件

22.4 處理程序的保護

23 程式植入與防植入

23.1 植入與防植入簡介

23.2 常用的植入方式

23.3 主動植入

23.4 被動植入

23.5 防植入

23.6 歸納

A 如何使用本書的原始程式

B 練習題

序

前言

Windows 是目前主流的封閉原始碼作業系統，從第一個NT 核心的Windows2000 至今，已經有20 年左右的歷史。在這漫長的20 年內，為了滿足日益變化的業務需求，以及應對不斷升級的安全挑戰，Windows 作業系統核心一直不斷升級與增強，其主要表現是核心中增加了新的邏輯模組與安全機制，其中最為典型的是64 位元的Windows 作業系統核心比較32 位元核心增加了Patch Guard 模組，這個模組的主要作用是檢查核心是否被協力廠商核心模組「污染」，目的是防止病毒木馬使用核心掛鉤或綁架的技術篡改核心。新的安全機制常常會對安全開發者帶來一定的影響，其原因是一些軟體過度依賴系統未公開的底層技術，而正確的做法是開發者需緊密依賴系統提供的公開機制，利用可利用的機制完成相同的功能，這要求開發者對整個Windows 核心機制有深入的了解。作者撰寫本書的目的之一，正是希望讀者能對Windows 核心有更全面、更深入的認識。

本書的前身是《Windows 核心程式設計與驅動開發》，本書在前者的基礎上，刪除了部分過時的章節，重新定義了大部分基礎章節並新增了部分目前較為熱門的技術，同時為了使本書內容更為聚焦，刪除了與Windows 核心連結性不強的內容。

本書針對的讀者群主要有以下幾種。

■ 有一定 C 語言基礎，有興趣了解 Windows 核心的讀者。

■ 有一定 C 語言基礎，並且希望從事 Windows 核心開發的讀者。

■ 有一定基礎的 Windows 核心開發者，有意願進一步加強的讀者。

本書共分為三篇。第一篇為基礎篇（第1 章∼第6 章），從初學者的角度出發，介紹Windows 核心的基本概念、開發環境的架設、系統機制以及核心程式設計的技巧。第1 章與第2 章是本書最為基礎的部分，介紹了核心程式設計的基本概念與開發環境架設，初學者應該首先學習這部分內容。第3 ∼第5 章重點介紹了系統的常用機制，這些機制的使用會貫穿本書所有章節，掌握這些常用機制是核心開發者最基本的要求。第6 章介紹了核心程式設計的注意事項與技巧，這些注意事項與技巧可以幫助初學者少走冤枉路，快速入門。

第二篇為過濾篇（第7 章∼第18 章），是本書的核心內容，由易到難詳細介紹了Windows 系統的過濾機制。首先以最簡單的序列埠過濾驅動開始，剖析了一個過濾驅動的最基本要素，然後分別介紹了鍵盤過濾、磁碟過濾、檔案過濾以及網路過濾。對於網路過濾，本篇從不同的網路層次與角度介紹了TDI、WFP 以及NDIS 等機制。本篇內容涵蓋了目前Windows 系統絕大部分主流的過濾技術。

第三篇為應用篇（第19 章∼第23 章），結合前兩篇的基礎知識，本篇綜合介紹了Windows 安全領域所需的其他技術，透過對本篇的學習，讀者將發現安全技術並不侷限於系統提供的現成機制。本篇選取了目前主流安全軟體所使用到的典型技術，深入淺出，首先介紹了CPU 的基本基礎知識，然後基於上述基礎知識，第20 章重點介紹了Windows 下的掛鉤技術，掛鉤技術常被用於安全軟體的檢測、稽核、攔截等技術；第22 章和第23 章從守護的角度，介紹了自我保護技術。

筆者擁有十餘年的Windows 開發經驗，主導過資料安全、主機安全、伺服器安全等專案，有關To C（針對消費者群眾）和To B（針對企業使用者群眾）企業，深知Windows 核心的複雜性，由於企業的特殊環境，To C 和To B 的核心技術方案選型不盡相同，因為不同的使用者群眾，其主機上軟體存在參差不齊的同類安全軟體，安全軟體之間也存在大量的相容性問題，這些問題的引用使得原本並不簡單的核心程式設計更為複雜化。記得有很多讀者問過我一個相同的問題：如何撰寫一個穩定的核心模組。這個問題其實沒有標準答案，以筆者的經驗來看，讀者首先應該養成良好的程式設計習慣，然後深入了解系統的各種安全機制以及攔截方法，在撰寫程式時，請思考以下幾個問題：①這行程式碼是否會被其他軟體攔截導致失敗；②這行程式碼是否會觸發一些協力廠商的回呼函數；③這行程式碼失敗後應該怎麼處理。本書在介紹技術的同時，也介紹了筆者的核心開發心得體會與技巧，希望這些體會與技巧可以為讀者帶來更多的思考。核心程式設計類似於武林秘笈的內功修煉，需要時間沉澱，並非一蹴而就，請讀者要有更多的耐心，「成功之道，貴在堅持」。

本書原始程式碼請至本公司官網https://deepmind.com.tw 搜尋本書後下載。作者亦有針對本書程式碼，維護一個github 的專案，網址為https://github.com/minglinchen/WinKernelDev。讀者可以隨時造訪這個網址下載最新的程式碼。

寫作是一項工作量極大而繁雜的工作，而對技術書籍來說更是如此。由於我個人工作的緣故，寫作只能在晚上或週末進行，有時為了整章內容的想法連貫而需要挑燈夜戰，通宵達旦。一路走來，感謝我的父母、妻子和女兒，在每天有限的時間裡，我需要投入更多的時間精力專注在寫作上而缺少對他們的陪伴，尤其是我的女兒淇淇，在深感愧疚的同時，也感謝他們的了解與支援。

感謝我的摯友黃瀚，在本書寫作過程中一直支援我，並為我提供了大量的技術性資源。感謝李冰和馮琦二位編輯，她們確保了本書所有文字內容嚴謹與通暢。

感謝「安全圈」內朋友們的支援，尤其感謝數篷科技的科學家吳燁、CTO 楊一飛以及架構師王柏達，他們在工作中為我提供大量的幫助。感謝上一本書籍熱心的讀者，他們回饋的問題更進一步地加強本書的內容。

最後，希望本書能為「安全圈」內的讀者或即將進入「安全圈」的讀者帶來更大的收穫。

陳銘霖",https://cf-assets2.tenlong.com.tw/products/images/000/153/537/medium/DM2045_3D-750x933.jpg?1602149362
Docker 專業養成 ─ 活用基礎與實踐技能 (暢銷回饋版),"熊昌隆
          廖信彥 審校",博碩文化,9789864344437,2019/11/8,"★重版出來！本書上市以來即榮獲讀者們一致好評讚賞★

★特價回饋限量上市！精通Docker的精彩內容盡在本書★



本書介紹許多Docker的使用方法，並以專門章節示範Docker的實踐之道。透過這些操作範例的引導，避免讀者進行紙上談兵式的閱讀，也使得章節之間的概念藉由範例串聯起來。此外，透過通俗語言將晦澀的知識以生活化的方式展現出來，讓讀者，特別是初學者更容易理解Docker。



本書特色：

*集結各地最新資料，整理出重點菁華，提供瞭解Docker的最佳捷徑。

*以淺顯文字說明，從不同角度解讀和展現Docker的概念、原理以及實際案例。

*不同領域或者對Docker有著不同認知的開發者，都能從中得到想要的知識。



    

    作者簡介
    
      熊昌隆



全端工程師，IT技術講師，知名部落客。參與智慧路由的研究，多項研究成果影響了家用路由的發展。

設計實作的 Beaver 框架，已經應用於千萬級系統的程式架構。

他所發起並建立的 Funcuter 開源小組，旨在聚集優秀的開源專案及開發者，目前已有一定的規模。

持續致力於先進技術的研究和推廣，希望讓更多的開發者能以更輕鬆的方式接觸、了解新興科技成果，進而應用於開發實戰中。

    

    目錄大綱
    
      本書目錄    Part 1　基礎篇

Chapter 01　初識 Docker

1.1 虛擬化

1.1.1 虛擬化技術

1.1.2 虛擬化的分類

1.2 容器技術與 Docker

1.2.1 容器技術

1.2.2 Docker 簡介

1.2.3 改變世界的發明

1.3 Docker 的安裝

1.3.1 在 Ubuntu 中安裝 Docker

1.3.2 在 CentOS 中安裝 Docker

1.3.3 在 Windows 中安裝 Docker

1.3.4 在 Mac OS 中安裝 Docker

1.3.5 在其他系統中安裝 Docker

1.4 Docker 的優勢

1.4.1 革命性的虛擬化方案

1.4.2 高效率的容器技術

1.4.3 社群的力量

1.5 Docker 的應用場景

1.5.1 超短時間部署執行

1.5.2 節省移植時間

1.6 本章小結

Chapter 02　映像與倉庫

2.1 映像的概念

2.1.1 聯合檔案系統

2.1.2 Docker 中的映像

2.1.3 映像的分層結構

2.1.4 映像的寫入時複製

2.2 使用和管理映像

2.2.1 取得映像

2.2.2 列出映像

2.2.3 取得映像的詳細資訊

2.2.4 刪除映像

2.2.5 映像的移植

2.3 Docker Hub 簡介

2.3.1 映像倉庫

2.3.2 Docker Hub 簡介

2.3.3 註冊 Docker Hub 帳號

2.3.4 搜索映像

2.3.5 共享自動建構映像

2.4 建立私有倉庫

2.4.1 映像分發服務

2.4.2 Docker Registry HTTP API

2.4.3 部署私有倉庫

2.5 本章小結

Chapter 03　管理和使用容器

3.1 管理容器

3.1.1 建立容器

3.1.2 容器的啟動過程

3.1.3 列出容器

3.1.4 容器的命名

3.1.5 啟動和停止

3.1.6 暫停和恢復

3.1.7 重啟容器

3.1.8 刪除容器

3.2 連接到容器

3.2.1 查看處理序資訊

3.2.2 查看容器資訊

3.2.3 容器日誌

3.2.4 附加到容器

3.2.5 在容器中執行命令

3.3 容器的儲存與移植

3.3.1 提交容器更改

3.3.2 容器的匯入 / 匯出

3.4 本章小結

Chapter 04　資料卷與網路

4.1 資料卷

4.1.1 關於資料卷

4.1.2 資料卷的特點

4.1.3 建立資料卷

4.1.4 掛載資料卷

4.1.5 刪除資料卷

4.2 資料卷容器

4.2.1 關於資料卷容器

4.2.2 建立資料卷容器

4.2.3 連接資料卷容器

4.2.4 資料卷的移植

4.3 網路基礎

4.3.1 網路簡介

4.3.2 查詢網路設定

4.4 存取網路

4.4.1 宿主機連接埠映射

4.4.2 容器連接

4.5 本章小結

Chapter 05　製作映像

5.1 瞭解Dockerfile

5.1.1 Dockerfile 簡介

5.1.2 使用Dockerfile 建立映像

5.2 基礎指令

5.2.1 FROM

5.2.2 MAINTAINER

5.3 控制指令

5.3.1 RUN

5.3.2 WORKDIR

5.3.3 ONBUILD

5.4 引入指令

5.4.1 ADD

5.4.2 COPY

5.5 執行指令

5.5.1 CMD

5.5.2 ENTRYPOINT

5.6 配置指令

5.6.1 EXPOSE

5.6.2 ENV

5.6.3 LABEL

5.6.4 USER

5.6.5 ARG

5.6.6 STOPSIGNAL

5.6.7 SHELL

5.7 特殊用法

5.7.1 環境變數

5.7.2 指令解析

5.7.3 忽略檔案

5.8 本章小結

Part 2　實踐篇

Chapter 06　製作映像

6.1 在 Docker 中使用 SSH

6.1.1 SSH 簡介

6.1.2 SSH 使用方法簡介

6.1.3 資料卷管理容器

6.1.4 使用 SSH 服務容器

6.2 建構 SSH 服務映像

6.2.1 建構方式比較

6.2.2 透過提交建構

6.2.3 使用 Dockerfile 建構

6.3 本章小結 137

Chapter 07　Web 伺服器

7.1 Web 服務簡介

7.1.1 全球資訊網與網站

7.1.2 Web 服務

7.1.3 Web 服務程式

7.2 Apache

7.2.1 Apache 簡介

7.2.2 安裝 Apache

7.2.3 建構 Apache 映像

7.2.4 測試 Apache 容器

7.3 Nginx

7.3.1 關於 Nginx

7.3.2 安裝 Nginx

7.3.3 建構 Nginx 映像

7.3.4 測試 Nginx 映像

7.4 Tomcat

7.4.1 Tomcat 簡介

7.4.2 安裝 Tomcat

7.4.3 建構 Tomcat 映像

7.5 本章小結

Chapter 08　資料庫程式

8.1 MySQL

8.1.1 MySQL 簡介

8.1.2 安裝 MySQL

8.1.3 建構 MySQL 映像

8.1.4 測試 MySQL 容器

8.2 MongoDB 172

8.2.1 MongoDB 簡介

8.2.2 安裝 MongoDB

8.2.3 建構 MongoDB 映像

8.2.4 測試 MongoDB 容器

8.3 本章小結

Chapter 09　快取工具

9.1 Memcached

9.1.1 Memcached 簡介

9.1.2 安裝 Memcached

9.1.3 建構 Memcached 映像

9.1.4 測試 Memcached 容器

9.2 Redis

9.2.1 Redis 簡介

9.2.2 安裝 Redis

9.2.3 建構 Redis 映像

9.2.4 測試 Redis 容器

9.3 本章小結

Chapter 10　動態處理常式

10.1 Java

10.1.1 Java 簡介

10.1.2 安裝 Java

10.1.3 建構 Java 映像

10.1.4 測試 Java 容器

10.2 PHP

10.2.1 PHP 簡介

10.2.2 安裝 PHP

10.2.3 建構 PHP 映像

10.2.4 測試 PHP 容器

10.3 Python

10.3.1 Python 簡介

10.3.2 安裝 Python

10.3.3 建構 Python 映像

10.3.4 測試 Python 容器

10.4 Node.js

10.4.1 Node.js 簡介

10.4.2 安裝 Node.js

10.4.3 建構 Node.js 映像

10.4.4 測試 Node.js 容器

10.5 本章小結

Chapter 11　綜合演練

11.1 演練目標

11.1.1 目標概述

11.1.2 撰寫程式

11.2 建構環境

11.2.1 準備映像

11.2.2 程式設定

11.3 執行專案

11.3.1 啟動容器

11.3.2 測試專案

11.4 本章小結

Part 3　提升篇

Chapter 12　網路進階

12.1 網路實作

12.1.1 容器網路基礎

12.1.2 網路模型

12.2 Docker 中的網路

12.2.1 預設網路

12.2.2 自訂網路

12.2.3 容器與外部通訊

12.2.4 容器間通訊

12.3 網路實踐

12.3.1 管理容器網路

12.3.2 容器連接網路

12.3.3 設定 docker0 橋接器

12.3.4 自訂橋接器

12.3.5 設定 DNS

12.3.6 使用 IPv6

12.4 本章小結

Chapter 13　強化安全性

13.1 深入理解 Docker 安全

13.1.1 命名空間隔離

13.1.2 資源控制群組

13.1.3 核心能力機制

13.2 資源使用限制

13.2.1 透過控制群組限制

13.2.2 透過 ulimit 限制

13.2.3 網路存取限制

13.3 校驗與監控

13.3.1 映像簽章

13.3.2 執行狀態監控

13.4 聯級防護

13.4.1 組合虛擬化

13.4.2 檔案系統安全

13.5 核心安全技術

13.5.1 Capability

13.5.2 SELinux

13.5.3 AppArmor

13.6 本章小結

Chapter 14　Docker API

14.1 關於 Docker API

14.1.1 通用操作介面

14.1.2 關於 RESTful

14.1.3 Docker API 的優勢

14.1.4 Docker API 的分類

14.2 使用 Docker Remote API

14.2.1 關於 Docker Remote API

14.2.2 Docker Remote API 的版本

14.2.3 透過 Remote API 列出容器

14.2.4 透過 Remote API 列出映像

14.3 使用 Docker Registry API

14.3.1 關於 Docker Registry API

14.3.2 Docker Registry API 的主要功能

14.3.3 Docker Registry API 的版本

14.3.4 透過 Registry API 拉取映像

14.3.5 透過 Registry API 推送映像

14.4 本章小結

Chapter 15　管理工具

15.1 Docker Compose

15.1.1 Docker Compose 簡介

15.1.2 安裝 Docker Compose

15.1.3 Docker Compose 設定檔

15.1.4 常用的 Docker Compose 命令

15.2 Docker Machine

15.2.1 Docker Machine 簡介

15.2.2 安裝 Docker Machine

15.2.3 Docker Machine 常見命令

15.3 Docker Swarm

15.3.1 Docker Swarm 簡介

15.3.2 Docker Swarm 結構

15.3.3 使用 Docker Swarm

15.3.4 Docker Swarm 常見命令

15.4 本章小結

Chapter 16　Docker 的技術架構

16.1 命名空間

16.1.1 關於 Linux 命名空間

16.1.2 命名空間的系統呼叫

16.1.3 命名空間的分類

16.2 控制群組

16.2.1 關於 Linux 控制群組

16.2.2 CGroups 的組成

16.2.3 容器與控制群組

16.3 聯合檔案系統

16.3.1 關於UFS

16.3.2 Docker 中的UFS

16.4 Docker Engine 架構

16.4.1 Docker Engine 的組成結構

16.4.2 Docker Daemon

16.4.3 Docker CLI

16.5 本章小結",https://cf-assets2.tenlong.com.tw/products/images/000/141/673/medium/9789864344437.jpg?1571992042
"Python 神乎其技 全新超譯版 - 快速精通 Python 進階功能, 寫出 Pythonic 的程式 (Python Tricks: A Buffet of Awesome Python Features)","Dan Bader 著
          江良志 譯",旗標科技,9789863122869,2020/4/29,"★★★★★ 亞馬遜 4.7 星絕讚好評

出版一周便登上 Python 程式語言書籍排行 #1

『當我翻著 Dan 的這本書時, 我老是忍不住心想：要是當年我學 Python 時也有這本書就好了。』

『我愛～死～這本書了！就好像有個資深導師在你身邊對你解釋這些..Python 密技！』

大家都說 Python 很好學, 可是你發現自己跨過第一步後就卡關了。

或者你已學過其他程式語言, 想要轉戰 Python, 卻遲遲找不到能快速上手進階 Python 的教材...

難道真的得花錢買一堆書, 才能拼湊出這些內行 Python 知識嗎？

別再掙扎了 - 『Python 神乎其技』就是為你量身打造的神救援手冊。

本書作者 Dan Bader (知名 Python 教學網站 『Real Python』 站長) 以清晰的範例及圖解, 直搗 Python 各種強大的內建進階功能, 透視背後運作原理, 讓你釐清觀念、避開常犯錯誤, 最終寫出簡潔又實用的『Pythonic』程式！

本書由施威銘研究室監修, 為原版 『Python 神乎其技』全新翻譯本, 題材與架構和前版大致相同, 但新譯本特別針對原文書進行大量補充, 包括 Python 3.7 與 3.8 最新特色, 並適當添加程式註解, 幫助讀者更容易理解內容。 

本書特色: 

● 45 個 Python 實用進階主題

● 逐步解說的清晰範例與圖解

● 融入 Python 3.7、3.8 最新功能

您能在這本書學到：

○ 使用 assert 及自訂例外類別協助除錯

○ 以資源管理器管控資源

○ 給函式開『外掛』 - 修飾器

○ 用抽象基礎類別打造介面

○ 方便的一行 lambda 函式及 list 生成式

○ 拿走訪器及產生器逐次產生資料

○ 內建資料結構及字串格式化方法

○ 字典的預設值、鍵衝突及合併

○ 建立不同版本的 Python 虛擬環境

○ dataclass 資料結構 (Python 3.7)

○ 指派表示式 := (Python 3.8)

○ 字典聯集算符 (Python 3.9 預覽新特色)

○ ..與其他超讚功能



    

    作者簡介
    
      Dan Bader

生於德國, 現居加拿大溫哥華, 擁有慕尼黑工業大學電腦科學學士與碩士學位。自從小時候說服爸媽從報紙分類廣告買下一台舊的 8 位元電腦 Commodore 64 起, 就對寫程式深感著迷、至今熱情不減。

現在是擁有 15 年資歷的獨立程式開發者與顧問, 也是知名 Python 教學網站 RealPython.com 的建置者、管理者兼主編。

    

    目錄大綱
    
      目錄: 

第 1 章 序章

1-1 本書起源

1-2 本書是給誰看的

1-3 如何閱讀本書

第 2 章 寫出清楚明瞭的 Python 程式

2-1 運用 assert 在開發階段協助除錯

2-2 在資料容器增減元素時記得加逗號

2-3 在 with 敘述使用自訂資源管理器 (context manager) 類別

2-4 變數名稱使用底線 _ 與雙底線 __ 的效果

2-5 Python 的四種字串格式化

2-6 指派運算式 := (Python 3.8+)

2-7 『Python 之禪』彩蛋

第 3 章 函式的一級物件特性、參數設定與修飾器

3-1 起手式：Python 函式的一級物件特性

3-2 lambda：只有單一運算式的匿名函式

3-3 威力無窮的修飾器 (decorator) - 給函式開外掛

3-4 *args 與 **kwargs：讓函式接收數量不定的額外參數

3-5 函式參數解包

3-6 此處無物可傳回？ - 函式的隱含 return 敘述

3-7 限制函式參數為位置型 (Python 3.8+) 或關鍵字參數

第 4 章 解密類別與物件的特性、行為並加以運用

4-1 物件比較：== (相等) 與 is (相同)

4-2 __str__ 與 __repr__：讓類別更善於『自我表述』

4-3 定義自訂例外類別 (exception class) 來協助除錯

4-4 複製物件學問大：淺拷貝與深拷貝

4-5 以抽象基礎類別 (ABC) 打造介面 - 強迫子類別實作 method

4-6 徹底搞懂物件／類別／靜態 method

4-7 類別變數與物件變數的使用陷阱

4-8 用物件實作修飾器

第 5 章 Python 的好用資料結構比一比

5-1 各種 Python 字典

5-2 各種 Python 陣列

5-3 各種儲存『記錄』 (record) 用的資料結構

5-4 set (集合) 與多重集合

5-5 堆疊 (stack) - 後進先出的資料結構

5-6 佇列 (queue) - 先進先出的資料結構

5-7 優先佇列 (priority queue)

第 6 章 迴圈、list 切片、走訪器與產生器

6-1 寫出符合 Python 風格的 for 迴圈

6-2 精簡版迴圈：生成式 (comprehension)

6-3 用『壽司』算符給 list 切片

6-4 打造走訪器 (iterator)

6-5 簡化版走訪器：產生器函式 (generator function)

6-6 產生器運算式 (generator function)

6-7 走訪器串聯

6-8 itertools：強悍的 Python 走訪器模組

第 7 章 dict 取值、排序、合併與輸出技巧

7-1 在 dict 查不到值時傳回預設值

7-2 dict 元素排序

7-3 用 dict 模擬 C 的 switch...case

7-4 dict 鍵值的更新陷阱

7-5 各種 dict 合併技巧

7-6 用美觀的格式印出 dict

第 8 章 探索 Python 開發環境與 bytecode

8-1 以 dir() 與 help() 探索 Python 模組與物件

8-2 用 vnev 建立不同版本的 Python 虛擬環境

8-3 揭開位元組碼 (bytecode) 的神秘面紗",https://cf-assets2.tenlong.com.tw/products/images/000/147/256/medium/9789863122869_bc.jpg?1587521157
練好深度學習的基本功｜用 Python 進行基礎數學理論的實作,"立石賢吾 著
          衛宮紘 譯",碁峰資訊,9789865025472,2020/8/6,"從基本暸解深度學習的運作機制！

詳盡解說讓不擅長數學的人也能夠暸解。

僅用Python和NumPy，就可一步一腳印完成實作！

獻給想要跨出「只會使用函式庫實作」舒適圈的人。



「雖然我知道如何透過函式庫來做深度學習，但其實並不曉得它到底是怎麼運作」

「想要了解深度學習的數學原理，搞懂深度學習的運作方式」



本書就是為了滿足這樣的需求而推出的。透過朋友之間的對話，採用原理解說與實作並行的方式，從最基礎的原點開始重新認識深度學習。



．何謂類神經網路

．如何實作感知器演算法

．類神經網路如何學習權重和偏差

．如何正確學習參數解題

．實作卷積神經網路

 



    

    作者簡介
    
      立石賢吾

佐賀大學畢業後經歷數間開發公司，於2014年進入LINE Fukuoka，負責商品推薦、文件分類等的機器學習產品。2019年進入SmartNews，擔任機器學習工程師。

    

    目錄大綱
    
      Chapter 1｜開始接觸類神經網路

類神經網路是什麼東西？先來比較跟其他機器學習演算法的差異，再以圖片、簡單的數學式解說類神經網路的結構與能夠做到哪些事情。



Chapter 2｜學習正向傳播

解說構成感知器類神經網路的單純演算法是如何進行運算，舉判別圖像尺寸為例，學習從輸入值到輸出值依序計算的「正向傳播」。



Chapter 3｜學習反向傳播

說明在類神經網路上，如何求得適當的權重與偏差。使用微分更新權重與偏差，盡可能減少「誤差」，但正攻法的計算相當麻煩，因此我們會採用簡化計算的「誤差反向傳播法」。



Chapter 4｜學習卷積類神經網路

學會類神經網路的基本原理後，接著學習使用卷積類神經網路處理圖像，舉出卷積類神經網路的特有機制、運算，並說明權重、偏差的更新方法。



Chapter 5｜實作類神經網路

根據前面章節學到的類神經網路計算方法， 使用Python編寫程式。以Chapter 2、3 出現的基本類神經網路，實作圖像的尺寸判定；以Chapter 4出現的卷積類神經網路實作手寫文字辨識。



Appendix

收錄Chapter 1 ∼ 5未能詳細解說的數學知識、Python程式設計的環境設置、Python與NumPy的簡易說明。",https://cf-assets2.tenlong.com.tw/products/images/000/150/730/medium/ACD020200.jpg?1595837616
"數位邏輯設計 (Roth: Fundamentals of Logic Design, 7/e)",周靜娟、顏培仁,CS滄海,9789865840105,2014/2/28,"<書籍簡介>

　　本書介紹組合電路及序向電路的設計，同時提供數位邏輯設計中所用到的基礎觀念，相當適合作為電機、電子工程、計算機工程或資訊科學課程的教科書。

　　全書主要分成三個部分，前6章介紹數字系統、布林代數及簡化，以及用NAND和NOR閘電路實現代數；第二個部分中第7-8章探討組合邏輯電路的設計，第9章介紹VHDL硬體描述語言；第三個部分(第10-17章）主要是關於時脈式序向邏輯電路的分析與設計，包括狀態圖與狀態表的推導與化簡。此外，許多章節包含模擬或是實驗室的實習，提供了設計邏輯電路和測試其動作的機會。

§§與前版差異

本書在第五版之後有很明顯的進化。加入了可程式規劃邏輯和VHDL硬體描述語言，並且強調邏輯電路模擬和電腦輔助設計所扮演的角色；增加VHDL、雜訊、閂鎖器、單個1狀態設定的討論，也加入更多的習題。第七版做了許多更動，重新編排數字系統，讓1補數系統易於省略。在布林代數的章節，先用開關電路和真值表推導出交換代數的定理，這些定理用來定義布林代數，然後再推導出更多的布林代數定理，用來化簡交換代數式。加法器部分增加前瞻進位加法器。增加多工器的另外一種實現法，也討論信號的高準位動作和低準位動作。討論其他類型的閘控閂鎖器，簡單介紹非同步序向式電路，更進一步討論非完全設定的狀態表，以及為何會發生，同時簡單討論如何避免非完全設定的狀態表。本書從頭到尾加入許多的練習，強調更具有挑戰性的習題，而非只是一般的習題。除此之外，也更新邏輯設計和模擬軟體的說明。此外，由於本書內容極為豐富，囿於中文版篇幅之限制，本版之中文版刪除原文書之第6章、第17章、第20章、5.6-5.7節、11-10節、16.7-16.8節、附錄C、D、E以及部分習題等。

<譯者簡介>

周靜娟

學歷：美國Nova Southeastern大學資訊碩士

現職：明新科技大學電子工程系講師

研究領域：電路設計、程式設計、自動量測

顏培仁

學歷：國立交通大學光電碩士 

現職：明新科技大學電子工程系講師

研究領域：電子實習、單晶片微電腦、FPGA設計實務

呂明峰

學歷：國立交通大學電子研究所博士

現職：明新科技大學電子工程系副教授

研究領域：半導體製程、光電元件模擬、光子晶體

陳啟文

學歷：國立成功大學電機博士

現職：明新科技大學電子工程系副教授

研究領域：半導體元件、積體電路工程技術

<本書目錄>

第1章 簡介：數字系統與轉換 

第2章 布林代數 

第3章 布林代數（續） 

第4章 布林代數全及項與全或項展開式的應用

第5章 卡諾圖 

第6章 多階閘電路/NAND和NOR閘

第7章 利用邏輯閘做組合電路設計與模擬

第8章 多工器、解碼器及可程式規劃邏輯元件

第9章 VHDL簡介

第10章 栓鎖器與正反器

第11章 暫存器和計數器

第12章 時控式序向電路之分析

第13章 狀態圖與狀態表之推導

第14章 狀態設定與狀態表之化簡

第15章 序向電路之設計

第16章 算術運算電路

第17章 利用SM圖設計狀態機

附錄A MOS和CMOS邏輯 

附錄B VHDL語言總整理",https://cf-assets1.tenlong.com.tw/images/81615/medium/products_images_1386061783.jpg
Python 從初學到生活應用超實務：讓 Python 幫你處理日常生活與工作中繁瑣重複的工作,陳會安   著,博碩文化,9789864345168,2020/10/16,"本書特色

「實作」為程式學習上不可缺少的部分，「應用」更是持續學習程式設計動機的來源。本書提供眾多立即可用的實際生活應用範例，包含：網路資料擷取、Open Data、資料視覺化、社群網路、影片和圖片等多媒體資料處理、Word及Excel的Office自動化、自動化批次檔案處理、瀏覽器自動化與MySQL資料庫⋯⋯等，此外，更結合Python人工智慧的對話訓練，可以讓你建立特定領域的「LINE BOT客服機器人 」；而非僅能回應訊息的鸚鵡機器人。

內容簡介

☛ 初學Python快速入門，從入門到實際的生活應用，完整說明人工智慧世代一定需要具備的Python程式設計能力。

☛ 本書讓你學得到Python；馬上用得到Python；還能夠「真正活用」Python來解決你日常生活、學習和工作上的問題。

☛ 完整說明Python自動化批次處理檔案搜尋、更名、縮圖、轉換圖檔格式、找出重複圖片、在圖片加上浮水印和合併影片等自動化操作。

 

 



    

    作者簡介
    
      陳會安

現 職

專職資訊圖書作者、大專資訊課程老師

經 歷

企業講師、松崗電腦產品經理、美商PH出版經理、專業電腦書

作者。

資訊技術作家，出版超過 100 本電腦著作， 包括： 程式設計（C / C + + 、J a v a 、C # 、（ H T M L 5 、P H P 、ASP.NET、JSP等）、資料庫、系統分析、資料結構等各種不同主題。近年研究人工智慧、機器學習 / 深度學習、資料科學、網路爬蟲、大數據分析和物聯網相關課程與圖書寫作，也熱衷利用Raspberry Pi 、 Arduino 、ESP8266 / ESP32 和 Micro:bit 等開發板製作創客作品，投入創客領域的教學與寫作。

fChart 程式設計教學工具官方網址：

https://fchart.github.io/

    

    目錄大綱
    
      01 Python 基本語法

1-1 認識Python 語言

1-2 變數

1-3 指定敘述

1-4 資料型別

1-5 輸入與輸出

1-6 運算子與運算式

02 流程控制

2-1 認識流程控制結構

2-2 關係與邏輯運算子

2-3 選擇結構

2-4 重複結構

2-5 在重複結構使用else 程式區塊

03 字串與容器型別

3-1 字串

3-2 串列

3-3 元組

3-4 字典

3-5 字串與容器型別的運算子

04 函式、模組、檔案與例外處理

4-1 Python 函式

4-2 在Python 程式使用模組

4-3 檔案操作和路徑處理

4-4 文字檔案讀寫

4-5 例外處理程式敘述

05 應用實務：網頁資料分析與擷取

5-1 解析URL 網址

5-2 取得HTTP 請求的網頁資料

5-3 了解與分析HTML 網頁資料

5-4 使用BeautifulSoup 擷取網頁資料

5-5 生活應用：將HTML 表格資料寫入CSV 檔案

5-6 生活應用：擷取Yahoo! 本週新片資訊

06 應用實務：Open Data 與JSON

6-1 Open Data 與Web API

6-2 JSON 資料處理

6-3 從網路下載和剖析JSON 資料

6-4 生活應用：Google 圖書查詢服務

6-5 生活應用：取得OpenWeatherMap 天氣資料

07 應用實務：取得即時YouBike 和牌告匯率資訊

7-1 判斷網頁或下載資料是否有更新

7-2 Python 程式版Excel – Pandas

7-3 生活應用：取得即時台銀牌告匯率

7-4 生活應用：YouBike 資料下載與分析

08 應用實務：股票統計圖表的資料視覺化

8-1 認識資料視覺化

8-2 使用Matplotlib 繪製圖表

8-3 Pandas 資料視覺化– 使用YouBike 資料

8-4 生活應用：下載股票資料繪出統計圖表

09 應用實務：取得Facebook 資料與爬取Instagram 圖片

9-1 使用Facebook 圖形API

9-2 取得你的Facebook 資料

9-3 在Python 程式存取INI 配置檔

9-4 生活應用：取得Facebook 大頭貼照

9-5 生活應用：爬取和下載Instagram 圖片

10 應用實務：YouTube 影片下載與影片剪輯

10-1 使用pytube3 下載YouTube 影片

10-2 MoviePy 影片剪輯

10-3 Tkinter 建立視窗GUI 介面

10-4 生活應用：一次下載多個YouTube 影片

10-5 生活應用：視窗版YouTube 影片下載器

11 應用實務：網路圖片下載與影像處理

11-1 下載網路圖片

11-2 PIL 影像處理

11-3 Tesseract-OCR 將圖片轉文字

11-4 生活應用：視窗版圖片下載器

11-5 生活應用：在影像套用濾鏡特效

12 應用實務：AI 人工智慧LINE Bot 聊天機器人

12-1 設定LINE Bot API

12-2 建立LINE Bot 聊天機器人

12-3 ChatterBot 的AI 對話訓練

12-4 生活應用：AI 人工智慧LINE Bot 客服/ 問答機器人

13 應用實務：Word 與Excel 的Office 自動化

13-1 Word 文件自動化

13-2 Excel 試算表自動化

13-3 生活應用：調整所有Word 標題文字的樣式與對齊

13-4 生活應用：將取得資料新增至Excel 試算表

13-5 生活應用：使用Pandas 合併Excel 試算表

14 應用實務：批次處理檔案操作與搜尋自動化

14-1 os 與shutil 模組的檔案操作自動化

14-2 使用正規表達式

14-3 生活應用：批次重新命名和移動檔案

14-4 生活應用：多媒體檔案操作自動化

14-5 生活應用：在多文字檔和Word 檔案搜尋關鍵字

15 應用實務：Chrome 瀏覽器自動化

15-1 認識與安裝Selenium

15-2 Selenium 的基本使用

15-3 使用Selenium 定位網頁資料

15-4 使用Selenium 與HTML 表單進行互動

15-5 生活應用：擷取個股日成交資訊

15-6 生活應用：擷取NBA 球員的分頁統計資料

16 應用實務：將取得資料存入資料庫

16-1 認識與使用MySQL 資料庫

16-2 SQL 結構化查詢語言

16-3 PyMySQL 模組存取MySQL 資料庫

16-4 生活應用：Pandas 讀取與寫入MySQL 資料庫

16-5 生活應用：將YouBike 資料存入MySQL 資料庫

A 安裝與使用Python 開發環境 - Anaconda 和WinPython

（電子書，所有本書內文所提到的附錄A，請上博碩官網下載）

A-1 Anaconda 整合散發套件

A-2 WinPython 整合散發套件

A-3 Spyder 整合開發環境的使用

A-4 Python IDLE 整合開發環境的使用

A-5 使用pip 安裝Python 套件",https://cf-assets2.tenlong.com.tw/products/images/000/153/193/medium/MP22022.jpg?1601456801
"依賴注入：原理、實作與設計模式 (Dependency Injection: Principles, Practices, Patterns, 2/e)","Steven van Deursen, Mark Seemann 著
          錢亞宏 譯",博碩文化,9789864344987,2020/7/30,"【名家名著】 21



想要讓程式更具彈性、更容易測試、更接近clean code，

你需要降低元件之間的耦合度，

依賴注入將是你強而有力的工具！

它是組合取代繼承的重要實踐！



Odd-e Taiwan 敏捷技術教練 陳仕傑（91）專文推薦



名人盛讚

「我非常推薦與認同書裡的脈絡安排與學習順序，其實戰性毋庸置疑。」

──Odd-e Taiwan 敏捷技術教練：陳仕傑（91）



「實用的範例內容讓原本虛無縹渺的概念具體化了... 作得太好了。」

 

──Glenn Block，來自Microsoft



「內容豐富、思路清晰、指引明確、而且... 永久受用。」

 

──David Barkol，來自Neudesic



「這本書正是所有.NET 軟體設計師需要的。」

──Paul Grebenc，來自PCA Services



「這本書把那些原本雲裡霧裡的模糊觀念全都撥雲見日。」

──Rama Krishna，來自3C Software



「跟隨這本書的獨特思維，深入學習現代軟體開發的實務原則。極度推薦！」

──Darren Neimke，來自HomeStart Finance



「對依賴注入議題所需要知道的一切都在這本書裡了，保證物超所值！」

──Jonas Bandi，來自TechTalk



「想了解依賴注入必讀之書。」

──Braj Panda，來自Capgemini India



「這本書是你在.NET 開發框架上的依賴注入架構指引經典。」

──Doug Ferguson，來自Improving Enterprises



「要讓軟體保持彈性應付多變的需求，就必須降低元件之間的依賴性。如果能夠把依賴性在使用時才注入，就能保持軟體發展的最大彈性，而這就是依賴注入。依賴注入是一項成果，應用這項成果最多的則是各式各樣的框架（尤其是Web框架），例如.NET Core、Spring Boot。依賴注入活用了眾多的設計模式，而這些設計模式則充分利用了OOP的多型來進行軟體的OOD。很少有作者可以把依賴注入寫得如此易學與完整，所以這本書毫無疑問成為該領域不可或缺的大部頭書籍，博碩文化引進本書翻譯為繁體中文，期待藉由這本書能大幅提升台灣程式設計師的軟體設計思維。」

──博碩文化 總編輯 陳錦輝



----



要降低軟體元件之間的緊耦合程度，最好的方法便是引入「依賴注入（DI，Dependency Injection）」技術。在鬆耦合架構下，不用再自己手動指定資料庫連線時要使用的驅動，而是透過一個可被替換的第三方元件進行。本書將說明如何在ASP.NET Core這類應用程式框架下，利用DI架構幫助你管理軟體中的變更與複雜度議題。



《依賴注入-原理、實作、與設計模式》的前身是來自於暢銷經典書籍《Dependency Injection in .NET》一書的重編與增量版本。本書會從基礎開始從頭介紹何謂DI架構，並且在說明打造具備鬆耦合與完善架構的應用程式上，會遇到哪些設計模式、應避免的反模式、並且對此提出可供參考的範例內容。這些以C#程式語言寫成的範例，具備完善的說明註解並搭配圖表，可以幫助讀者在以現代物件導向程式語言以及支援DI架構的容器函式庫進行開發時，順暢無誤地遵循實務原則與設計模式。



本書內容

❖教你如何將既有程式碼，重構為鬆耦合架構

❖以標準物件導向程式語言觀點來實作的DI技巧

❖與標準.NET框架整合的教學內容

❖將舊版範例內容重新編寫，以.NET Core框架來示範DI架構



本書適合那些對物件導向程式語言已有一定熟悉的讀者。



延伸閱讀：

《無瑕的程式碼》系列叢書

《單元測試的藝術》

《領域驅動設計》

《Working Effectively with Legacy Code中文版》



    

    作者簡介
    
      Steven van Deursen

自2002年起，便於荷蘭從事自由聘僱的.NET開發者與軟體架構設計師至今。生活於荷蘭奈美亨市，不論是基於興趣或出於謀生，他都很享受編寫程式的生涯。但除了編寫程式之外，Steven 也會透過武術鍛鍊身心、出門享受美食、並且還是醇美威士忌的愛好者。

Mark Seemann

居住於丹麥哥本哈根市，是一名程式設計師、軟體架構設計師、以及講師。自1995年起他便從事軟體業界至今，而後於2003年起投身於TDD測試驅動開發推動，而後在Microsoft中任職顧問、開發者、以及架構設計師有六年職涯。Mark如今在哥本哈根持續發揮其專業進行軟體開發。他熱愛閱讀、繪畫、彈奏吉他、品嚐美酒與美食。

    

    目錄大綱
    
      關鍵字關係圖

推薦序

來自本書第一版的讀者回饋

前言

致謝

關於本書

推薦對象

本書概要

格式說明與檔案下載

線上討論區

作者簡介

PART I 朝著依賴注入邁進

Chapter 1 依賴注入的基礎：定義、理由與實作方法

1.1 編寫易於維護的程式碼

1.1.1 對依賴注入的常見誤解

1.1.2 為何需要依賴注入

1.2 初步的範例：Hello DI!

1.2.1 Hello DI!的程式碼

1.2.2 依賴注入能帶來的好處

1.3 適合與不適合注入的對象

1.3.1 穩定依賴性

1.3.2 不穩定依賴性

1.4 依賴注入在軟體中牽涉的範疇

1.4.1 物件的組合

1.4.2 物件的生命週期

1.4.3 物件的攔截

1.4.4 三種不同面向上的 DI

1.5 小結

重點回顧

Chapter 2 緊耦合架構

2.1 先寫一份緊耦合架構出來

2.1.1 以 Mary Rowan 為例

2.1.2 建立資料層

2.1.3 建立業務層

2.1.4 建立展示層

2.2 評估緊耦合架構應用程式

2.2.1 依賴關係圖

2.2.2 對可組合性的評估

2.3 缺乏可組合性的問題根源

2.3.1 對依賴關係圖的剖析

2.3.2 對資料層的剖析

2.3.3 其他需要關注的問題

2.4 小結

重點回顧

Chapter 3 鬆耦合架構

3.1 重新打造電商網站應用程式

3.1.1 打造更具可維護性的展示層

3.1.2 打造獨立於依賴的業務層

3.1.3 打造新的資料層

3.1.4 配合 ASP.NET 核心所實作的 IUserContext

3.1.5 在「組合根」組裝你的應用程式

3.2 分析鬆耦合架構應用程式

3.2.1 元件之間的互動關係

3.2.2 分析新的依賴關係圖

3.3 小結

重點回顧

PART II 分門別類

Chapter 4 DI 設計模式

4.1 組合根

4.1.1 組合根的運作方式

4.1.2 在組合根上運用 DI 容器

4.1.3 範例：純 DI 架構的組合根

4.1.4 依賴數量的爆增表象

4.2 建構子注入

4.2.1 建構子注入的運作方式

4.2.2 建構子注入的使用時機

4.2.3 建構子注入的使用實例

4.2.4 範例：在主打商品清單加上貨幣轉換功能

4.2.5 結論是...

4.3 方法注入

4.3.1 方法注入的運作方式

4.3.2 方法注入的使用時機

4.3.3 方法注入的使用實例

4.3.4 範例：在 Product 資料實體加入貨幣轉換

4.4 屬性注入

4.4.1 屬性注入的運作方式

4.4.2 屬性注入的使用時機

4.4.3 屬性注入的使用實例

4.4.4 範例：利用屬性注入來擴展可重複利用的函式庫

4.5 如何選擇設計模式

4.6 小結

重點回顧

Chapter 5 DI 反模式

5.1 控制狂

5.1.1 範例：建立依賴關係時的控制狂

5.1.2 範例：工廠模式下的控制狂

5.1.3 範例：對建構子多載時的控制狂

5.1.4 對控制狂反模式的反思

5.2 服務定位

5.2.1 範例：ProductService 中的服務定位

5.2.2 對服務定位反模式的反思

5.3 環境物件

5.3.1 範例：查詢時間用的環境物件

5.3.2 範例：紀錄時用的環境物件

5.3.3 對環境物件反模式的反思

5.4 限制性建構

5.4.1 範例：ProductRepository 的晚期繫結

5.4.2 對限制性建構反模式的反思

5.5 小結

重點回顧

Chapter 6 程式異樣

6.1 建構子過度注入的程式異樣

6.1.1 辨識建構子過度注入

6.1.2 將建構子過度注入重構為前台模式

6.1.3 將建構子過度注入重構為業務事件

6.2 抽象工廠的濫用

6.2.1 為了生命週期問題而濫用了抽象工廠

6.2.2 為了在執行期決定依賴對象而濫用抽象工廠

6.3 循環依賴

6.3.1 範例：違反 SRP 原則造成的循環依賴

6.3.2 分析 Mary 的依賴循環

6.3.3 解決違反 SRP 問題以重構循環依賴

6.3.4 打破依賴循環的策略

6.3.5 最終手段：以屬性注入來打破依賴的循環

6.4 小結

重點回顧

PART III 單純 DI 架構

Chapter 7 應用程式的物件組合

7.1 指令列介面應用程式的物件組合

7.1.1 範例：以 UpdateCurrency 程式來更新貨幣匯率

7.1.2 建立 UpdateCurrency 程式的組合根

7.1.3 在 CreateCurrencyParser 中組合物件關聯

7.1.4 剖析 UpdateCurrency 的架構層

7.2 通用 Windows 平台應用程式的物件組合

7.2.1 UWP 應用程式的物件組合

7.2.2 範例：建立一個商品管理 app

7.2.3 在UWP 應用程式中實作組合根

7.3 ASP.NET 核心 MVC 框架應用程式的物件組合

7.3.1 自訂一個 Controller 啟動器

7.3.2 在單純DI 架構建立自訂的中介層

7.4 小結

重點回顧

Chapter 8 物件生命週期

8.1 管理依賴對象的生命週期

8.1.1 生命週期的管理

8.1.2 在單純 DI 架構下管理生命週期

8.2 處理依賴的廢棄問題

8.2.1 處理可廢棄依賴對象

8.2.2 管理可廢棄的依賴對象

8.3 生命週期型態彙整

8.3.1 單例型態

8.3.2 一次性型態

8.3.3 作用域型態

8.4 不良生命週期型態

8.4.1 被綁架的依賴

8.4.2 抽象漏洞造成的生命週期型態資訊洩漏

8.4.3 與執行緒生命週期綁定的物件會造成並行上的問題

8.5 小結

重點回顧

Chapter 9 介入攔截

9.1 關於攔截

9.1.1 裝飾者設計模式

9.1.2 範例：以裝飾者模式實作稽核機制

9.2 實作橫切關切點

9.2.1 以攔截實作斷路器設計模式

9.2.2 在回報例外錯誤時利用裝飾者模式

9.2.3 在保護機敏功能避免非法存取時利用裝飾者模式

9.3 小結

重點回顧

Chapter 10 設計面上的剖面導向程式設計

10.1 何謂剖面導向程式設計

10.2 關於 SOLID 五原則

10.2.1 單一職責原則（SRP）

10.2.2 開放封閉原則（OCP）

10.2.3 里氏替換原則（LSP）

10.2.4 介面切離原則（ISP）

10.2.5 依賴反轉原則（DIP）

10.2.6 攔截與 SOLID 五原則之間的關係

10.3 透過 SOLID 五原則達成AOP

10.3.1 範例：以 IProductService 實作商品相關功能項目

10.3.2 以 SOLID 五原則的觀點分析 IProductService

10.3.3 遵循 SOLID 五原則改善設計

10.3.4 添加更多橫切關切點機制

10.3.5 本章結語

10.4 小結

重點回顧

Chapter 11 以工具實作的剖面導向程式設計

11.1 動態攔截

11.1.1 範例：以 Castle Dynamic Proxy 實作攔截

11.1.2 對動態攔截的分析

11.2 後編譯織入

11.2.1 範例：利用後編譯織入實作交易階段剖面

11.2.2 對後編譯織入的分析

11.3 小結

重點回顧

PART IV DI 容器技術

Chapter 12 DI 容器

12.1 關於 DI 容器技術

12.1.1 關於容器技術的解析 API

12.1.2 自動裝配

12.1.3 範例：實作自動裝配功能的簡易 DI 容器

12.2 設定 DI 容器

12.2.1 以設定檔來設定容器

12.2.2 以程式化設定來設定容器

12.2.3 以自動註冊功能達到規範先於設定的容器設定方式

12.2.4 不同設定方式之間的搭配

12.3 採用 DI 容器技術的時機

12.3.1 引入第三方函式庫的成本與風險

12.3.2 單純 DI 架構能有更快的回饋循環

12.3.3 採用 DI 容器技術的確切時機

12.4 小結

重點回顧

Chapter 13 DI 容器介紹：Autofac

13.1 介紹 Autofac

13.1.1 物件解析

13.1.2 對 ContainerBuilder 的設定

13.2 管理生命週期

13.2.1 設定物件作用域

13.2.2 釋放元件

13.3 以進階 API 執行註冊

13.3.1 設定基本型別的依賴關係

13.3.2 指定物件產生來源的註冊方式

13.4 多重註冊關係的處理方式

13.4.1 多個對映選項下的抉擇方式

13.4.2 對序列的裝配

13.4.3 裝飾元件的裝配

13.4.4 合成元件的裝配

13.5 小結

重點回顧

Chapter 14 DI 容器介紹：Simple Injector

14.1 介紹 Simple Injector

14.1.1 物件解析

14.1.2 對 Container 的設定

14.2 管理生命週期

14.2.1 設定生命週期型態

14.2.2 釋放元件

14.2.3 作用域的全域管理

14.2.4 對常見生命週期議題的偵測分析

14.3 以進階 API 執行註冊

14.3.1 設定基本型別的依賴關係

14.3.2 將基本型別依賴轉為參數物件

14.3.3 指定物件產生來源的註冊方式

14.4 多重註冊關係的處理方式

14.4.1 多個對映選項下的抉擇方式

14.4.2 對序列的裝配

14.4.3 裝飾元件的裝配

14.4.4 合成元件的裝配

14.4.5 其實有著串流內在的序列

14.5 小結

重點回顧

Chapter 15 DI 容器介紹：Microsoft.Extensions.DependencyInjection

15.1 介紹Microsoft.Extensions.DependencyInjection

15.1.1 物件解析

15.1.2 對 ServiceCollection 的設定

15.2 管理生命週期

15.2.1 設定生命週期型態

15.2.2 釋放元件

15.3 以進階 API 執行註冊

15.3.1 設定基本型別的依賴關係

15.3.2 將基本型別依賴轉為參數物件

15.3.3 指定物件產生來源的註冊方式

15.4 多重註冊關係的處理方式

15.4.1 多個對映選項下的抉擇方式

15.4.2 對序列的裝配

15.4.3 裝飾元件的裝配

15.4.4 合成元件的裝配

15.5 小結

重點回顧

術語表

參考文獻",https://cf-assets2.tenlong.com.tw/products/images/000/150/468/medium/MP11901.jpg?1594973390
TensorFlow 2.x 人工智慧、機器學習超炫範例 200+(附影音教學影片、範例程式),柯博文,碁峰資訊,9789865026288,2020/10/22,"【嚴選經典】美國矽谷創業家/全球科技大廠與業界指定工研院顧問講師

親自錄製231支影音教學影片，如臨現場授課！



【聯合推薦】

嘉義基督教醫院兒童醫學部主任、嘉基創新育成中心主任 周信旭醫師

Eco-City智慧生活科技區域整合中心執行長、國立交通大學土木工程系 曾仁杰教授

台北榮民總醫院神經外科、國立陽明大學研究所兼任助理教授 關艾琛醫師



本書為作者柯博文老師繼《Python+TensorFlow人工智慧、機器學習、大數據｜超炫專案與完全實戰》規劃的進階書籍，歷經業界頂尖的工程師學員多次考驗，實戰多年後才匯集成冊。包含Python、機器學習、人工智慧、TensorFlow、Keras、OpenCV等相關API的使用方法，且每個範例都是實戰程式。

◎ 提供豐富的線上下載：204個範例程式、231支影音教學影片。

◎ 介紹人工智慧的開發技巧，並且近乎100%準確度。

◎ 大量使用業界數據、OpenData開放資料進行分析和預測，上百萬種數據讓你應用。

◎ 以Python撰寫類神經的數學公式，讓讀者理解人工智慧演算法的來龍去脈，進而調整數學式讓準確度更好。

◎ 範例豐富多元，將人工智慧運用在農業、氣象預報、手寫OCR、圖片學習等人工智慧實戰。

◎ 結合Tensorflow.Keras和OpenCV自行產生數據庫，使用WebCam即時辨識圖片，並且實際應用在專案中。

◎ 使用最新高難度的VGG16、VGG19、ResNet50、Xception、Inception、DenseNet121、Fast R-CNN等演算法，並訓練自己的物件，使用COCO和ImageNet辨識近萬種物體。



    


    目錄大綱
    
      1.Python程式語言

2.Python程式語言安裝

3.開發程式和工具

4.TensorFlow介紹和安裝

5.TensorFlow的類別神經網路－MLP快速上手

6.TensorFlow改善類神經模型MLP的正確率

7.TensorFlow神經網路模型實戰案例

8.TensorFlow神經網路－神經元

9.MLP 神經網路－數學理論

10.TensorFlow神經網路隱藏層

11.TensorFlow最短路徑演算法

12.TensorFlow存取模型和訓練結果

13.TensorFlow神經網路MLP－迴歸

14.實戰圖形辨識

15.卷積神經網路CNN

16.OpenCV和TensorFlow卷積神經網路CNN即時辨識

17.卷積神經網路原理

18.卷積神經網路準確率技巧

19.圖學網路應用模組

20.實戰多影像辨識

21.多影像辨識技術",https://cf-assets2.tenlong.com.tw/products/images/000/153/640/medium/ACL058500.jpg?1602577510
乾脆一次搞清楚：最完整詳細網路協定全書,劉超,深智數位,9789865501396,2020/7/21,"本書有以下幾個特點。

第一，會從身邊經常見到的事情出發，用講故事的方式來說明各種協定，然後慢慢擴大到不熟悉的領域。舉例來說，每個人都會使用檢視IP 位址的指令，我們就從這個指令開始，說明一些相關概念。每個人都在大學宿舍組過簡單的網路來打電動，我們就從宿舍網路有關的最簡單的網路概念開始講，然後說到辦公室網路，再說到日常常用的與上網、購物、視訊下載等活動相關的網路通訊協定，最

後才說到最陌生的資料中心。說到這裡的時候，很多概念已經在前面的「宿舍」和「辦公室」的實例中都出現過，因此更容易接受和了解。

第二，說明網路通訊協定時會更加接近使用場景，將各個層次的關係串連起來，而非孤立地說明某個概念。常見的電腦網路課程常常會按照網路分層，一層一層地講，卻很少講層與層之間的關係。舉例來說，我們在學習路由式通訊協定的時候，在真實場景中，這麼多的演算法和二層是什麼關係呢？和四層又是什麼關係呢？再舉例來說，我們在真實的網路通訊中造訪一個網站、進行一次支付，那麼在TCP 三次驗證的時候，IP 層在做什麼？ MAC 層在做什麼？這些內容本書都會逐一說明。

第三，在說明完各個層次的協定之後，會說明如何在目前熱門領域（例如雲端運算、容器和微服務）中使用這些協定。透過學習本書，讀者一方面可以了解這些網路通訊協定的真實應用場景，另一方面也可以透過上手使用雲端運算、容器、微服務來進一步加深對於網路通訊協定的了解。

透過學習本書，讀者一方面可以了解這些網路通訊協定的真實應用場景，另一方面也可以透過上手使用雲端運算、容器、微服務來進一步加深對於網路通訊協定的了解。



    

    作者簡介
    
      劉超

上海交通大學畢業，曾就職於戴爾、CCTV證券資訊頻道、惠普、華為，目前就職於網易杭州研究院，擔任雲端運算技術部首席架構師，從事容器、Kubernetes和微服務的架構工作。

    

    目錄大綱
    
      01通訊協定概述

1.1為什麼要學習網路通訊協定

1.2 網路分層的真實含義

1.3 ifconfig：熟悉又陌生的命令列

1.4 DHCP 與PXE：IP 位址是怎麼來的，又是怎麼沒的

02 從二層到三層

2.1 從實體層到MAC 層：如何在宿舍裡自己網路拓樸玩連線遊戲

2.2 交換機與VLAN：辦公室太複雜，我要回學校

2.3 ICMP 與ping：投石問路的偵察兵

2.4 世界這麼大，我想出閘道：歐洲十國游與玄奘西行

2.5 路由式通訊協定：「西出閘道無故人」「敢問路在何方」

03 最重要的傳輸層

3.1 UDP：雖然簡單但是可以訂製化

3.2 TCP（上）：雖然複雜，使用起來卻輕鬆

3.3 TCP（下）：西行必定多妖孽，恆心智慧消磨難

3.4 socket：Talk is cheap, show me the code

04 最常用的應用層

4.1 HTTP：看個新聞原來這麼麻煩

4.2 HTTPS：點外賣的過程原來這麼複雜

4.3 串流媒體協定：如何在直播裡看到帥哥美女

4.4 P2P 協定：下載電影，分散式協定速度快

05 陌生的資料中心

5.1 DNS：網路世界的地址簿

5.2 HTTPDNS：網路世界的地址簿也會指錯路

5.3 CDN：你去超商取過快遞嗎

5.4 資料中心：我是開發廠商，自己拿地蓋別墅

5.5 VPN：朝中有人好做官

5.6 行動網路：去巴塞隆納，手機也上不了「臉書」

06 雲端運算中的網路

6.1 雲端網路：自己拿地成本高，購買公寓更靈活

6.2 軟體定義網路：共用基礎設施的社區物業管理辦法

6.3 雲端網路之安全：雖然不是土豪，也需要基本保障

6.4 雲端網路之QoS：室友瘋狂下電影，我該怎麼辦

6.5 雲端網路之隔離GRE、VXLAN：雖然住一個社區，也要保護隱私

07 容器技術中的網路

7.1 容器網路：來去自由的日子，不買公寓去合租

7.2 容器網路之Flannel：每人一畝三分地

7.3 容器網路之Calico：為了高效說出善意的謊言

7.4 RPC 概述：遠在天邊，近在眼前

08 微服務相關協定

8.1 以XML 為基礎的SOAP：不要說NBA，請說美國職業籃球聯賽

8.2 以JSON 為基礎的RESTful 介面協定：我不關心過程，請給我結果

8.3 二進位類別RPC 協定：還是叫NBA，總說全稱多費勁

8.4 跨語言類別RPC 協定：交流之前，雙方先交換一下專業術語表

09 網路通訊協定知識串講

9.1 知識串講：用「雙11」的故事串起網路通訊協定的碎片知識（上）

9.2 知識串講：用「雙11」的故事串起網路通訊協定的碎片知識（中）

9.3 知識串講：用「雙11」的故事串起網路通訊協定的碎片知識（下）

9.4 架設一個網路實驗環境：授人以魚不如授人以漁",https://cf-assets2.tenlong.com.tw/products/images/000/150/185/medium/%E6%B7%B1%E6%99%BA-DM2028-%E7%AB%8B%E9%AB%94%E6%9B%B8.jpg?1594112210
使用 Python 搜刮網路資料的 12堂實習課,何敏煌、葉柏漢、顏凰竹,博碩文化,9789864345212,2020/9/30,"網路爬蟲是AI範疇中，

取得資料與儲存的一項重要技能，

而Python是爬蟲過程中相當好用的工具



全書以簡單的Python程式為主軸，讓您可以輕鬆學會如何利用Python的模組擷取公開的網站資料、網頁內容，並建立自己的自動化爬蟲程式，增進您在網路上搜刮資料的能力與效率，是已具有Python基礎的學習者最佳的爬蟲入門工具書。

在本書中我們將學會使用以下的Python開發環境、模組及框架：

 

 


	
		
			Thonny
			Jupyter Notebook
			requests
		
		
			json
			csv
			re
		
		
			xlrd
			BeautifulSoup
			Selenium
		
		
			sqlite3
			mysql
			pymongo
		
		
			pyinstaller
			Scrapy
			pyautogui
		
	


 



並學習如何擷取以下的幾種網站：

 

 

 

 

 


	
		
			☑大學網站的焦點新聞頁面
			☑政府公開資訊網站
		
		
			☑即時新聞網站標題、內容、圖片
			☑汽車網站之車款資訊及二手車在庫資訊
		
		
			☑銀行網站之匯率資料擷取
			☑中央氣象局之氣溫觀測資訊
		
		
			☑Ptt八卦版年齡宣告按鈕及Ptt討論區貼文擷取
			☑網路書店暢銷書排行榜
		
		
			☑股市網站財經新聞
			☑線上購物網站產品資訊
		
		
			☑名言佳句範例網站
			☑台灣證券交易所股票資訊
		
		
			☑Dcard梗圖下載
			☑台灣運彩官網資訊
		
		
			☑Mobile01討論區貼文
			 
		
	


 



★本書特色★

✪了解網站、網頁、瀏覽器間的關係，認識爬蟲程式

✪了解網路上格式HTML/CSV/JSON/XLSX

✪使用requests模組取得網路上的資料

✪擷取及解析JSON及CSV格式資料檔案

✪利用Regular Expression及BeautifulSoup模組剖析網頁資料

✪活用Chrome開發人員工具找出網頁中特定資料的CSS選擇器內容

✪使用Selenium自動化工具擷取動態網頁

✪把擷取的資料儲存到MySQL及MongoDB資料庫

✪利用排程器做到自動化資料擷取及通知的功能

✪透過Scrapy框架建立爬蟲程式，大量搜刮資料

 

 

 



    

    作者簡介
    
      何敏煌

國立交通大學資訊科學博士，現任職於國立高雄科技大學博雅教育中心，平時除了研究KVM虛擬雲端容錯與分散式系統相關技術之外，也利用閒暇之餘致力於推廣資訊科技、Maker自學課程、與程式設計教育。個人網站：http://drho.club。

    

    目錄大綱
    
      第1堂 認識網站與網路爬蟲原理

1-1 什麼是爬蟲程式

1-2 瀏覽器與網頁伺服器

1-3 從網站下載資料的概念與原理

1-4 本書程式執行環境的建立

1-5 習題



第2堂 快速了解網路資料格式

2-1 HTML/CSS

2-2 CSV

2-3 JSON

2-4 XLS/XLSX

2-5 習題



第3堂 擷取網頁資料基礎

3-1 requests模組介紹與使用

3-2 資料檔案存取

3-3 網路公開資訊CSV格式讀取實例

3-4 網路公開資訊JSON格式讀取實例

3-5 習題



第4堂 HTML網頁剖析基礎

4-1 使用Regular Expression剖析網頁

4-2 使用BeautifulSoup剖析網頁

4-3 新聞網站之擷取與儲存

4-4 網頁圖形檔之擷取與儲存

4-5 習題



第5堂 HTML網頁剖析實務

5-1 Jupyter Notebook安裝與使用

5-2 Chrome開發人員工具

5-3 活用表單查詢存取資料

5-4 新聞網站內容之擷取與儲存

5-5 習題



第6堂 CSS選擇器基礎與活用

6-1 CSS 選擇器介紹

6-2 Selenium安裝與使用

6-3 動態網頁資料擷取

6-4 表單登入網頁擷取

6-5 習題



第7堂 MySQL資料庫儲存

7-1 資料庫與SQL

7-2 SQLite資料庫簡介與操作

7-3 MySQL資料庫系統安裝

7-4 MySQL資料庫操作實例

7-5 習題



第8堂 MongoDB資料庫操作

8-1 MongoDB安裝與操作

8-2 使用Python儲存資料

8-3 使用Python讀取資料

8-4 MongoDB資料庫應用實例

8-5 習題



第9堂 自動化資料擷取

9-1 自動化資料擷取程式

9-2 電子郵件通知實作

9-3 建立可執行檔

9-4 作業系統排程設定

9-5 習題



第10堂 Scrapy初階

10-1 Scrapy簡介與安裝

10-2 Scrapy Shell測試與練習

10-3 Scrapy專案檔案的編輯與執行

10-4 爬取網頁內容並儲存到資料庫

10-5 習題



第11堂 Scrapy 爬蟲實務

11-1 學校網頁資料爬取實例

11-2 新聞網站資料爬取實例

11-3 PTT討論區爬取實例

11-4 習題



第12堂 爬蟲實戰技巧及實例

12-1 活用pyautogui模組和網頁互動

12-2 Dcard梗圖爬取實例

12-3 下載無限捲動網頁內容

12-4 MOBILE01討論區爬取實例

12-5 車商二手車資料下載實例

12-6 習題



附錄 反爬蟲與反反爬蟲的戰爭

a-1 網站的robotstxt

a-2 User-Agent

a-3 頻繁的request請求

a-4 JavaScript程式動態產生的網頁

a-5 我不是機器人驗證

a-6 CAPTCHA和reCaptcha驗證碼

a-7 人機合作爬蟲程式解決驗證碼問題",https://cf-assets2.tenlong.com.tw/products/images/000/152/579/medium/MP21926.jpg?1600238310
"作業系統概念, 9/e (授權經銷版) (Operating System Concepts, 9/e)",Abraham Silberschatz、Peter B. Galvin、Greg Gagne 著、駱詩軒 譯,東華,9789574837939,2014/9/14,"恐龍版作業系統一直以來都是作業系統的最佳教材。

在第九版中，除了嚴謹的理論基礎之外，還加入了非常多，也非常重要的實作。

對於學習作業系統的學生而言，常常只是瞭解理論，但卻苦於沒有動手實作的機會，或是不知道如何將理論應用於實際的作業系統。因此，如果能夠透過本書的學習，將理論與實際配合，對於學習作業系統上的幫助必然可以想見。

以譯者的觀點，學習作業系統時，除了理論與演算法之外，如果能實際地使用虛擬機器、在虛擬機器上執行一個作業系統，甚至進而修改作業系統並與理論配合，對於學習者而言才不會淪為紙上談兵。

因此如果想真的學好作業系統，就配合本書，到網站下載虛擬機器，執行書中的Linux作業系統，然後按部就班的循序漸進，必然更能理解許多理論與演算法的精闢。

除了實作之外，本書加入了：

多核心系統與平行運算

行動系統，包含了 : iOS和Android、虛擬機器、Windows 7



    


    目錄大綱
    
      第一篇　總　論

CHAPTER 1　概　　說

CHAPTER 2　系統結構

第二篇　行程管理

CHAPTER 3　行程觀念

CHAPTER 4　多執行緒

CHAPTER 5　行程排班

CHAPTER 6　同　步

CHAPTER 7　死　結

第三篇 記憶體管理

CHAPTER 8　記憶體管理策略

CHAPTER 9　虛擬記憶體管理

第四篇 儲存裝置

CHAPTER 10　檔案系統

CHAPTER 11　檔案系統的製作

CHAPTER 12　輔助儲存結構

CHAPTER 13　輸入/輸出系統

第五篇 保護和安全

CHAPTER 14　系統保護

CHAPTER 15　系統安全性

第六篇 個案研究

CHAPTER 16　Linux系統

CHAPTER 17　Windows

CHAPTER 18　影響的作業系統",https://cf-assets1.tenlong.com.tw/images/86264/medium/9789574837939.jpg
"基礎資料結構 ─ 使用 C++ (Fundamentals of Data Structures in C++, 2/e)","Ellis Horowitz, Sartaj Sahni, Dinesh Mehta 著、戴顯權 譯",開發,9789868359703,2007/8/14,"本書特色

關於此書

最新版的經典資料結構書藉



這個最新版提供一個資料結構的廣泛且嚴謹介紹，例如陣列、堆疊、佇列、鏈結串列、樹、與圖形，以及形成所有軟體基礎的排序與雜湊方法。此外，本書也介紹了更進階或更特別的資料結構，例如優先權佇列、高效率二元搜尋樹、多重路徑搜尋樹、以及數位搜尋結構。



本書已經更新過，完全符合最新的C++ 語法與特徵。例外與樣版從頭到尾更完整地整合在一起。我們也有限度地接觸到STL。佇列、疊代器與動態雜湊的介紹也改進了。本書新討論的主題有：安全雜湊演算法、廣度偏頗左傾樹、成對堆積、對稱最小-最大堆積、區間堆積、由上往下斜張樹、B+ 樹、以及後綴樹。我們也使得紅-黑樹的單元更容易理解。在多重路徑決定樹的章節有重大的延伸，也討論了多種不同決定樹以及它們在網路封包傳遞的應用。





關於作者



Ellis Horowitz為南加州大學電機工程與計算機科學系的教授。Horowitz博士同時也是十本書以及許多篇期刊與會議論文的作者。



Sartaj Sahni是佛羅里達大學資訊科學與工程系的傑出教授兼系主任。Sahni博士已經發表了超過三百多篇研究論文並且撰寫了十五本教科書。



Dinesh Mehta為Colorado School of Mines數學與計算機科學系的教授兼助理主任。Mehta博士已經發表超過30篇的期刊及會議論文。",https://cf-assets1.tenlong.com.tw/images/38478/medium/9789868359703.jpg
0 陷阱！0 誤解！8 天重新認識 JavaScript！（iT邦幫忙鐵人賽系列書 - 02）,許國政 (Kuro),博碩文化,9789864344130,2019/9/3,"♕ iT邦幫忙鐵人賽系列書 No.2 ♕



前端領域在最近幾年來突飛猛進，不僅是ECMAScript，各種前端工具、框架一時百家爭鳴。

看了很多初入門JavaScript的朋友也許拿了工具會用，照著tutorial走一次也會動，但想自己客製化卻怎麼樣都改不動，好不容易試出來，卻不知道為什麼會動，這才是最可怕的。

尤其是一些從其他程式語言背景轉來寫JavaScript的朋友，可能大多數會覺得JavaScript有什麼難？不就跟○○○ (請自行帶入) 有87%像？

沒錯！但就是那關鍵13%的差異造成了世人對JavaScript這門程式語言的誤解。

本書就是希望能在這個主題當中，與各位讀者一起重新認識JavaScript：這個號稱「世界上最被人誤解的程式語言」。



內容簡介

本書內容是由作者在2018 iT邦幫忙鐵人賽 -「重新認識JavaScript」的系列文章改寫而成，主要針對剛接觸JavaScript或者對JavaScript不是那麼熟悉的讀者，說明JavaScript的基礎與常見的誤區。



四大主題

Part 1　JavaScript的歷史與基礎

此部分主要介紹JavaScript的簡介與語言基礎，期望能讓初學JavaScript的朋友快速上手。

Part 2　瀏覽器裡的JavaScript：BOM與DOM

有了基本的理解之後，接著來介紹JavaScript的主戰場「瀏覽器」！到底JavaScript是怎麼操作我們的網頁？那些人家說的DOM、事件又是怎麼一回事？jQuery真的再戰十年嗎？這個部分會有詳細的介紹。

Part 3　深入理解JavaScript核心：函式、物件、原型鍊

此部分帶領讀者深入理解JavaScript語言的核心概念：函式、物件、原型鍊，以及那些開發時會爆的各種粗口，遇到的各種坑。

Part 4　關於JavaScript的現在與未來

近年前端框架與開發生態圈的發展快速，究竟工具怎麼挑選？模組化？SPA與SSR又是什麼？CSS的管理、前端語言的預編譯？本書的最後，想花點篇幅與各位讀者聊聊JavaScript與前端生態圈的過去、現在與未來。



    

    作者簡介
    
      許國政 Kuro Hsu

☛ Vue.js Taiwan 社群主辦人，超過十年的前端開發經驗，長期專注網頁前端標準技術。

☛ 曾擔任 JSDC、WebConf、MOPCON、COSCUP 等大型研討會講者，也多次參與前端技術社群分享心得。

    

    目錄大綱
    
      Day 1　JavaScript 的起源與基礎 (上)

♦ JavaScript簡史

♦ 基礎知識與資料型別

♦ 物件、陣列以及型別的判斷

♦ 運算式與運算子

Day 2　JavaScript的起源與基礎 (下)

♦ 自動轉型的規則

♦ 流程判斷與迴圈

♦ 函式的基本概念

♦ JavaScript是「傳值」或「傳址」？

Day 3　前端工程師的主戰場：瀏覽器裡的JavaScript (上)

♦ 瀏覽器的物件模型：DOM 與BOM

♦ 透過DOM API查找與遍歷節點

♦ DOM Node的建立、刪除、修改與外觀

♦ BOM與window物件

Day 4　前端工程師的主戰場：瀏覽器裡的JavaScript (下)

♦ 事件機制的原理

♦ 網頁的事件與生命週期

♦ 隱藏在「事件」之中的秘密

Day 5　深入理解JavaScript核心：函式、物件、原型鍊 (上)

♦ 再談函式與參數

♦ Callback Function與IIFE

♦ 從Callback到Promise

♦ 從setTimeout與setInterval理解EventQueue

Day 6　深入理解JavaScript核心：函式、物件、原型鍊 (中)

♦ 閉包(closure)

♦ What's THIS in JavaScript

Day 7　深入理解JavaScript 核心：函式、物件、原型鍊 (下)

♦ 深入理解JavaScript物件

♦ 內建物件與包裹器

♦ 物件的原型鏈與繼承

♦ ES6的Class語法糖

Day 8　JavaScript 的現在與未來

♦ 從Page到Application談前端生態圈的演變

♦ JavaScript的現在與未來",https://cf-assets2.tenlong.com.tw/products/images/000/139/636/medium/MP21913.jpg?1566291641
奔跑吧！Linux kernel｜Linux 4.x kernel 關鍵與原始程式碼解析,"張天飛
          H&C",碁峰資訊,9789864768097,2018/8/1,"‧以Linux 4.x kernel和Android 7.x kernel為基礎

‧以ARM32/ARM64體系架構為基礎

‧以實際應用的問題為導向的kernel分析

‧介紹目前內核社群新的技術發展

‧介紹尖端新技術：EAS排程器、MCS鎖、QSpinlock、Dirty COW等

 

本書內容以Linux 4.x kernel為基礎，選取Linux kernel中最基礎和常用的記憶體管理、進程管理、並行與同步，以及中斷管理這4個kernel模組進行講述。全書共分為6章，依次介紹ARM體系結構、Linux記憶體管理、進程排程管理、並行與同步、中斷管理、kernel除錯技巧等內容。本書的每節內容都是獨立的Linux kernel主題或技術重點，讀者可根據每小節前的問題來思考研讀，進而從問題來對kernel原始程式碼進行分析。 



    


    目錄大綱
    
      Linux kernel 奔跑卷

 

第 1 章 處理器體系結構

 

第 2 章 記憶體管理

2.1 實體記憶體初始化

2.2 頁表的對映過程

2.3 kernel 記憶體的佈局圖

2.4 分配實體頁面

2.5 slab 分配器

2.6 vmalloc

2.7 VMA 操作

2.8 malloc

2.9 mmap

2.10 缺頁中斷處理

2.11 page 參照計數

2.12 反向對映 RMAP

2.13 回收頁面

2.14 匿名頁面生命週期

2.15 頁面遷移

2.16 記憶體規整（memory compaction）

2.17 KSM

2.18 Dirty COW 記憶體漏洞

2.19 總結記憶體管理資料結構和 API

2.20 最新更新和展望

 

第 3 章 進程管理

3.1 進程的誕生

3.2 CFS 排程器

3.3 SMP 負載均衡

3.4 HMP 排程器

 

第 4 章 並行與同步

4.1 原子操作與記憶體屏障

4.2 spinlock

4.3 訊號標

4.4 Mutex 互斥體

4.5 讀寫鎖

4.6 RCU

4.7 記憶體管理中的鎖

4.8 最新更新與展望

 

第 5 章 中斷管理

5.1 Linux 中斷管理機制

5.2 軟中斷和 tasklet

5.3 workqueue 工作佇列

 

第 6 章 kernel 除錯

6.1 QEMU 除錯 Linux kernel

6.2 ftrace

6.3 SystemTap

6.4 記憶體檢測

6.5 死鎖檢測

6.6 kernel 除錯秘笈",https://cf-assets2.tenlong.com.tw/products/images/000/121/814/medium/9789864768097.jpg?1531996970
"Python 機器學習 (上), 3/e (Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow, 3/e)","Sebastian Raschka、Vahid Mirjalili　著
          劉立民、吳建華　譯",博碩文化,9789864345182,2020/9/14,"Python機器學習第三版（上）

Python Machine Learning - Third Edition



循序漸進、由淺入深，好評熱銷再進化！最新修訂的《Python機器學習第三版》是一本不容錯過的全方位指南，也是讀者在建立機器學習系統時的必備參考。有別於其他機器學習教科書，本書使用Python探求機器學習和深度學習的技術精髓，強調豐富實用的程式範例、條理分明的數學解釋，以及直覺友善的圖解說明，帶領讀者探索機器學習的眾多子領域，讓艱澀的概念栩栩如生。



許多讀者告訴我們，他們非常喜歡本書第二版的前12章，因為它們全面介紹了機器學習與Python的科學計算。為了確保這些內容的相關性，我們依據讀者回饋，回顧並修改了這些章節，以支援最新版本的NumPy、SciPy、pandas、matplotlib和scikit-learn，並規劃成本書的上冊。而TensorFlow 2.0更是深度學習領域最振奮人心的事件之一，所有與TensorFlow有關的章節（第13章到第16章，規劃成本書的下冊）都進行了大幅度修改。除了介紹Keras API與scikit-learn的最新功能之外，本書也探討自然語言處理（NLP）的子領域「情緒分析」，以及強化學習（RL）和生成對抗網路（GAN）等時下最流行的AI技術（第17章和第18章）。



無論你是有經驗的程式設計師，或是機器學習新手，或你只想進一步深入了解機器學習的最新發展，本書將是你在機器學習之旅中的絕佳良伴。



在這本書中，你將學到：

⦁ 掌握能讓機器從數據中「學習」的框架、模型和技術

⦁ 使用scikit-learn進行機器學習、使用TensorFlow進行深度學習

⦁ 利用機器學習來做影像分類、情緒分析與智慧Web應用程式

⦁ 訓練類神經網路、GAN與其它模型

⦁ 結合機器學習模型與Web應用程式

⦁ 為機器學習工作清理並準備數據

⦁ 用深度卷積類神經網路來分類影像

⦁ 了解評估和調校模型的最佳實作

⦁ 使用迴歸分析來預測連續目標

⦁ 利用「集群」來發掘數據中隱藏的模式與結構

⦁ 使用「情緒分析」深入研究文本和社群媒體數據

⦁ 上冊包含本書前12章，下冊則包含第13章到第18章。



【下載範例程式檔案】

本書的程式碼是由GitHub託管，可點選下面圖案前往下載：

https://github.com/rasbt/python-machine-learning-book-3rd-edition



【下載本書的彩色圖片】

我們還提供您一個PDF檔案，其中包含本書使用的彩色圖表，可以在此下載：

https://static.packt-cdn.com/downloads/9781789955750_ColorImages.pdf

 


        

    

    作者簡介
    
      Sebastian Raschka　擁有密西根州立大學（Michigan State University）的博士學位，在那裡，他專攻開發將「計算生物學」（computational biology）與「機器學習」結合使用的方法。2018年的夏天，他加入威斯康辛大學麥迪遜分校（University of Wisconsin-Madison），擔任「統計學」的助理教授。他的研究活動包括開發「新的深度學習架構」來解決生物識別（biometrics）領域的問題。



他引以為傲的成就之一是他的著作《Python機器學習》，這也是Packt和Amazon上的暢銷書。本書在2016年榮獲ACM的最佳計算類別獎項（Best of Computing award），並被翻譯成多種不同語言，包括德文、韓文、中文、日文、俄文、波蘭文和義大利文。



Vahid Mirjalili 是密西根州立大學的機械工程博士，專攻大規模「分子結構」計算模擬的新方法研究。他曾是密西根州立大學「iPRoBe實驗室」的一員，致力於各種機器學習在「電腦視覺」與「生物識別」中的應用專案。在「iPRoBe實驗室」與「學術界」耕耘了多年之後，他最近加入3M公司，成為一位研究科學家，利用他的「專業知識」以及應用機器學習與深度學習的「先進技術」，在各種應用程式中解決真實世界的問題，讓生活變得更好。

    

    目錄大綱
    
      前言

第1章：賦予電腦從數據中學習的能力

製作智慧機器，將數據轉成知識

三種不同類型的機器學習

基本術語和符號

建構機器學習系統的準則

使用Python 來做機器學習

小結



第2章：訓練簡單的機器學習分類演算法

類神經元－早期機器學習的驚鴻一撇

以Python 實作感知器學習演算法

適應線性神經元和學習的收斂

小結



第3章：使用scikit-learn巡覽機器學習分類器

選擇一個分類演算法

首次使用scikit-learn－訓練感知器

以邏輯斯迴歸對類別機率塑模

以支援向量機處理最大化分類邊界

使用核心支援向量機解決非線性問題

決策樹學習

k最近鄰－惰式學習演算法

小結



第4章：建置良好的訓練數據集－數據預處理

處理數據遺漏

處理分類數據

將數據集區分為訓練用與測試用

縮放特徵令其具相同比例

選取有意義的特徵

以隨機森林評估特徵的重要性

小結



第5章：透過降維來壓縮數據

以主成分分析對非監督式數據壓縮

利用線性判別分析做監督式數據壓縮

利用核主成分分析處理非線性對應

小結



第6章：學習模型評估和超參數調校的最佳實作

以管線來簡化工作流程

使用k折交叉驗證法來評估模型效能

使用學習曲線和驗證曲線來對演算法除錯

以網格搜尋微調機器學習模型

其他不同的效能指標

處理類別不平衡的狀況

小結



第7章：結合不同模型來做整體學習

從整體中學習

以多數決結合分類器

裝袋法－以自助樣本建立整體分類器

利用適應強化來提升弱學習器效能

小結



第8章：將機器學習應用於情緒分析

準備IMDb影評數據以便進行文字處理

詞袋模型簡介

訓練一個邏輯斯迴歸模型來做文件分類

處理更大的數據－線上演算法與核外學習

小結



第9章：在Web應用程式上嵌入機器學習模型

序列化適合完成的scikit-learn估計器

設定SQLite資料庫來儲存數據

使用Flask來開發Web應用程式

將影評分類器整合到Web應用程式中

將Web應用程式部署到公共伺服器

小結



第10章：以迴歸分析預測連續目標變數

線性迴歸簡介

探索房屋數據集

使用RANSAC找出強固的迴歸模型

評估線性迴歸模型的效能

使用正規化方法做迴歸

將線性迴歸模型轉成曲線－多項式迴歸

使用隨機森林處理非線性關係

小結



第11章：處理未標記的數據－集群分析

使用k-means來集群相似物件

以階層樹的方式組織集群

使用DBSCAN來定位高密度區域

小結



第12章：從零開始實作多層類神經網路

以類神經網路來對複雜函數塑模

分類手寫數字

訓練一個類神經網路

關於類神經網路的收斂

實作類神經網路的幾句提醒

小結",https://cf-assets2.tenlong.com.tw/products/images/000/151/940/medium/MP12009.jpg?1598607631
語意軟體設計｜現代架構師的新理論與實務指南 (Semantic Software Design),"Eben Hewitt 著
          張耀鴻 譯",歐萊禮,9789865025939,2020/10/30,"「《語意軟體設計》在重新思考軟體的預測、設計和建構方面是既激進又務實的。這本書挑戰了在現代軟體功能失調中扮演重要角色的基本假設，提供了一種新的方法和工具集來按照預算及時生產高品質的軟體。」

-Holt Hopkins

Sabre資深架構總監



為什麼軟體專案失敗的比例會如此驚人？在這本啟發創意的指南中，資深首席架構師兼技術總監Eben Hewitt為軟體架構、設計和統御介紹了一種全新的理論和務實的方法，使你的專案得以圓滿完成。語意設計與以往思維大相徑庭，主要特點是從設計思維的角度出發，將軟體架構重新定義為產生具有創造力的概念以建構功能強大、靈活且可擴展系統的過程。



本書概述了語意軟體設計的關鍵實務，並包含了一套可用於架構實踐的樣式和範本的完整工具包。架構師、系統設計師、軟體開發經理、技術總監(CTO)和資訊長(CIO)將學到如何創建有效和全面的架構和技術方案，以提高專案成功率。



‧學習一套經過實務驗證的實用架構，幫你交付具有高效率架構、設計思路和運作的出色產品

‧深入探討業務架構、基礎架構、資料架構、應用程式架構

‧瞭解架構、專案管理和治理如何透過價值鏈與開發團隊、管理團隊和產品團隊有效合作

‧學到涵蓋機器學習架構和生產線自動化方面的應用

‧為你的企業架構團隊提供一個立即可用的完整範本工具包



    

    作者簡介
    
      Eben Hewitt 是一家跨國企業SaaS公司的首席架構師兼技術總監，他也是《Technology Strategy Patterns: Architecture as Strategy》、《Cassandra: The Definitive Guide》和數本關於架構、服務和軟體發展書籍的作者。

    

    目錄大綱
    
      前言

第一部分 初探：設計的哲學

第一章 軟體架構的起源

第二章 概念的產生

第三章 解構與設計



第二部分 語意設計實務

第四章 設計思維

第五章 語意設計做法與工具

第六章 業務層面

第七章 應用程式層面

第八章 資料層面

第九章 基礎架構層面



第三部分 營運、流程、管理

第十章 創意總監

第十一章 管理、治理、營運

第十二章 語意設計宣言



附錄A 語意設計工具箱

附錄B 進一步閱讀",https://cf-assets2.tenlong.com.tw/products/images/000/153/856/medium/A614.jpg?1603273555
"Python 機器學習 (下), 3/e (Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow, 3/e)","Sebastian Raschka、Vahid Mirjalili　著
          劉立民、吳建華 譯",博碩文化,9789864345199,2020/10/6,"Python機器學習第三版（下）

Python Machine Learning - Third Edition



第三版－最新修訂版，新增TensorFlow 2、GAN和強化學習等實用內容

使用Python的scikit-learn和TensorFlow 2融會貫通機器學習與深度學習



循序漸進、由淺入深，好評熱銷再進化！最新修訂的《Python機器學習第三版》是一本不容錯過的全方位指南，也是讀者在建立機器學習系統時的必備參考。有別於其他機器學習教科書，本書使用Python探求機器學習和深度學習的技術精髓，強調豐富實用的程式範例、條理分明的數學解釋，以及直覺友善的圖解說明，帶領讀者探索機器學習的眾多子領域，讓艱澀的概念栩栩如生。



許多讀者告訴我們，他們非常喜歡本書第二版的前12章，因為它們全面介紹了機器學習與Python的科學計算。為了確保這些內容的相關性，我們依據讀者回饋，回顧並修改了這些章節，以支援最新版本的NumPy、SciPy、pandas、matplotlib和scikit-learn，並規劃成本書的上冊。而TensorFlow 2.0更是深度學習領域最振奮人心的事件之一，所有與TensorFlow有關的章節（第13章到第16章，規劃成本書的下冊）都進行了大幅度修改。除了介紹Keras API與scikit-learn的最新功能之外，本書也探討自然語言處理（NLP）的子領域「情緒分析」，以及強化學習（RL）和生成對抗網路（GAN）等時下最流行的AI技術（第17章和第18章）。



無論你是有經驗的程式設計師，或是機器學習新手，或你只想進一步深入了解機器學習的最新發展，本書將是你在機器學習之旅中的絕佳良伴。



在這本書中，你將學到：



⦁掌握能讓機器從數據中「學習」的框架、模型和技術

⦁使用scikit-learn進行機器學習、使用TensorFlow進行深度學習

⦁利用機器學習來做影像分類、情緒分析與智慧Web應用程式

⦁訓練類神經網路、GAN與其它模型

⦁結合機器學習模型與Web應用程式

⦁為機器學習工作清理並準備數據

⦁用深度卷積類神經網路來分類影像

⦁了解評估和調校模型的最佳實作

⦁使用迴歸分析來預測連續目標

⦁利用「集群」來發掘數據中隱藏的模式與結構

⦁使用「情緒分析」深入研究文本和社群媒體數據

⦁上冊包含本書前12章，下冊則包含第13章到第18章。



【下載範例程式檔案】

本書的程式碼是由GitHub託管，可點選下面圖案前往下載：

https://github.com/rasbt/python-machine-learning-book-3rd-edition



【下載本書的彩色圖片】

我們還提供您一個PDF檔案，其中包含本書使用的彩色圖表，可以在此下載：

https://static.packt-cdn.com/downloads/9781789955750_ColorImages.pdf

 


        

    

    作者簡介
    
      Sebastian Raschka　擁有密西根州立大學（Michigan State University）的博士學位，在那裡，他專攻開發將「計算生物學」（computational biology）與「機器學習」結合使用的方法。2018年的夏天，他加入威斯康辛大學麥迪遜分校（University of Wisconsin-Madison），擔任「統計學」的助理教授。他的研究活動包括開發「新的深度學習架構」來解決生物識別（biometrics）領域的問題。



他引以為傲的成就之一是他的著作《Python機器學習》，這也是Packt和Amazon上的暢銷書。本書在2016年榮獲ACM的最佳計算類別獎項（Best of Computing award），並被翻譯成多種不同語言，包括德文、韓文、中文、日文、俄文、波蘭文和義大利文。



Vahid Mirjalili 是密西根州立大學的機械工程博士，專攻大規模「分子結構」計算模擬的新方法研究。他曾是密西根州立大學「iPRoBe實驗室」的一員，致力於各種機器學習在「電腦視覺」與「生物識別」中的應用專案。在「iPRoBe實驗室」與「學術界」耕耘了多年之後，他最近加入3M公司，成為一位研究科學家，利用他的「專業知識」以及應用機器學習與深度學習的「先進技術」，在各種應用程式中解決真實世界的問題，讓生活變得更好。

    

    目錄大綱
    
      前言



第13 章：使用TensorFlow來平行化類神經網路的訓練

TensorFlow 與訓練效能

使用TensorFlow 的第一步

使用td.data 來建立輸入管線－TensorFlow Dataset API

在TensorFlow 中建立NN模型

為多層網路選擇啟動函數

小結



第14章：更深入地研究TensorFlow的運作機制

TensorFlow的主要特點

TensorFlow的計算圖：轉移到TensorFlow v2

用來儲存與更新模型參數的TensorFlow變數物件

利用自動微分和GradientTape來計算梯度

透過Keras API簡化一般架構的實作

TensorFlow估計器

小結



第15章：使用深度卷積類神經網路來做影像分類

卷積類神經網路中的模塊

把所有元件整合起來建立一個CNN

以TensorFlow實作深度CNN

以CNN對臉部圖片做性別分類

小結



第16章：以遞迴類神經網路來對循序數據建模

循序數據簡介

以RNN來對循序數據建模

使用TensorFlow來實作多層RNN的序列建模

使用變形模型了解語言

小結



第17章：使用生成對抗網路合成新數據

生成對抗網路簡介

從頭開始實作一個GAN

使用卷積與Wasserstein GAN來改進合成影像的品質

其他的GAN應用

小結



第18章：在複雜的環境中以強化學習來做決策

簡介－從經驗中學習

RL的理論基礎

強化學習演算法

實作我們的第一個RL演算法

深度Q學習法簡介

章節與本書總結",https://cf-assets2.tenlong.com.tw/products/images/000/152/676/medium/MP12028.jpg?1600509914
讓 TypeScript 成為你全端開發的 ACE！（iT邦幫忙鐵人賽系列書）,黃俊鑫,博碩文化,9789864344895,2020/6/2,"♛ 全台第一本屬於自己的 TypeScript！！！♛





別於一般程式聖經書的冗贅 ── 沒有廢話！

只給你必用、實用、好用的 Feature！



➔ 以精細角度剖析 TypeScript 語言性質與特色

➔ 以最高效率介紹 TypeScript 必學基礎與技巧

➔ 以眾多範例展示 TypeScript 撰寫方式與手法





內容簡介



本書內容改編自第 11 屆 iT邦幫忙鐵人賽， Modern Web 組冠軍網路系列文章──《讓 TypeScript 成為你全端開發的 ACE》── 除了是單純入門 TypeScript 語言的技術書籍外，也是第一本屬於台灣本土的 TypeScript 專書；由微軟（Microsoft）研發出的 TypeScript，為近年來逐漸熱門的技術，是軟體社群上擁有眾多廠商與開發者青睞的前、後端開發工具，本書旨在介紹 TypeScript 這門語言的使用方法與技巧。





四大重點



➣ 漸進式型別系統：原始、物件、泛用與常用進階型別等。

本書一大重點在於型別系統的重要性以及使用方式；除此之外，可以從型別系統來認識一門語言的特性、運作過程、效果與細節，對於程式語言本身的設計會有更深層的理解。

➣ TypeScript 高效技巧：除錯、規格查詢、結合 JavaScript 專案的方法。

好的 TypeScript 程式碼除了可以提升開發效率外，除錯（Debug）的痛苦程度會大大的降低；並且也會介紹原生 JavaScript 專案是如何不需全部重寫成 TypeScript 就可以結合 TypeScript 專案的秘密。

➣ 標準物件導向程式設計入門：類別、介面、 SOLID 原則。

TypeScript 對於物件導向程式設計方面的語法支援完備度較現階段的 JavaScript 以及 ECMAScript 標準高，因此讀者可以藉由 TypeScript 學習到物件導向程式設計的觀念。

➣ TypeScript & ECMAScript：語法糖的使用、非同步程式設計。

本書不僅會討論到 JavaScript、ECMAScript 以及 TypeScript 之間的關係，並且也會介紹在 TypeScript 使用 ECMAScript 標準語法時需要注意的事項。





好評推薦



「很開心看到這次 Max 參加第11屆iT邦幫忙鐵人賽冠軍的大作《讓 TypeScript 成為你全端開發的 ACE！》能夠付梓出版，除了為台灣本土資訊業界帶來一注活水，裡頭滿滿的範例以及各種貼心的小提示，手把手帶領讀者學習 TypeScript，相信一定不會讓你失望。」

────Kuro

Vue.js Taiwan 社群主辦人

《 0 陷阱！0 誤解！8 天重新認識 JavaScript！》作者



    

    作者簡介
    
      黃俊鑫 Maxwell Huang

擁有四年前端經驗、工作資歷豐富的工程師，曾實習於五倍紅寶石、Umbo CV 等公司，熟悉 React.JS 與 Vue.JS 前端框架，並且曾擔任宸訊科技股份有限公司的前端工程師，於 2020 年年初作為前端工程師就職位於德國的跨國企業公司 Delivery Hero SE。

曾在香港的 SITCON x HK 2017 以及台灣SITCON 2018 擔任講者，並且在 iT邦幫忙第 11 屆鐵人賽以《讓 TypeScript 成為你全端開發的 ACE 》作為網路文章系列獲得 Modern Web 組冠軍。

    

    目錄大綱
    
      Part I TypeScript 基礎篇

01 TypeScript 的發展與概論

1.1 TypeScript 簡介

1.2 TypeScript 可以解決什麼樣的問題？

1.3 學習 TypeScript 的更多好處

1.4 征途路上總是也有跌跌撞撞的時候

1.5 旅程中的第一小步

02 TypeScript 型別系統概論

2.1 型別系統的兩大基柱—型別的推論與註記

2.2 型別註記—「註記」與「斷言」的差異性

2.3 綜觀TypeScript 型別種類

03 深入型別系統 I 基礎篇

3.1 深潛之前的準備

3.2 原始型別Primitive Types

3.3 JSON 物件型別 JSON Object Type

3.4 函式型別 Function Object Type

3.5 陣列型別 Array Object Type

3.6 明文型別 Literal Type

04 深入型別系統II 進階篇

4.1 元組型別 Tuple Type

4.2 列舉型別 Enum Type

4.3 可控索引型別與索引型別 Indexable Type & Index Type

4.4 複合型別 Composite Type

4.5 Never 型別

4.6 Any 與 Unknown 型別

05 TypeScript 類別基礎

5.1 物件導向基礎概論 OOP Fundamentals

5.2 TypeScript 類別語法 Class Syntax

5.3 型別系統中的類別

06 TypeScript 介面

6.1 介面的介紹 Introduction to Interface

6.2 介面的彈性 Flexibility of Interface

6.3 註記與實踐介面

6.4 詭異的 TypeScript 函式參數型別檢測機制

6.5 型別化名 V.S. 介面

07 深入型別系統III 泛用型別

7.1 泛用型別的介紹 Introduction to Generic Types

7.2 型別泛用化

7.3 型別參數額外功能

08 TypeScript 模組系統

8.1 ES6 Import / Export 模組語法

8.2 命名空間 Namespaces

8.3 型別宣告 Type Declaration

8.4 引入純 JavaScript 套件的流程

Part II TypeScript 應用篇

09 物件導向進階篇章

9.1 物件導向進階概論

9.2 物件導向設計原則 SOLID Principles

9.3 物件導向延伸應用

10 常用 ECMAScript 標準語法

10.1 ES6 解構式 Destructuring

10.2 ES7 匯集- 展開操作符 Rest-Spread Operator

10.3 ES6 Set 與 Map 資料結構

10.4 ES10 非強制串接操作符 Optional Chaining Operator

10.5 ES10 空值結合操作符 Nullish Coalescing Operator

11 常用 ECMAScript 標準語法 非同步程式設計篇

11.1 同步與非同步的概念

11.2 ES6 Promise 物件

11.3 ES7 非同步函式Asynchronous Functions

12 TypeScript 裝飾子

12.1 裝飾子的簡介Introduction to Decorators

12.2 裝飾子種類

12.3 裝飾子的運用

A 解答篇",https://cf-assets2.tenlong.com.tw/products/images/000/148/371/medium/MP22016.jpg?1589790093
無瑕的程式碼－敏捷軟體開發技巧守則 (Clean Code: A Handbook of Agile Software Craftsmanship),Robert C. Martin 著、戴于晉、博碩文化 譯,博碩文化,9789862017050,2013/3/22,"本書榮獲iThome年度百大好書推薦

本書的原文書名為《Clean Code: A Handbook of Agile Software Craftsmanship》，根據作者的說法，《無瑕的程式碼》為Jolt得獎著作《敏捷軟體開發：原則、樣式及實務》的前傳。

在台灣另一本銷售極佳的書籍《重構─改善既有程式的設計》，根據亞馬遜Amazon網站的統計，購買該書原文版《Refactoring: Improving the Design of Existing Code》，又同時購買的其他書籍第一名，正是《Clean Code: A Handbook of Agile Software Craftsmanship》這一本書。



第一章作者開宗明義說明什麼是Clean Code，他詢問了包含C++發明人Bjarne Stroustrup、Eclipse策略教父Dave Thomas、極限程式設計大師Ron Jeffries、維基與極限程式設計發明人，Ward Cunningham等等的大師，從他們的眼光來描述什麼是Clean Code，最後才說到作者本人認為的Clean Code應該長成什麼樣子，有什麼好處，以及學習撰寫Clean Code的基本原則。

小編只能說，能和那麼多大師對談，就已經證明了作者也是一位大師

其餘部分本書分成三部份。

 第一部份

 包含有許多章節，這些章節將描述撰寫clean code的原則、模式及實踐，這些章節包含了不少的程式碼篇幅，閱讀它們頗具有挑戰性。這些章節替你準備好閱讀第二部份所需的背景知識。

第二部份

 這裡包含許多複雜性不斷增加的案例討論。在這個部分，作者會直接帶領您進行整個重構的過程，每次的修改，作者都會說明原因，重構的對象並不僅止於一般的程式，甚至還包含了著名的框架，例如JUnit（哇！把開放原始碼框架拿來重構，真酷)。

第三部份

 終於到了成果收割的時候。最後一章列出了案例討論時搜集到的程式啟發和氣味。在案例討論裡走過和清理程式碼時，紀錄了每個行為的原因，並整理成一種程式啟發或氣味，成了一個知識庫，這個知識庫可以說是整本書的精華與交互參照。


        

    

    作者簡介
    
      Robert C. Martin

人稱Uncle Bob，程式設計經驗超過40年，Agile Software（敏捷軟體開發）的提倡者之一。

創立Object Mentor，這是一間專注於C ++、Java物件導向、模式、UML、敏捷方法學和極限程式設計的顧問諮詢公司。

在這些領域，作者撰寫了相當多的名著，其中，又以獲得有IT奧斯卡獎之稱──Jolt震撼年度大獎的《Agile Software Development: Principles, Patterns, and Practices》《敏捷軟體開發：原則、樣式及實務》最為知名。

該得獎年度，Jolt僅頒布通用類、技術類各一本著作得獎，通用類由此書獲得大獎，而技術類書籍則由另一本廣為人知的《Thinking in Java（第三版）》獲得。

    

    目錄大綱
    
      第1章 　無瑕的程式碼　　　　　　（Clean Code）

第2章 　有意義的命名　　　　　　（Meaningful Names）

第3章 　函式　　　　　　　　　　（Functions）

第4章 　註解　　　　　　　　　　（Comments）

第5章 　編排　　　　　　　　　　（Formatting）

第6章 　物件及資料結構　　　　　（Objects and Data Structures）

第7章 　錯誤處理　　　　　　　　（Error Handling）

第8章 　邊界　　　　　　　　　　（Boundaries）

第9章 　單元測試　　　　　　　　（Unit Tests）

第10章 　類別　　　　　　　　　（Classes）

第11章 　系統　　　　　　　　　（Systems）

第12章 　羽化　　　　　　　　　（Emergence）

第13章 　平行化　　　　　　　　（Concurrency）

第14章 　持續地精煉　　　　　　（Successive Refinement）

第15章 　JUnit 的內部結構　　　 （JUnit Internals）

第16章 　重構SerialDate （Refactoring SerialDate）

第17章 　程式碼的氣味和啟發　　（Smells and Heuristics）

附錄 A 平行化之二 （Concurrency II）

附錄 B org.jfree.date.SerialDate （第16章，重構的目標與結果）

附錄 C 啟發的相互參照　　　　（Cross References of Heuristics）",https://cf-assets1.tenlong.com.tw/images/74504/medium/PG21219.jpg
你所不知道的 JS｜非同步處理與效能 (You Don't Know JS: Async & Performance),Kyle Simpson 著、黃銘偉 譯,歐萊禮,9789864762439,2016/11/23,"<內容介紹>

「Kyle 闡明了 JavaScript 的非同步本質，並展示如何以 promises 和 generators 使之變得簡單明瞭。」

—MARC GRABANSKI，CEO 和 UI 開發人員，前端大師

《你所不知道的 JS》系列包括：

■ 導讀，型別與文法

■ 範疇與 Closures，this 與物件原型

■ 非同步處理與效能

■ ES6 與未來發展

不管你有多少的 JavaScript 使用經驗，但你可能還未能完整地了解這個語言。作為《你所不知道的 JS》系列的一部分，這本簡明的指南會相當深入地探討 JavaScript 新的非同步功能與效能技巧，包括了 Promises、產生器(generators)以及 Web Workers，它們讓你能夠建立精密的單頁面 web 應用程式，並且在過程中避開回呼地獄(callback hell)。

如同《你所不知道的 JS》系列其他書籍，《你所不知道的 JS｜非同步處理與效能》會深入探討這個語言較為棘手的部分，也就是許多 JavaScript 程式設計師會乾脆避開的那些部分。具備了這些知識後，你就能真正精通 JavaScript。

在這本書中，你會：

■ 探索 JavaScript 處理非同步程式設計的新舊方法

■ 逃脫「回呼地獄」，使用 JavaScript 的 Promises 來修補「控制逆轉(inversion of control)」問題

■ 使用產生器以循序的、看似同步的方式表達非同步流程

■ 以 Web Workers、SIMD 及 asm.js 來增進程式層級的效能

■ 學習用於基準化分析(benchmarking)及微調運算式和述句效能的寶貴資源與技巧

本系列之補充資料(程式碼範例、練習等)可在此處下載：https://github.com/getify/You-Dont-Know-JS

 

<章節目錄>



Chapter 1 非同步：現在和之後

Chapter 2 Callbacks

Chapter 3 Promises

Chapter 4 產生器 

Chapter 5 程式效能

Chapter 6 基準化分析與微調

Appendix A asynquence 程式庫

Appendix B 進階的非同步模式

Appendix C 致謝",https://cf-assets1.tenlong.com.tw/images/113463/medium/9789864762439.jpg
"電腦網際網路, 7/e (國際版)(Computer Networking: A Top-Down Approach, 7/e)(附部分內容光碟)","James F. Kurose, Keith W. Ross 著
          全華翻譯小組 譯",全華圖書,9789864639502,2018/10/1,"本書特色

1.本書持續地提供最新與最即時的計算機網路教學方法。

2.本書比其他許多計算機網路的教科書更為嚴謹也更具分析性，但是我們幾乎沒有使用任何高中未曾教授過的高深數學概念，為極佳的計算機網路入門課程使用。

3.學習網路可以是一件快樂的事情。書裡的一點幽默感、比喻的使用、以及真實世界的案例，都能讓這些題材變得更為有趣。

內容簡介

這本書是提供給計算機網路的入門課程使用。在程式語言上的設定，本書假設同學們有撰寫過C、C++、Java或Python的經驗(即使如此，我們也只在少數幾個地方有做如此的假設)。雖然本書比其他許多計算機網路的基礎教科書更為嚴謹也更具分析性，但是我們幾乎沒有使用任何高中未曾教授過的數學概念。我們特意地避免使用任何進階的微積分、機率、或隨機程序的概念(但有為進階背景的同學們提供了一些作業習題)。因此，這本書很適用於大學部或研究所第一年的「電腦網路」、「計算機網路」課程。本書對於電信業界的從業人員，應當也極有幫助。



    


    目錄大綱
    
      「書附光碟收錄CH8、CH9的內容」

CH1 計算機網路和網際網路

1.1　什麼是網際網路？

1.2　網路邊際

1.3　網路核心

1.4　封包交換網路的延遲、遺失與產出率

1.5　協定層級與其服務模型

1.6　面臨攻擊的網路

1.7　計算機網路和網際網路的歷史

1.8　總結

CH2 應用層

2.1　網路應用的原理

2.2　資訊網和HTTP

2.3　網際網路電子郵件

2.4　DNS—網際網路目錄服務

2.5　點對點應用

2.6　影音串流與內容傳遞網路

2.7　Socket 程式設計：建立網路應用程式

2.8　總結

CH3 傳輸層

3.1　導言與傳輸層服務

3.2　多工與解多工

3.3　無連線的傳輸：UDP

3.4　可靠資料傳輸的原理

3.5　連線導向傳輸：TCP

3.6　壅塞控制的原理

3.7　TCP 壅塞控制

3.8　總結

CH4 網路層：資料層

4.1　網路層的綜觀

4.2　路由器的內部有什麼?

4.3　網際網路協定(IP)：IPv4、定址、IPv6 及其他

4.4　Generalized 轉送與SDN

4.5　總結

CH5 網路層：控制層

5.1　導言

5.2　繞送演算法

5.3　網際網路的AS 內部繞送：OSPF

5.4　ISP 之間的繞送：BGP

5.5　SDN 控制層

5.6　網際網路控制訊息協定（ICMP）

5.7　網路管理與SNMP

5.8　總結

CH6連結層與區域網路

6.1　連結層：導言

6.2　錯誤偵測與更正技術

6.3　多重存取連結與協定

6.4　交換式區域網路

6.5　連結虛擬化：將網路視為連結層

6.6　資料中心網路連線

6.7　回顧：網頁查詢生活的一天

6.8　總結

CH7 無線與行動網路

7.1　簡介

7.2　無線連結與網路特性

7.3　Wifi:802.11 無線LAN

7.4　行動電話網際網路

7.5　行動性管理：原理

7.6　行動IP

7.7　管理行動電話網路的行動性

7.8　無線與行動性：對於較高層協定的影響

7.9　總結

CH8 計算機網路的安全性

8.1　何謂網路安全？

8.2　密碼學原理

8.3　訊息完整性與數位簽章

8.4　端點認證

8.5　安全的電子郵件

8.6　安全的TCP 連線：SSL

8.7　網路層的安全性：IPsec 與虛擬私人網路

8.8　提供無線LAN 的安全性

CH9 多媒體網路

9.1　多媒體網路應用

9.2　串流預儲視訊

9.3　IP 電話

9.4　即時互動性應用的協定

9.5　多媒體的網路支援

9.6　總結",https://cf-assets2.tenlong.com.tw/products/images/000/127/127/medium/06133027.jpg?1543292465
最親切的 SQL 入門教室,"矢沢久雄 著
          許郁文 譯",碁峰資訊,9789865026004,2020/9/11,"📲從基礎開始學習SQL語法與資料庫操作，彈指間就能輕鬆找到需要的資料

雖然市面上有各式各樣的資料庫系統，但只要是關聯式資料庫，基本的SQL查詢語法都是相通的。所以，只要學會SQL，就等於學會操作各種資料庫的方法。



🐬使用可免費取得的社群版MySQL做上機練習，學習效果最佳

本書會帶領您從建立資料庫開始，一步步學習資料的搜尋、新增、修改與刪除。只要您跟隨著本書的指引完成這些練習，一定能學會SQL，達成隨心所欲地操作資料庫的夢想。



誰適合閱讀本書

😀想要從零開始建立資料庫的初學者

😎工作上會用到SQL的工程師

😊想要自己查詢資料庫，抓取數據的業務與行銷人員

 

<序>

各位如果擁有存取員工資料庫的權限，大家打算怎麼使用？說不定是透過各種條件，找出最理想的工作夥伴對吧。為了設定這些條件，就必須告訴資料庫「透過這些條件取得資料」這類命令，而用來撰寫這類命令的語言就是SQL（Structured Query Language）。本書就是專為SQL初學者所寫的入門書。

資料庫通常是透過DBMS（Data BaseManagement System）進行管理。雖然市面上有許多不同廠商開發的DBMS產品，但這些產品的SQL語法基本上是相同的，所以只要學會SQL，就能學會使用各種資料庫的方法。舉例來說，要設定「男性、業務部、年齡介於30～40歲之間」的條件，從某種DBMS的員工資料庫找出符合條件的員工。

想必大家都很清楚，學習語言不能只是硬背文法，這點想必在學生時代學習英文的時候就得到印證對吧。學習語言必須不斷地使用，累積成功與失敗的經驗，方能真的學會，所以本書也要帶著大家能夠免費取得的Community版MySQL（這也是一種DBMS）學習SQL。請大家執行SQL陳述式（以SQL語法撰寫的命令式），確認執行結果之後，再試著解決使用這種SQL陳述式寫成的練習題。不斷重複這個過程，最終大家就能一步步學會各種不同的SQL語法。

MySQL可於Windows、macOS與Linux的作業系統使用，而本書會先說明在Windows 10安裝MySQL的步驟，接著再帶著大家建立資料庫，執行資料的搜尋、新增、修改與刪除，從基礎學習SQL。如果能實際安裝MySQL與練習當然是最理想的，但本書其實也列出了各種執行之後的結果，所以也可直接透過本書的內容體驗執行結果。如果大家一直都有「想更了解SQL」、「想使用SQL」的想法，請務必趁此機會學習SQL，然後利用SQL寫出想完成的功能，隨心所欲地操作資料庫。



    

    作者簡介
    
      矢澤久雄

株式會社Yazawa董事長

Grape City株式會社顧問

株式會社SE+顧問

於電器製造商從事電腦生產以及於軟體公司開發系統之後，獨立創業，從事資料分析軟體的開發。除了主業之外，也致力於撰寫專欄或演講。由於非常重視客戶的笑容，所以自稱「軟體藝人」。

主要著作有《プログラムはなぜ動くのか》《コンピュータはなぜ動くのか》《すごい！ なぜ？ どうして？ 子どもといっしょにコンピュータとプログラミングを学ぶ本》（以上由日經BP社出版）、《出るとこだけ！ 基本情報技術者テキスト&問題集》《基本情報技術者試験のアルゴリズム問題がちゃんと解ける本》《スラスラわかるC++》（以上由翔泳社出版）、《C++クラスと継承完全制覇》《C言語プログラミングなるほど実験室》（以上、技術評論社）、《JIS規格対応標準C#入門教室》《ifとelseの思考術 プログラマ脳育成講座》（以上由Softbank Creative出版）、《情報処理技術の基本》（由日本實業出版社出版）、《10代からのプログラミング教室（14歳の世渡り術）》（由河出書房新社出版）

    

    目錄大綱
    
      Chapter 1 學習SQL的事前準備

Chapter 2 搜尋資料庫

Chapter 3 排序、彙總、表格合併與群組化

Chapter 4 視圖與子查詢

Chapter 5 新增、修改、刪除資料的SQL語法

Appendix 依不同目的彙整的SQL參考內容",https://cf-assets2.tenlong.com.tw/products/images/000/152/152/medium/ACD019800.jpg?1598952871
"深入淺出 Java 程式設計, 2/e (Head First Java, 2/e)",楊尊一,歐萊禮,9789867794604,2005/10/1,"Head First Java 是個完整的物件導向（object-oriented，OO）程式設計與 Java 的學習指引。此書是根據學習理論所設計的、 讓你可以從學習程式語言的基本開始一直到包括執行緒、網路、與分散式程式等項目。最重要的，你會學會如何像個物件導向開發 者一般的思考。

而且不只是讀死書－你還會玩遊戲、拼圖、解謎題、以及以意想不到的方式與 Java 互動。在這些活動中，你會寫出一堆真正的 Java 程式，包括了一個船艦炮戰型態遊戲與一個網路聊天程式。

Head First 系列的圖文並茂學習樣式能讓你快速的在腦海中掌握住知識。敞開心胸準備好學習這些關鍵性的主題： 

Java 程式語言 

物件導向程式開發 

撰寫、測試、與佈署應用程式 

使用 Java API 函式庫 

處理例外 

多執行緒 

Swing 圖形化介面 

網路程式設計 

集合與泛型



    


    目錄大綱
    
      1 進入 Java 的世界

Java 的運作方式

程式結構

標註

main()這個 method

迴圈

條件分支

設計程式

術語製造機

談話錄

習題

2 拜訪物件村

椅子大戰 

繼承

override

什麼是 class？

建構你的第一個物件

使用 main()

猜數字

習題

3 認識變數

宣告變數

Primitive 型別

Java 關鍵字

參考變數

物件的宣告與指派

可回收 heap 空間

陣列

習題

4 物件的行為

操作物件狀態的 method

method 參數與回傳型別

傳值

Getters 與 Setters

封裝

陣列中的參考

習題

5 更有力的方法

建構戰艦遊戲

簡單版

撰寫 pseudocode

測試

撰寫程式

完成版

以 Math.random()產生亂數

預先輸入好的程式

迴圈

型別轉換

以 Integer.parseInt() 轉換字串

習題

6 使用 Java 函式庫

分析 bug

ArrayList

修改戰艦遊戲

設計真正的遊戲

遊戲的 pseudocode

遊戲程式

布林運算式

使用 Java API

運用 package

查詢說明文件

習題

7 物件村的優質生活

民法親屬篇：繼承

設計繼承階層

運用繼承避免重複的程式碼

method 的 override

美人出浴圖

民法親屬篇：遺產

繼承的好處

Polymorphism

override 的規則

過載

習題

8 深入多形

不該初始化的 class

抽象 class

抽象 method

多型的應用

物件之母：Object

取出陣列元素

編譯器對參考型別的檢查

探索你的深處

多型參考

物件參考型別轉換

多重繼承的麻煩

使用 interface

習題

9 物件的前世今生

物件與變數的生存空間

stack 上的 method

區域變數的空間

實體變數的空間

建構物件的奇蹟

constructors

鴨子的初始狀態

constructor 的 override

Superclass constructors

使用 this( )

物件生命週期

資源回收

習題

10 數字很重要

Math class

靜態 methods

靜態 variables

常數

Math method

包裝用的 class

Autoboxing

數字的格式化

日期的格式化與操作

靜態的引用

習題

11 有風險的行為

建構點唱機

呼叫有風險的程式碼

例外

編譯器會確認你已經明瞭風險

攔截例外狀況

try/catch 的流程控制

finally 區塊

攔截多重例外

宣告例外

處理或再拋出

程式料理 

習題

12 看圖說故事

GUI 第一步

取得使用者事件

實做 listener

取得 ActionListener

GUI 的圖像

paintComponent() 樂趣多又多

Graphics2D 物件

加入更多的 button

內層 class

動畫

程式料裡

習題

13 使用 Swing

Swing 元件

Layout 管理員

三種 Layout 管理員

BorderLayout

FlowLayout

BoxLayout

JTextField 

JTextArea

JCheckBox

JList

程式料理

習題

14 保存物件

儲存物件狀態

寫入檔案的序列化物件

輸出入串流

物件序列化

實做 Serializable

使用暫態變數

物件解序列化

寫入文字檔

java.io.File

讀取文字檔

拆解字串

程式料理

習題

15 網路連線

聊天程式概觀

連結、發送、與接收

網路的 socket

TCP 埠

讀取 socket

對 socket 寫入資料

每日一句

簡單的伺服器

伺服器程式碼

撰寫用戶端

多重交談

啟動新的 thread

Runnable

Thread 物件三態

任務迴圈

Thread 排程

Thread 的睡眠品質

啟動兩個 thread

同步執行的問題

名人醜聞

不可切割的動作

大家都有鎖

哈利與波特：消失的異動

同步化的 method

死結！

多緒用戶端程式

SimpleChatServer

習題

16 資料結構

Collections

集合的排序

泛型與型別安全

Comparable 的排序

自訂 Comparator

集合的 API

可避免重複的 HashMap

hashCode() 與 equals()

HashMap

多型的萬用字元

習題

17 發佈程式

部署的選擇

將原始檔與 class 檔分開

可執行的 JAR

執行 JAR 檔案

將 class 打包

package 的目錄結構

編譯與執行 package

加上 -d 的編譯動作

建構可執行的 JAR

Java Web Start (JWS)

建構與部署 JWS 程式

習題

18 分散式運算

Java Remote Method Invocation (RMI) 

Servlets

Enterprise JavaBeans (EJB) 

Jini

通用服務瀏覽器

尾聲

附錄 A

BeatBoxFinal (用戶端)

MusicServer (伺服器端)

附錄 B

十大排行榜

索引",https://cf-assets2.tenlong.com.tw/products/images/000/027/129/medium/9789867794604.jpg?1539660237
機器學習的數學：用數學引領你走進AI的神秘世界,"孫博 著
          博碩文化 審校",博碩文化,9789864345113,2020/9/9,"《機器學習的數學》是一本系統化介紹機器學習所涉及的數學知識之入門書籍，本書從入門開始，以平易的介紹方式為原則，講解了機器學習中一些常見的數學知識。機器學習作為人工智慧的核心技術，對於數學基礎薄弱的人來說，其台階是陡峭的，本書致力於在陡峭的台階前搭建一個斜坡，為讀者鋪平機器學習的數學之路。



《機器學習的數學》共19章，分為線性代數、高等數學和機率3個組成部分。第 1 部分包括向量、向量的點積與叉積、行列式、代數餘子式、矩陣、矩陣和聯立方程式、矩陣的秩、逆矩陣、高斯—喬登消去法、消去矩陣與置換矩陣、矩陣的LU分解、歐幾里得距離、曼哈頓距離、切比雪夫距離、夾角餘弦等；第2部分包括導數、微分、不定積分、定積分、弧長、偏導、多重積分、參數方程式、極座標系、柱座標系、球座標系、梯度、梯度下降演算法、方向導數、線性近似、二階近似、泰勒公式、牛頓法、最小平方法、求解極值、拉格朗日乘子法、KKT條件、歐拉—拉格朗日方程式等；第3部分包括機率、古典概型、幾何概型、互斥事件、獨立事件、分佈函數、離散型分佈、連續型分佈等。



《機器學習的數學》內容全面，文字精練，實例典型，實用性強，出發點為「平易數學」，與機器學習完美對接，適合想要瞭解機器學習與深度學習但數學基礎較為薄弱的程式設計師閱讀，也適合作為機器學習的相關專業教材。機器學習及數學愛好者、資料探勘與分析人員、金融智慧化從業人員等也可選擇本書進行參考學習。



    

    作者簡介
    
      孫博

2005年畢業於吉林大學計算機專業，蘇州工業園區第六屆高技能領軍人才，機器學習愛好者，擅長軟體演算法和軟體結構設計。曾就職於沈陽東軟軟體股份有限公司，期間參與了國家金財工程和金質工程的建設。之後就職於蘇州快維科技，擔任產品部主管，主持並設計了移動化整合供應鏈開發平台，致力於打造業務導向的開發模式，平台2012 投入商用後獲得江蘇省創新團隊獎；現任我要實習網CTO，主持校企合作招聘平台的建設，平台中有多項創新成果已申報專利。

    

    目錄大綱
    
      第 1 章 向量和它的朋友們

1.1 向量家族的基本成員

1.1.1 向量的表示和模長

1.1.2 維度和分量

1.1.3 單位向量和零向量

1.2 向量的加減和數乘

1.2.1 加法

1.2.2 數乘

1.2.3 減法

1.2.4 向量與聯立方程式

1.2.5 相關程式碼

1.3 向量的點積

1.3.1 什麼是點積

1.3.2 餘弦定理

1.3.3 相關程式碼

1.4 點積的作用

1.4.1 計算向量間的夾角

1.4.2 判斷向量的方向

1.4.3 判斷正交性

1.4.4 求向量的分量

1.5 向量的叉積

1.5.1 什麼是叉積

1.5.2 叉積的幾何意義

1.5.3 相關程式碼

1.6 叉積的作用

1.6.1 計算平行六面體的體積

1.6.2 判斷點是否共面

1.6.3 計算法向量

1.7 再看行列式

1.7.1 行列式的性質

1.7.2 行列式的意義

1.7.3 行列式的計算

1.7.4 行列式的公式

1.7.5 相關程式碼

1.8 代數餘子式

1.8.1 行列式的代數餘子式展開

1.8.2 二階行列式的代數餘子式

1.9 還有其他朋友嗎

1.10 總結



第 2 章 矩陣的威力

2.1 什麼是矩陣

2.2 矩陣的儲存和解析功能

2.3 矩陣的運算

2.3.1 加法

2.3.2 數乘

2.3.3 乘法

2.3.4 轉置

2.3.5 相關程式碼

2.4 特殊的矩陣

2.4.1 對稱矩陣

2.4.2 單位矩陣

2.4.3 逆矩陣

2.4.4 奇異矩陣

2.4.5 相關程式碼

2.5 矩陣與線性聯立方程式

2.5.1 產品與原料的問題

2.5.2 消去法

2.5.3 矩陣向量法

2.5.4 無解的聯立方程式

2.6 再看矩陣與聯立方程式

2.6.1 矩陣的初等變換

2.6.2 列階梯矩陣

2.6.3 矩陣的秩

2.6.4 滿秩矩陣

2.6.5 線性組合

2.6.6 線性相關

2.7 求解逆矩陣

2.7.1 聯立方程式法

2.7.2 高斯—喬登消去法

2.8 消去矩陣與置換矩陣

2.8.1 消去矩陣

2.8.2 置換矩陣

2.8.3 求逆矩陣的新方法

2.9 矩陣的 𝑳𝑼 分解

2.9.1 𝑳𝑼 分解的步驟

2.9.2 𝑳𝑼 分解的前提

2.9.3 𝑳𝑼 分解的意義

2.9.4 允許列交換

2.10 總結



第 3 章 距離

3.1 距離的多種度量

3.1.1 一維空間的距離

3.1.2 歐幾里得距離

3.1.3 曼哈頓距離

3.1.4 切比雪夫距離

3.1.5 夾角餘弦

3.1.6 其他度量方法

3.2 人心的距離

3.2.1 相親

3.2.2 資料預處理

3.2.3 度量距離

3.3 人心可測嗎

3.4 總結



第 4 章 導數

4.1 導數的基本概念

4.1.1 導數的意義

4.1.2 導數的標記

4.1.3 根據定義計算導數

4.1.4 函數可導的條件

4.2 求導

4.2.1 常用的求導公式

4.2.2 和、差、積、商求導法則

4.2.3 連鎖律求導法則

4.2.4 隱函數微分法

4.2.5 反函數求導

4.2.6 指數函數的導數

4.2.7 對數函數的導數

4.2.8 對數微分法

4.3 高階導數

4.4 相關程式碼

4.5 總結



第 5 章 微分與積分

5.1 微分

5.2 微分的應用

5.2.1 汽車測速

5.2.2 水平面上升速度

5.2.3 懸掛模型

5.3 不定積分

5.3.1 什麼是不定積分

5.3.2 不定積分的唯一性

5.4 求解不定積分

5.4.1 變數代換法

5.4.2 猜想法

5.4.3 積分表

5.5 定積分

5.5.1 定積分的意義

5.5.2 定積分是怎麼來的

5.5.3 定積分第一基本定理

5.5.4 定積分第二基本定理

5.5.5 超越函數

5.5.6 定積分的奇偶性

5.6 求解積分的高階套路

5.6.1 三角代換1（sin 和cos）

5.6.2 三角代換2（tan 和sec）

5.6.3 三角代換3（反向代換）

5.6.4 三角代換4（配方）

5.6.5 分部積分

5.6.6 WIFI 的密碼

5.7 積分的應用

5.7.1 計算面積

5.7.2 計算體積

5.7.3 計算機率

5.8 不可積的積分

5.9 相關程式碼

5.10 總結



第 6 章 弧長與曲面

6.1 弧長

6.1.1 弧長公式

6.1.2 線性函數的弧長

6.1.3 單位圓的弧長

6.1.4 拋物線的弧長

6.2 曲面面積

6.2.1 喇叭口的表面積

6.2.2 球面面積

6.3 總結



第 7 章 偏導

7.1 空間函數

7.1.1 曲面

7.1.2 等高線

7.2 什麼是偏導

7.3 偏導數的意義

7.4 偏導的計算

7.5 二階偏導和混合偏導

7.6 多元函數的偏導

7.7 相關程式碼

7.8 總結



第 8 章 多重積分

8.1 二重積分的意義

8.2 為什麼能計算體積

8.3 計算二重積分

8.3.1 計算方法的來源

8.3.2 計算的一般過程

8.3.3 積分的邊界

8.3.4 改變積分順序

8.4 二重積分的應用

8.4.1 計算面積

8.4.2 計算平均值

8.5 三重積分

8.5.1 計算三重積分

8.5.2 曲面的體積

8.6 相關程式碼

8.7 作業的答案

8.8 總結



第 9 章 參數方程式

9.1 橢圓的周長

9.2 何謂參數方程式

9.3 直線

9.3.1 參數方程式的表達

9.3.2 參數方程的幾何解釋

9.3.3 直線與平面的關係

9.4 擺線

9.4.1 擺線的參數方程式

9.4.2 擺線的斜率

9.5 總結



第 10 章 超越直角座標系

10.1 極座標系

10.1.1 極座標表示法

10.1.2 極座標系的應用

10.2 柱座標系

10.2.1 什麼是柱座標系

10.2.2 簡化三重積分

10.2.3 柱座標系的應用

10.3 球座標系

10.3.1 什麼是球座標系

10.3.2 球座標系的積分

10.3.3 球座標系的應用

10.4 總結



第 11 章 梯度下降

11.1 梯度

11.1.1 梯度的定義

11.1.2 梯度垂直於等值面

11.1.3 垂直的原因

11.1.4 找出切平面

11.2 方向導數

11.2.1 方向導數的幾何意義

11.2.2 計算方向導數

11.3 梯度的意義

11.4 梯度下降演算法

11.4.1 梯度下降的原理

11.4.2 學習係數

11.4.3 批次梯度下降

11.4.4 隨機梯度下降

11.4.5 小批次梯度下降

11.5 超越梯度下降

11.6 總結



第 12 章 誤差與近似

12.1 誤差

12.1.1 誤差的成因

12.1.2 誤差界限

12.1.3 減少誤差的方法

12.2 近似

12.2.1 線性近似

12.2.2 二階近似

12.2.3 微分法

12.3 泰勒公式

12.3.1 泰勒級數

12.3.2 泰勒公式的應用

12.3.3 泰勒展開

12.3.4 化質為量

12.3.5 多元函數的泰勒展開

12.4 物理單位引發的問題

12.5 總結



第 13 章 牛頓法

13.1 牛頓法的一般過程

13.2 code review 的答案

13.3 牛頓法的注意事項

13.4 從泰勒公式看牛頓法

13.5 解方程式

13.6 開立方根

13.7 向牛頓致敬

13.8 總結



第 14 章 無解之解

14.1 無解的方程式

14.2 約等聯立方程式

14.3 最小誤差

14.4 最小平方法

14.4.1 微積分解釋

14.4.2 線性代數解釋

14.4.3 資料擬合

14.5 離群資料

14.6 總結



第 15 章 極大與極小

15.1 極值

15.2 臨界點和鞍點

15.2.1 臨界點

15.2.2 鞍點

15.3 一元函數的極值類型

15.4 多元函數的極值類型

15.4.1 海森矩陣

15.4.2 極大值還是極小值

15.5 極值的應用

15.5.1 繩子的問題

15.5.2 最省料的木箱

15.5.3 最快入口

15.6 總結



第 16 章 尋找最佳解

16.1 受制於人

16.2 拉格朗日乘子法

16.2.1 求解過程

16.2.2 最大還是最小

16.2.3 最省料的木箱

16.2.4 周長最長的內接矩形

16.2.5 表面積最小的金字塔

16.3 多個約束條件

16.3.1 一般過程

16.3.2 曲面的極值

16.4 不等約束

16.4.1 最佳化問題的幾何解釋

16.4.2 KKT 條件

16.4.3 regularity 條件

16.4.4 不等約束下的極值

16.5 相關程式碼

16.6 總結



第 17 章 最佳形態

17.1 函數和泛函數

17.2 U 型池的模型

17.3 歐拉—拉格朗日方程式

17.4 U 型池的解

17.5 兩點間的最短距離

17.6 泛函數的拉格朗日乘子法

17.7 狄多公主的土地

17.8 總結



第 18 章 硬幣與骰子

18.1 機率能做什麼

18.2 基本概念

18.2.1 隨機試驗

18.2.2 事件

18.2.3 樣本空間

18.3 古典概型

18.3.1 典型問題

18.3.2 古典概型的變形

18.4 幾何概型

18.4.1 定義與公式

18.4.2 相遇的機率

18.4.3 幾何概型的變形

18.4.4 路燈的間隔

18.5 機率的基本公式

18.6 互斥事件

18.6.1 互斥事件公式

18.6.2 正面朝上的硬幣

18.7 獨立事件

18.7.1 獨立事件公式

18.7.2 大老闆來訪的規律

18.7.3 關於抽獎

18.7.4 矇對答案的機率

18.7.5 十賭九輸

18.8 垂簾聽政

18.8.1 垂簾聽政的公式

18.8.2 行政部的預測

18.9 先下手為強

18.10 總結





第 19 章 機率分佈

19.1 從事件到函數

19.2 分佈函數

19.3 離散型分佈

19.3.1 整數和自然數哪個更多

19.3.2 離散型分佈函數

19.3.3 射箭比賽

19.4 連續型分佈

19.4.1 關於時間的悖論

19.4.2 連續型分佈函數

19.5 關於常態分佈

19.6 總結",https://cf-assets2.tenlong.com.tw/products/images/000/152/159/medium/MP12024.jpg?1599029930
Java SE 14 技術手冊,林信良,碁峰資訊,9789865025137,2020/6/12,"‧涵蓋Java 14正式釋出特性

‧深入Java模組平臺系統

‧探討Unicode與規則表示式

‧提供Lab實作檔案



‧作者十幾年實務教育訓練中，匯整學員遇到的觀念、實作、應用等問題的經驗集合。

‧詳細介紹Java 9模組化以後，JVM、JRE、Java SE API、JDK與IDE間的關係。

‧必要時從Java SE API的原始碼分析，了解各語法在Java SE API中如何應用。

‧涵蓋Java 14正式釋出特性，介紹更多Java在Unicode、規則表示式上的支援。

‧建議練習的範例提供Lab檔案，更能掌握練習重點。

‧IDE操作為本書教學內容之一，更能與實務結合。



    

    作者簡介
    
      林信良 自由工作者，專長為技術寫作、翻譯與教育訓練。喜好研究程式語言、框架、社群，從中學習設計、典範及文化。閒暇之餘記錄所學，技術文件涵蓋C/C++、Java、Python、JavaScript、Haskell、OpenSCAD等領域，個人網站openhome.cc。

    

    目錄大綱
    
      序

導讀

Chapter 1 Java 平台概論

Chapter 2 從JDK 到IDE

Chapter 3 基礎語法

Chapter 4 認識物件

Chapter 5 物件封裝

Chapter 6 繼承與多型

Chapter 7 介面與多型

Chapter 8 例外處理

Chapter 9 Collection 與 Map

Chapter 10 輸入輸出

Chapter 11 執行緒與並行 API

Chapter 12 Lambda

Chapter 13 時間與日期

Chapter 14 NIO 與 NIO2

Chapter 15 通用 API

Chapter 16 整合資料庫

Chapter 17 反射與類別載入器

Chapter 18 自訂泛型、列舉與標註

Chapter 19 深入模組化

Appendix A 如何使用本書專案",https://cf-assets2.tenlong.com.tw/products/images/000/148/946/medium/ACL059300.jpg?1591091896
Python 網路爬蟲：大數據擷取、清洗、儲存與分析 -- 王者歸來,洪錦魁,深智數位,9789865501020,2019/10/20,"本書特色、內容簡介

這是一本使用Python從零開始指導讀者的網路爬蟲入門書籍，全書以約350個程式實例，完整解說大數據擷取、清洗、儲存與分析相關知識，下列是本書有關網路爬蟲知識的主要內容。

# 認識搜尋引擎與網路爬蟲

# 認識約定成俗的協議robots.txt

# 從零開始解析HTML網頁

# 認識與使用Chrome開發人員環境解析網頁

# 認識Python內建urllib、urllib2模組，同時介紹好用的requests模組

# 說明lxml模組

# Selenium模組

# XPath方法解說

# css定位網頁元素

# Cookie觀念

# 自動填寫表單

# 使用IP代理服務與實作

# 偵測IP

# 更進一步解說更新的模組Requests-HTML 

# 認識適用大型爬蟲框架的Scrapy模組

在書籍內容，本書設計爬蟲程式探索下列相關網站，讀者可以由不同的網站主題，深入測試自己設計網路爬蟲的能力，以適應未來職場的需求。

# 金融資訊

# 股市數據

# 人力銀行

# 交友網站

# 維基網站

# 主流媒體網站

# 政府開放數據網站

# 社群服務網站

# PTT網站

# 電影網站

# 星座網站

# 小說網站

# 台灣高鐵

# 露天拍賣網站

# httpbin網站

# python.org網站

# github.com網站

# ipstack.com網站API實作

# Google API實作

# Facebook API實作

探索網站成功後，本書也說明下列如何下載或儲存不同資料格式的數據。

# CSV檔案格式

# JSON檔案格式

# XML、Pickle

# Excel

# SQLite資料庫

本書沿襲作者著作的特色，程式實例豐富，相信讀者只要遵循本書內容必定可以在最短時間精通Python網路爬蟲設計。

課程活動





    

    作者簡介
    
      洪錦魁

一位跨越電腦作業系統與科技時代的電腦專家，著作等身的作家。

■ DOS 時代他的代表作品是 IBM PC 組合語言、C、C++、Pascal、資料結構。

■ Windows 時代他的代表作品是 Windows Programming 使用 C、Visual Basic。

■ Internet 時代他的代表作品是網頁設計使用 HTML。

■ 大數據時代他的代表作品是 R 語言邁向 Big Data 之路。

除了作品被翻譯為簡體中文、馬來西亞文外，2000 年作品更被翻譯為Mastering HTML 英文版行銷美國。

近年來作品則是在北京清華大學和台灣深智同步發行：

1：Java 入門邁向高手之路王者歸來

2：Python 入門邁向高手之路王者歸來

3：HTML5 + CSS3 王者歸來

4：R 語言邁向Big Data 之路

他的著作最大的特色是，所有程式語法會依特性分類，同時以實用的程式範例做解說，讓整本書淺顯易懂，讀者可以由他的著作事半功倍輕鬆掌握相關知識。

    

    目錄大綱
    
      目錄

第零章　認識網路爬蟲

0-1 認識HTML

0-2 網路地址URL

0-3 爬蟲的類型

0-4 搜尋引擎與爬蟲原理 

0-5 網路爬蟲的搜尋方法

0-6 網路爬蟲是否合法 

0-7 認識HTTP 與HTTPS

0-8 表頭(headers) 

第一章　JSON 資料與繪製世界地圖

1-1 JSON 資料格式前言

1-2 認識json 資料格式

1-3 將Python 應用在json 字串形式資料

1-4 將Python 應用在json 檔案

1-5 簡單的json 檔案應用

1-6 世界人口數據的json 檔案

1-7 繪製世界地圖 

1-8 XML 

第二章　使用Python 處理CSV 文件

2-1 建立一個CSV 文件

2-2 用記事本開啟CSV 檔案 

2-3 csv 模組

2-4 讀取CSV 檔案

2-5 寫入CSV 檔案

2-6 專題- 使用CSV 檔案繪製氣象圖表

2-7 pickle 模組 

2-8 Python 與Microsoft Excel

第三章　網路爬蟲基礎實作

3-1 上網不再需要瀏覽器了

3-2 下載網頁資訊使用requests 模組 

3-3 檢視網頁原始檔

3-4 分析網站使用Chrome 開發人員工具 

3-5 下載網頁資訊使用urllib 模組 

3-6 認識httpbin 網站

3-7 認識Cookie 

3-8 設置代理IP

第四章　Pandas 模組

4-1 Series 

4-2 DataFrame

4-3 基本Pandas 資料分析與處理

4-4 檔案的輸入與輸出

4-5 Pandas 繪圖

4-6 時間序列(Time Series)

4-7 專題　鳶尾花

4-8 專題　匯入網頁表格資料

第五章　Beautiful Soup 解析網頁

5-1 解析網頁使用BeautifulSoup 模組 

5-2 其它HTML 文件解析

5-3 網路爬蟲實戰　圖片下載

5-4 網路爬蟲實戰　找出台灣彩券公司最新一期威力彩開獎結果

5-5 網路爬蟲實戰　列出Yahoo 焦點新聞標題和超連結 

5-6 IP 偵測網站FileFab 

第六章　網頁自動化

6-1 hashlib 模組

6-2 環保署空氣品質JSON 檔案實作 

6-3 檢測網站內容是否更新

6-4 工作排程與自動執行

6-5 環保署空氣品質的CSV 檔案

第七章　Selenium 網路爬蟲的王者

7-1 順利使用Selenium 工具前的安裝工作

7-2 獲得webdriver 的物件型態

7-3 擷取網頁

7-4 尋找HTML 文件的元素

7-5 XPath 語法

7-6 用Python 控制點選超連結

7-7 用Python 填寫表單和送出 

7-8 用Python 處理使用網頁的特殊按鍵 

7-9 用Python 處理瀏覽器運作

7-10 自動進入Google 系統

7-11 自動化下載環保署空氣品質資料

第八章　PTT 爬蟲實戰

8-1 認識批踢踢實業坊 

8-2 進入PTT 網址

8-3 解析PTT 進入須滿18 歲功能鈕

8-4 各篇文章的解析

8-5 解析文章標題與作者 

8-6 推文數量

8-7 文章發表日期

8-8 將PTT 目前頁面內容以JSON 檔案儲存

8-9 前一頁面處理的說明 

8-10 進入PPT 的Beauty 論壇網站 

8-11 ipstack

第九章　Yahoo 奇摩電影網站

9-1 本週新片

9-2 中文片名和英文片名

9-3 上映日期

9-4 期待度

9-5 影片摘要 

9-6 劇照海報

9-7 爬取兄弟節點

9-8 預告片

9-9 排行榜

第十章　台灣主流媒體網站　

10-1 蘋果日報

10-2 聯合報

10-3 經濟日報

10-4 中國時報

10-5 工商時報

第十一章　Python 與SQLite 資料庫

11-1 SQLite 基本觀念

11-2 資料庫連線

11-3 SQLite 資料類型 

11-4 建立SQLite 資料庫表單 

11-5 增加SQLite 資料庫表單紀錄

11-6 查詢SQLite 資料庫表單

11-7 更新SQLite 資料庫表單紀錄

11-8 刪除SQLite 資料庫表單紀錄

11-9 DB Browser for SQLite 

11-10 將台北人口數儲存SQLite 資料庫

第十二章　股市數據爬取與分析

12-1 證券櫃檯買賣中心

12-2 台灣證券交易所

12-3 Google 全球股市資訊 

12-4 Yahoo 股市資訊 

12-5 台灣股市資料讀取與圖表製作

第十三章　金融資訊的應用

13-1 台灣銀行利率查詢

13-2 取得HTML 文件

13-3 分析HTML 文件

13-4 將利率表儲存成CSV 檔案

13-5 取得最優惠利率

13-6 基金資料 

第十四章　Dcard 社群服務網站

14-1 進入網站

14-2 分析網站

14-3 抓取預設的熱門貼文 

14-4 爬取更多Dcard 熱門文章

第十五章　星座屋網站

15-1 進入星座屋網站

15-2 分析網站與爬取星座運勢文字

15-3 星座圖片的下載

第十六章　小說網站

16-1 進入小說網站

16-2 解析網頁

16-3 處理編碼問題

16-4 爬取書籍章節標題

16-5 爬取章節內容的連結

16-6 從章節超連結輸出小說內容

16-7 將小說內文存入檔案

第十七章　台灣高鐵網站

17-1 查詢台灣高鐵的站名

17-2 時刻表查詢

第十八章　維基百科

18-1 維基百科的中文網址

18-2 爬取台積電主文資料

18-3 台積電的簡史

18-4 URL 編碼

第十九章　Python 與Facebook

19-1 Facebook 圖形API

19-2 facebook-sdk 存取資料的應用

第二十章　Google API

20-1 申請Google API 金鑰

20-2 基本操作Google Map

20-3 爬蟲擷取Google 地理資訊

20-4 地理資訊的基本應用 

20-5 找尋指定區域內的景點

第二十一章　Yahoo 拍賣網站

21-1 Yahoo 拍賣網站

21-2 分析網頁與單個商品搜尋

21-3 系列商品搜尋

第二十二章　Hotels.com 旅宿網站

22-1 Hotels.com 旅宿網站

22-2 解析輸入表單

22-3 獲得查詢資料

22-4 列出一系列所找到的旅館

第二十三章　交友網站

23-1 進入交友網站 

23-2 分析網頁

23-3 爬取第一筆資料

23-4 將爬取的資料儲存至CSV 檔案

23-5 爬取與儲存Ajax 加載的頁面

23-6 教育程度分析

23-7 身高分析

23-8 年齡分析

第二十四章　Requests-HTML 模組

24-1 安裝與導入 

24-2 使用者請求Session 

24-3 認識回傳資料型態與幾個重要屬性

24-4 數據清洗與爬取

24-5 搜尋豆瓣電影網站

24-6 Ajax 動態數據加載

第二十五章　人力銀行網站

25-1 認識人力銀行網頁

25-2 分析與設計簡單的爬蟲程式

25-3 更進一步分析網頁

第二十六章　Scrapy

26-1 安裝Scrapy

26-2 從簡單的實例開始 - 建立Scrapy 專案

26-3 Scrapy 定位元素 

26-4 使用cookie 登入

26-5 保存文件為JSON 和CSV 檔案 

26-6 Scrapy 架構圖

26-7 專題爬取多頁PTT 資料",https://cf-assets2.tenlong.com.tw/products/images/000/141/076/medium/DM1920_3D_books.jpg?1570100292
"寫給大家的統計學｜秒懂機率與統計，你也可以是人生勝利組 (Bayesian Statistics the Fun Way: Understanding Statistics and Probability with Star Wars, Lego, and Rubber Ducks)","Will Kurt 著
          王君儒 譯",碁峰資訊,9789865025663,2020/8/26,"🎲運用你的直覺和一些簡單的數學來做出更好的概率決策

對於任何一個問題，傳統的統計分析往往只是產生另一堆數據。但你如何在現實世界中理解這些冷冰冰的數字？本書告訴你如何利用直覺和一些簡單的數學來做出更好的概率決策。



🎰透過清晰的解釋和有趣的例子，告訴你如何應用貝葉斯方法

本書透過清晰的解釋和有趣的例子，告訴你如何應用貝葉斯方法。你將會去尋找UFO來探索日常推理，用概率分佈計算漢-索羅是否能在小行星領域生存下來，並量化你得了嚴重的腦瘤而不僅僅是耳屎過多的概率。



這些不拘一格的練習將幫助你建立一個靈活而穩健的框架，以應對各種挑戰，從真正的摸索時事到處理商業世界的日常驚喜。



．計算分佈，瞭解你的信念範圍。

．比較假設，得出可靠的結論。

．計算貝葉斯定理，瞭解它的作用。

．找出後驗、似然和前驗，以檢查結論的準確性。

．使用R編程語言進行數據分析。



更有信心地做出更好的選擇，並享受這樣做的樂趣！

破解打開貝葉斯統計學的有趣方式，從你的數據中獲得最大價值。

 

<序>

序言

某種程度來說，生活中所有事情在某種程度上來說都是不確定的。聽起來可能有點誇張，但你只要做個簡單的實驗，就可以知道真相：在一天開始之際，寫下你認為接下來半個小時、一個小時、三個小時，和六個小時中會發生的事，然後驗證這些預測是否會實現。你很快就會察覺到，一天中其實充滿著各種不確定性。即便是一些小事，像是「我會刷牙」或是「我會喝杯咖啡」，都有可能因為某些原因而未如願發生。

對生活中大部分的不確定性，我們都能經由規劃日程來順利渡過。舉例來說，即使交通狀況可能讓你早上花在通勤的時間變長，我還是能對自己什麼時候該出門，才能準時到公司這點做出不錯的估計。如果早上有一個超重要的會議，你可能會提早出門，留給自己延誤的時間。對如何推理並處理不確定的情況，我們有種天生的直覺，而當你有這樣的思路時，你就已經在做機率統計了。

為什麼要學統計？

這本書的主題，貝氏統計，能幫我們對不確定的情況做出推理；就好比學校教的邏輯概念能幫我們在每天的思考過程中看出邏輯錯誤那樣。就像剛剛的例子，基本上每個人在日常生活中都要面對各種不確定，所以本書的受眾非常的廣。已經在使用統計的資料科學家和研究員會從更深入的理解和直覺中了解這些工具如何運作；工程師和程式設計師會學到他們如何能用更好的方式量化自己做出的決定（我曾用貝氏分析來找出程式出錯的原因）。行銷專員和銷售人員能將本書中的觀念應用在A/B測試上，試著了解他們的觀眾，並對機會值做出更好的評估。任何在做高階決策的人都應該要對機率有一點基本認識，才能在不確定的決策上對成本效益快速做出粗略估計。

閱讀本書所需的背景知識

閱讀本書唯一的要求就是基本的高中代數。如果你往下翻，你會看到一些數學例子，但沒有什麼特別艱鉅的任務。換句話說，這本書的目標是幫助你開始用數學方式思考問題，同時不必擁有強大的數學背景。當你讀完本書，可能會發現自己無意間就在你的日常生活中開始用公式來描述問題了！

如果你真的對統計學有一個強大背景（甚或就是貝氏統計），我相信你還是會在閱讀過程中度過愉快的時光。我自己一直都認為，要搞懂一個領域最好的方式，就是不斷用各種角度回頭檢視基本概念。就算我是本書作者，我在寫書的過程中依然發現許多連我自己都感到驚奇的事！



    

    作者簡介
    
      Will Kurt在Wayfair家居公司擔任資料科學家，曾用貝氏統計在超過五年的時間中解決了許多真實的商業問題。庫特經常在他的網站CountBayesie.com上發表談論機率的文章。

    

    目錄大綱
    
      第一部分：機率入門

第一章：貝氏思維和日常推理

第二章：衡量不確定性

第三章：不確定性的邏輯

第四章；建立二項機率分布

第五章：貝他分布



第二部分：貝氏機率和事前機率

第六章：條件機率

第七章：樂高中的貝氏定理

第八章：貝氏定理中的事前機率、概度和事後機率

第九章：貝氏事前機率與運用機率分布



第三部分：參數估計

第十章：取平均值與參數估計

第十一章：測量資料的擴散範圍

第十二章：常態分布

第十三章：參數估計的工具：機率密度函數、累積密度函數和分位數函數

第十四章：用事前機率做參數估計



第四部份：假設測試：統計學的核心

第十五章：從參數估計到假設測試：建立貝氏A/B測試

第十六章：貝氏因子和事後勝率：觀點之爭

第十七章：陰陽魔界中的貝氏推理

第十八章：當資料無法將你說服

第十九章；從假設測試到參數估計



附錄A：R語言快速入門指南

附錄B：剛好夠用的微積分

附錄C：習題解答",https://cf-assets2.tenlong.com.tw/products/images/000/151/492/medium/ACD019700.jpg?1597390414
最完整跨平台網頁設計：HTML + CSS + JavaScript + jQuery + Bootstrap + Google Maps (全彩印刷),洪錦魁,深智數位,9789865501433,2020/7/15,"本書特色

    這是一本極詳細、超清楚、最完整的跨平台網頁設計書籍，整本書一步一步將HTML元素與CSS屬性依功能分類，詳細的用程式實例做解說，期待讀者以最輕鬆方式學會網頁設計基礎知識，當讀者有了HTML和CSS知識後，本書將更進一步帶領讀者設計動態網頁、響應式網頁、Google地圖網頁，邁向網頁設計高手之路。

    這本書分成三篇：

    第一篇：HTML5完整學習

這是學習網頁設計的基礎，筆者幾乎將所有HTML的元素(Element)依功能分類，分成10個章節，用了約160個程式實例與圖檔做說明，相信讀者可以由此建立HTML的紮實基礎。

    第二篇：CSS3完整學習

    這是學習網頁編輯與美化，筆者幾乎將所有CSS的屬性(Properties)依功能分類，分成14個章節，用了約249個程式實例與圖檔做說明，在此讀者可以徹底學會網頁編輯與美化的基礎與技巧。

    第三篇：邁向網頁設計高手之路

筆者在這篇使用約353個程式實例講解了下列知識：

JavaScript：網頁結構的DOM與BOM。

jQuery(包含jQuery Mobile)：動畫與特效。

Bootstrap：響應式網頁設計。

Google Map：將Google Map嵌入網頁，這將是設計網路導航的入門。

    此外：這本書包含280頁的Word檔案電子書，全書有第1-24章的是非和選擇題習題解答，以及第1 – 34章實作題習題(此部分不含習題解答)，這些習題可以協助讀者更進一步學習。



    

    作者簡介
    
      洪錦魁

一位跨越電腦作業系統與科技時代的電腦專家，著作等身的作家。

 DOS 時代他的代表作品是 IBM PC 組合語言、C、C++、Pascal、資料結構

 Windows 時代他的代表作品是 Windows Programming 使用 C、Visual Basic。

 Internet 時代他的代表作品是網頁設計使用 HTML。

 大數據時代他的代表作品是 R 語言邁向 Big Data 之路。

除了作品被翻譯為簡體中文、馬來西亞文外，2000 年作品更被翻譯為MasteringHTML 英文版行銷美國，近年來作品則是在北京清華大學和台灣深智同步發行：

1：Java 入門邁向高手之路王者歸來

2：Python 最強入門邁向頂尖高手之路王者歸來

3：Python 最強入門邁向數據科學之路王者歸來

4：Python 網路爬蟲：大數據擷取、清洗、儲存與分析王者歸來

5：演算法最強彩色圖鑑 + Python 程式實作王者歸來

6：HTML5 + CSS3 王者歸來

7：R 語言邁向Big Data 之路

8：Excel 完整學習邁向最強職場應用王者歸來

他在2019/2020 年許多著作分別登上天瓏、博客來、Momo 電腦書類暢銷排行榜第一名，他的著作最大的特色是不賣弄文字與炫耀知識，所有程式語法會依特性分類，同時以實用的程式範例做解說，讓複雜的知識變的淺顯易懂，讀者可以由他的著作事半功倍輕鬆掌握相關知識。

    

    目錄大綱
    
      目錄

第一篇　HTML5 完整學習

第 1 章　HTML5 的歷史

1-1 認識HTML

1-2 提姆伯納- 李(Tim Berners Lee)

1-3 HTML 歷史下3 個重要的協會

1-4 HTML 版本的歷史

1-5 HTML 開發的插曲XHTML 

1-6 HTML 與瀏覽器相容問題

第 2 章　HTML5 從零開始

2-1 HTML5 與HTML4.01

2-2 HTML 文件結構

2-3 認識HTML 基本元素名詞

2-4 HTML 標籤類型

2-5 我的第一份HTML 文件

2-6 解析我的第一份HTML 文件 .

2-7 HTML 文件的註解

第 3 章　HTML 文件的輸出的基本知識

3-1 瀏覽器處理資料的輸出

3-2 標題輸出<hn> ⋯ </hn> 

3-3 換行輸出<br>

3-4 保持原始文件樣式<pre> ⋯ </pre>

3-5 水平線記號<hr> 

3-6 段落<p> ⋯ </p>

3-7 文件某個區域<section> ⋯ </section> 

3-8 頁首<header> ⋯ </header>

3-9 頁尾<footer> ⋯ </footer> 

3-10 粗體顯示<b> 和<strong> 

3-11 斜體<em> 和<i>

3-12 引用<cite>、<q> 和<blockquote>

3-13 加上網底<mark> ⋯ </mark> 

3-14 小型字<small> ⋯ </small>

3-15 顯示與電腦有關聯的文字<code><kbd><samp><var> 

3-16 定義縮寫<abbr> ⋯ </abbr> 

3-17 定義用語<dfn> ⋯ </dfn>

3-18 內容新增與刪除<ins> 和<del> 

3-19 隔離雙向文字走向<bdi> ⋯ </bdi> 

3-20 指定文字走向<bdo dir=direction> ⋯ </bdo>

3-21 標示注音或拼音<ruby><rt><rp>

3-22 上標/ 下標<sup>/<sub> 

3-23 輸出特殊字元

3-24 HTML 的樹狀結構

3-25 HTML5 不再支援的元素與屬性設定

第 4 章　設計含超連結的網頁

4-1 <a> ⋯ </a> 基本應用 

4-2 瀏覽脈絡的設定 

4-3 同一份文件跳到另一份文件 

4-4 同一份HTML 文件的超連結

4-5 聯絡資訊<address> 元素 

4-6 連結到電子郵件信箱 

4-7 引用短文的實例<cite> 與超連結的應用

4-8 指定基準的URL 

4-9 超連結與檔案下載 

第 5 章 　製作項目清單

5-1 項目符號清單

5-2 有編號的項目清單

5-3 設定有編號項目清單的起始編號

5-4 更改項目清單的連續編號

5-5 更改項目清單的編號種類 

5-6 項目清單編號遞減的應用

5-7 自定義清單 

第 6 章 　設計表格

6-1 表格的基本元素 

6-2 表格的框線border 屬性 

6-3 建立表頭<thead> 和<th> 元素

6-4 建立表格本體<tbody>

6-5 建立表尾<tfoot>

6-6 合併橫向儲存格colspan 屬性 

6-7 合併縱向儲存格rowspan 屬性

6-8 表格的標題<caption>

6-9 欄位的群組化 

6-10 表格與超連結的混合應用

第 7 章 　嵌入圖片

7-1 認識圖片

7-2 嵌入圖片<img>

7-3 標示文件標題<figure> 和<figcaption>

7-4 製作影像地圖Image Map

7-5 在表格內嵌入圖片

7-6 設計圖片的超連結

7-7 將圖片插入項目符號的應用 

7-8 簡易編排嵌入圖片與文字

7-9 GIF 動畫

第 8 章　設計多媒體網頁

8-1 播放影片<video> 元素

8-2 播放聲音<audio> 元素

8-3 指定多個播放檔案source 元素

8-4 為影片加入字幕功能<track> 元素

8-5 嵌入資源檔案embed

8-6 嵌入物件object

8-7 設定嵌入物件的參數<param> 元素

8-8 建立嵌入的浮動框架<iframe> 元素

8-9 嵌入YouTube 影片

8-10 嵌入Google 地圖 

第 9 章　製作輸入表單

9-1 製作輸入表單<form> 元素 

9-2 製作表單元件<input>

9-3 建立多行輸入的文字框<textarea>元素

9-4 為物件加上關聯標籤<label> 元素 

9-5 顯示進度<progress> 元素 

9-6 顯示儀表值<meter> 元素 

9-7 下拉式選單與選項方塊<select> 和<option> 元素

9-8 製作文字框的後補選項<datalist> 和<option> 元素

9-9 表單元件群組化<fieldset> 和<legend> 元素

9-10 加密金鑰<keygen> 

第 10 章　HTML 功能總結

10-1 全域屬性Global Attributes

10-2 事件屬性Event Attributes

10-3 認識<script> 與一個超簡單的JavaScript 應用

10-4 設定一般區塊<div> 元素

10-5 設定一般範圍<span> 元素

10-6 區塊層級與行內層級

10-7 網頁佈局

10-8 HTML 章節的觀念

10-9 日期與時間<time> 元素

第二篇　CSS3 的完整學習

第 11 章　CSS3 的基礎知識

11-1 CSS 基本語法

11-2 CSS 顏色設定

11-3 套用CSS 的方法 

11-4 class 選擇器

11-5 字型fon

11-6 id 選擇器

11-7 屬性選擇器 

11-8 全域選擇器

11-9 虛擬選擇器

11-10 前綴詞的使用

第 12 章　段落文字的編排知識

12-1 文字對齊方式text-align 

12-2 首行縮排text-indent 

12-3 行高的設定line-height 

12-4 字母間距letter-spacing 

12-5 文字間距word-spacing 

12-6 處理空白字元white-space 

12-7 大小寫轉換text-transform  

12-8 文字陰影text-shadow 

12-9 線條裝飾text-decoration 

12-10 再談線條裝飾  

12-11 設定tab 鍵寬度tab-size 

12-12 設定換行word-wrap 

12-13 設定文字超出顯示範圍時的處理方式text-overflow 

第 13 章　將CSS 應用在項目清單

13-1 建立項目清單符號list-style-type

13-2 建立圖片項目符號list-style-image

13-3 項目符號與編號位置list-style-position 

13-4 簡易表示法list-style

第 14 章　設計背景

14-1 透明色

14-2 背景顏色background-color

14-3 背景圖像background-image

14-4 背景是否重複出現background-repeat 

14-5 背景圖片位置background-position 

14-6 背景圖片大小background-size

14-7 背景圖片是否隨內容捲動background-attachment 

14-8 背景簡易表示法background

第 15 章　完整學習Box Model

15-1 認識Box Model

15-2 外邊距Margin 的設計

15-3 內邊距的設計

15-4 邊框Border 的設計

15-5 補充背景功能background-clip和background-origin

15-6 設定盒子的陰影box-shadow

15-7 設定盒子寬度與高度box-sizing

15-8 內容超出範圍時的顯示方式oveflow 

15-9 outline 屬性 

15-10 設定內容盒子的尺寸resize

第 16 章　將CSS 應用在表格資料

16-1 表格標題caption-side

16-2 表格底色的設計

16-3 表格框線設計

16-4 儲存格框線的距離border-spacing

16-5 儲存格內容加上內邊距padding

16-6 顯示或隱藏空白的儲存格empty-cells

16-7 表格框線的模式border-collapse

16-8 儲存格內容排版

16-9 表格版面的排版table-layout

16-10 綜合應用

第 17 章　設計漸層效果

17-1 線性漸層linear-gardient( ) 

17-2 放射狀漸層radial-gradient( )

17-3 重複線性漸層repeating-linear-gradient( )

17-4 重複放射性漸層repeating-radial-gradient( )

第 18 章　設計多欄位的版面

18-1 設定欄位數量與寬度columns

18-2 設定欄與欄的間距column-gap

18-3 設定欄與欄界線的屬性column-rule 

18-4 跨欄顯示column-span

18-5 設定欄位高度column-fill

18-6 換欄或換頁 

第 19 章　定位與網頁排版

19-1 設定盒子的大小

19-2 設定盒子大小的極限

19-3 display 屬性

19-4 定位position

19-5 設定與解除文繞圖

19-6 堆疊順序z-index

19-7 顯示或隱藏元素visibility

19-8 用box 調整元素呈現方式object-fit

19-9 垂直對齊vertical-align

第 20 章　 使用彈性容器(Flexible Container) 排版

20-1 Flex Container 基本觀念

20-2 彈性區塊容器的宣告display

20-3 設定版面方向flex-direction

20-4 彈性區塊內有多行排列flex-wrap

20-5 直接設定排版方向和行數flex-flow

20-6 版面區塊的排列順序order

20-7 增加版面區塊物件寬度flex-grow

20-8 縮減版面區塊物件寬度flex-shrink

20-9 調整前的區塊物件寬度flex-basis 

20-10 增減區塊寬度的簡易表示法flex

20-11 設定留白的方式justify-content

20-12 垂直向留白的處理align-items

20-13 個別版面區塊留白的處理align-self

20-14 彈性容器有多行版面區塊時留白的處理align-content

20-15 綜合應用

第 21 章　動畫設計 - 漸變效果

21-1 設定漸變效果時間transition-duration

21-2 漸變效果的屬性transition-property

21-3 漸變時間的延遲transition-delay 

21-4 設計漸變速度transition-timing-function

21-5 漸變效果的簡易表示法transition ........21-7

21-6 綜合應用 .................................................21-8

第 22 章　設計網頁動畫

22-1 關鍵影格@keyframes

22-2 運用關鍵影格animation-name

22-3 設定動畫時間animation-duration 

22-4 設計動畫變速方式animation-timing-function 

22-5 設定動畫次數animation-iteration-count

22-6 設定動畫重複執行的方向animation-direction

22-7 設定動畫執行或是暫停animation-play-state

22-8 可設定動畫延遲的時間animation-delay

22-9 設定動畫延遲與完成的樣式animation-fill-mode 

22-10 動畫的簡易表示法animation

第 23 章　變形動畫

23-1 2D 變形效果transform

23-2 2D 變形的基準點transform-origin

23-3 3D 變形效果transform

23-4 3D 變形的基準點transform-origin

23-5 設定透視圖視點距離perspective

23-6 透視圖的基準點perspective-origin 

23-7 巢狀元素產生時子元素的處理transform-style

23-8 是否顯示背面內容

backface-visibility .................................23-23

第 24 章　響應式(RWD) 網頁設計

24-1 游標cursor

24-2 媒體查詢Media Query 

24-3 選擇器完整說明 

24-4 響應式網頁設計 

第三篇　邁向網頁設計高手之路

第 25 章　JavaScript 的基礎知識

25-1 JavaScript 的功能 

25-2 JavaScript 的輸出 

25-3 撰寫JavaScript 的位置

25-4 JavaScript 基本語法

25-5 變數宣告

25-6 資料型態

25-7 運算子 

25-7-1 算數運算子 ....................................25-16

25-7-2 遞增或遞減運算子 ........................25-17

25-7-3 指派運算子 ....................................25-18

25-8 布林值、比較運算與邏輯運算

25-9 位元運算子

25-10 運算子優先順序

第 26 章　JavaScript 的流程控制

26-1 if 敘述 

26-2 switch 敘述

26-3 for 敘述

26-4 while 敘述 

26-5 do ⋯ while 敘述

26-6 特殊運算式

26-7 陣列array

26-8 for/in 敘述

26-9 綜合應用

第 27 章　JavaScript 的函數設計

27-1 基本函數設計 .........................................27-3

27-2 設計一個可以傳遞參數的函數 .............27-4

27-3 函數呼叫同時有傳回值 .........................27-5

27-4 全域變數與區域變數 .............................27-6

27-5 函數被定義在物件內 .............................27-8

第 28 章　瀏覽器物件模型BOM

28-1 認識BOM

28-2 window 物件 

28-3 screen 物件

28-4 navigator 物件

28-5 history 物件

28-6 location 物件 

第 29 章　HTML 的文件物件模型DOM

29-1 認識DOM

29-2 取得HTML 元素

29-3 更改HTML 元素內容 

29-4 DOM 節點和瀏覽元素

29-5 建立、插入、刪除節點

29-6 DOM 與CSS

29-7 HTML 的集合物件

29-8 DOM events 事件屬性事件

第 30 章　jQuery

30-1 認識jQuery 

30-2 使用jQuery

30-3 jQuery 基本語法

30-4 jQuery 的選擇器

30-5 jQuery 的事件

30-6 操作DOM

30-7 特效處理

第 31 章 jQuery Mobile 行動網頁設計

31-1 執行jQuery Mobile 方式

31-2 我的第一份jQuery Mobile 網頁

31-3 jQuery Mobile 的基本網頁架構

31-4 超連結功能

31-5 對話框的設計

31-6 頁面的切換 

31-7 建立按鈕

31-8 彈出框的設計

31-9 工具列

31-10 導覽列

31-11 面板Panel

31-12 可折疊區塊

31-13 建立表格 

31-14 清單顯示

31-15 清單符號

31-16 製作輸入表單 

第 32 章　 響應式網頁設計Bootstrap入門

32-1 Bootstrap 網頁文件的基本架構

32-2 Bootstrap 的容器 

32-3 Bootstrap 的網格系統

32-4 更完整解說響應式網頁切換點實作

32-5 Bootstrap 的排版

32-6 文字色彩 

32-7 圖片應用

32-8 表格設計 

32-9 綜合應用 

第 33 章　Bootstrap 的元件

33-1 Buttons 按鈕設計

33-2 Button 群組按鈕

33-3 Dropdowm 下拉式選單

33-4 Jumbotron 大區塊效果

33-5 Alerts 警報訊息 

33-6 Badges 徽章

33-7 Progress Bars 進度條 

33-8 Spinners 旋轉特效

33-9 Pagination 分頁 

33-10 Nav 導覽

33-11 Navigation Bars 導覽區塊

33-12 Forms 表單 

33-13 Input 輸入

33-14 工具提示Tooltip 

33-15 彈出框Popover 

33-16 卡片Cards

33-17 折疊Collapse 

33-18 輪播Carousel

第 34 章　Google Maps

34-1 HTML 的 Geolocation 

34-2 取得Google Maps API 金鑰

34-3 列出所在位置的Google 地圖

34-4 標記地理位置 

34-5 事件處理程式

34-6 45 度角度透視欣賞古典建築

附錄A HTML 標籤列表

附錄Ｂ HTML 屬性索引表

附錄Ｃ CSS 屬性索引表

附錄Ｄ 認識網頁設計的長度單位

附錄Ｅ 認識網頁設計的顏色",https://cf-assets2.tenlong.com.tw/products/images/000/149/881/medium/DM2032_3D.jpg?1593502202
深度學習 － 硬體設計,劉峻誠、羅明健,全華圖書,9789865034481,2020/7/15,"本書特色

1. 本書針對目前深度學習在解決算力瓶頸的架構，獨家收錄包括各家IC設計與個別實驗室的設計。

2. 針對不同的架構有深入淺出的說明，並輔助使用大量的圖示，以資料流的路徑觀點，說明設計的優缺點。

3. 本書專題包含有趣的自駕車與無人機。

4. 本書獨家與耐能智慧科技合作，使用耐能智慧科技的AI Dongle，並代以實際的例子做說明，利用實作專題的方式，讓本書的讀者可以認知AI EDGE晶片設計架構所帶來的好處。

5. 本書在每個章節提供反思的練習題，幫助讀者能正確的理解。

內容簡介

深度學習成功解決許多電腦上的難題，並廣泛應用於日常生活中，例如：金融、零售和醫療保健等。本書從中央處理器(CPU)、圖形處理器(GPU)和神經網路處理器(NPU)，到各種深度學習硬體設計，並列出解決問題的不同方式。

從這些設計中，可以發展出嶄新硬體設計，進一步改善整體效能和功耗，而本書有說明新的硬體設計，即流圖理論和三維神經處理，並提出智能機器人項目，以耐能終端智慧加速器(Kneron Edge AI)提升深度學習成效，其具有低成本的優勢，並以較低的功耗，實現較佳的性能。

本書適用於大學、科大資工、電子、電機、自控系「深度學習」課程及對本書有興趣的人士使用。



    


    目錄大綱
    
      CH1 引言

1.1 發展歷程

1.2 神經網路模型

1.3 神經網路分類

1.4 神經網路框架

1.5 神經網路模型

CH2 深度學習

2.1 神經網路層

CH3 並行架構

3.1 英特爾中央處理器（CPU）

3.2 英偉達圖形處理器

3.3 英偉達深度學習加速器

3.4 張量處理器

3.5 投射處理器

CH4 流圖理論

4.1 Blaize圖形流處理器

4.2 Graphcore智慧處理單元

CH5 卷積優化

5.1 深度卷積神經網路加速器

5.2 麻省理工眼神加速器

CH6 記憶體內計算

6.1 神經立方體架構

6.2 俄羅斯方塊處理器

6.3 神經流動加速器

CH7 近記憶體架構

7.1 大電腦超級電腦

7.2 Cnvlutin加速器

CH8 網路稀疏

8.1 節能推論引擎

8.2 寒武紀-X加速器

8.3 SCNN處理器

8.4 先知網路加速器

CH9 三維神經處理

9.1 三維集成電路架構

9.2 電源分配網路

9.3 三維網橋

9.4 晶片網路

9.5 多通道高速鏈路

9.6 時鐘門控",https://cf-assets2.tenlong.com.tw/products/images/000/150/588/medium/9789865034481.jpg?1595238193
"Python 錦囊妙計, 3/e (Python Cookbook, 3/e)","David Beazley, Brian K. Jones 著、黃銘偉 譯",歐萊禮,9789863470687,2014/4/14,"<內容特色>

精通 Python 3 的訣竅祕技 

如果你撰寫 Python 3 程式時需要協助，或是想要更新舊的 Python 2 程式碼，這本書都能派上用場。滿載以 Python 3.3 所撰寫並經過測試的實用訣竅，這本獨特的錦囊妙計適合想要聚焦於現代工具與慣用手法的資深 Python 程式設計師。

在書中你會找到關於十幾個不同主題的完整訣竅，涵蓋 Python 程式語言以及各種應用領域共通的任務。每個訣竅都包含能夠立即用在你專案上的程式碼範例，還會討論這些解決方案的詳細步驟以及運作原理。

涵蓋的主題包括：

■ 資料結構與演算法

■ 字串與文字

■ 數字、日期與時間

■ 迭代器與產生器

■ 檔案與 I/O

■ 資料編碼與處理

■ 函式

■ 類別與物件

■ Metaprogramming

■ 模組與套件

■ 網路與 Web 程式設計

■ 共時性

■ 工具指令稿的撰寫及系統管理

■ 測試、除錯與例外

■ C 擴充功能

David Beazley 是位獨立軟體開發者與作家，為軟體開發人員、科學家和工程師教授程式設計課程。他是 Python Essential Reference(Addison-Wesley) 的作者，並創建了數個開放原始碼的 Python 套件

Brian K. Jones 是普林斯頓大學電腦科學系的系統管理員



本書程式碼下載：https://github.com/dabeaz/python-cookbook

<章節目錄>

第一章 資料結構與演算法

第二章 字串與文字

第三章 數字、日期與時間

第四章 迭代器與產生器

第五章 檔案與I/O

第六章 資料編碼與處理

第七章 函式

第八章 類別與物件

第九章 Metaprogramming

第十章 模組與套件

第十一章 網路與Web 程式設計

第十二章 共時性（Concurrency）

第十三章 撰寫工具指令稿與系統管理

第十四章 測試、除錯與例外

第十五章 C 擴充功能（C Extensions）

附錄A 延伸閱讀

索引",https://cf-assets1.tenlong.com.tw/images/81966/medium/A381.jpg
為你自己學 Git,五倍紅寶石 高見龍,博碩文化,9789864342662,2017/11/29,"不管您的職業是不是工程師，只要你是電腦工作者每天或多或少都需要編輯、修改許多的檔案。



您怎麼樣備份您的檔案？您怎麼樣一眼就可以知道每次備份的差別？如果您跟其它同事一起共同檔案，不論是有心無意，萬一檔案被其它同事覆蓋掉了該怎麼救回來？



如果你在乎這些問題的答案，那使用「版本控制系統」就是一個很不錯的選擇。透過這樣的系統，可以清楚的記錄每個檔案是誰在什麼時候加進來、什麼時候被修改或刪除。Git 就是一種版本控制系統，也是目前業界最流行的版本控制系統，沒有之一。



人生不能重來，但 Git 可以隨時幫你救回來不小心修改或刪除的檔案。



簡單的說，Git 就像玩遊戲的時候可以儲存進度一樣。為了避免遊戲打輸了而損失裝備，又或是打倒頭目卻沒有掉落期望的裝備，你也許在每次要去執行任務之前之前記錄一下，在發生狀況的時候可以載入舊進度，再來挑戰一次。



若您平日的工作已有在使用 Git，本書大部份的內容應該相對的輕鬆；即使已經平日有在使用 Git，也可從本書學到一些「本來以為 Git 是這樣，但其實是那樣」的觀念。



本書內容：

- 常用 Git 指令介紹。

- 各種 Git 的常見問題及使用情境。

- 如何修改 Git 的歷史紀錄。

- 如何使用 GitHub 與其它人一起工作。

- 一般平常工作用不到但對觀念建立有幫助的冷知識。



    

    作者簡介
    
      五倍紅寶石 高見龍



雖非資訊本科系出身，但喜歡寫程式而且希望可以寫一輩子程式的電腦阿宅。



喜歡辦活動，是不少台灣大型技術研討會(如 PHPConf、WebConf、RubyConf Taiwan 等)及社群活動(Rails Girls Taipei、Taipei.rb)的發起人或主辦人。



喜愛與人分享，曾在許多國內、外技術研討會分享心得。四次創業經驗，雖然其中有兩次是失敗經驗但仍樂此不疲。目前為五倍紅寶石共同創辦人及負責人。



- 20 年程式開發經驗

- 將近 10 年的教學經驗

- 在台灣推廣 Ruby 程式語言多年，在各大專院校廣為開課，學生已累積超過 1,000 人以上



Blog: http://kaochenlong.com

Facebook: https://www.facebook.com/eddiekao

Twitter: https://twitter.com/eddiekao

Github: https://github.com/kaochenlong

Email: eddie@5xruby.tw



封面插畫

陳曉菁，喜歡手作實踐一些小玩意，平常寫寫程式，偶爾弄弄設計煮煮飯，簡單來說就是有點手賤要找點事做，目前是五倍紅寶石的酒鬼，歡迎來礦坑乾杯。

    

    目錄大綱
    
      前言　寫在最前面 - 為你自己學Git ！

作者序



第1章：入門篇

1.1 什麼是Git？為什麼要學習它？

1.2 與其它版本控制系統的差異



第2章：環境安裝

2.1 安裝在 Windows 作業系統

2.2 安裝在Mac OSX 作業系統

2.3 安裝在Linux 作業系統

2.4 圖形化介面工具



第3章：終端機/命令提示字元

3.1 終端機及常用指令介紹

3.2 超簡明Vim操作介紹



第4章：設定Git

4.1 使用者設定

4.2 其它方便的設定



第5章：開始使用Git

5.1 新增、初始 Repository

5.2 把檔案交給Git 控管

5.3 工作區、暫存區與儲存庫

5.4 檢視紀錄

5.5 狀況題 如何在Git 裡刪除檔案或變更檔名？

5.6 狀況題 修改Commit 紀錄

5.7 狀況題 追加檔案到最近一次的Commit

5.8 狀況題 新增目錄？

5.9 狀況題 有些檔案我不想放在Git 裡面...

5.10 狀況題 檢視特定檔案的Commit 紀錄

5.11 狀況題 等等，這行程式誰寫的？

5.12 狀況題 啊！不小心把檔案或目錄刪掉了…

5.13 狀況題 剛才的Commit 後悔了，想要拆掉重做…

5.14 狀況題 不小心使用hard 模式Reset 了某個Commit，救得回來嗎？

5.15 冷知識 HEAD 是什麼東西？

5.16 狀況題 可以只Commit 一個檔案的部份的內容嗎?

5.17 冷知識 那個長得很像亂碼SHA-1 是怎麼算出來的？

5.18 超冷知識 在.git 目錄裡有什麼東西？ Part 1

5.19 超冷知識 在.git 目錄裡有什麼東西？ Part 2



第6章：使用分支

6.1 為什麼要使用分支？

6.2 開始使用分支

6.3 對分支的誤解

6.4 合併分支

6.5 狀況題 為什麼我的分支都沒有「小耳朵」？

6.6 常見問題合併過的分支要留著嗎？

6.7 狀況題 不小心把還沒合併的分支砍掉了，救得回來嗎？

6.8 另一種合併方式（使用 rebase）

6.9 合併發生衝突了，怎麼辦？

6.10 冷知識 為什麼大家都說在 Git 開分支「很便宜」？

6.11 冷知識 Git 怎麼知道現在是在哪一個分支？

6.12 狀況題 我可以從過去的某個Commit 再長一個新的分支出來嗎？



第7章：修改歷史紀錄

7.1 狀況題 修改歷史訊息

7.2 狀況題 把多個 Commit 合併成一個Commit

7.3 狀況題 把一個 Commit 拆解成多個Commit

7.4 狀況題 想要在某些 Commit 之間再加新的Commit

7.5 狀況題 想要刪除某幾個 Commit 或是調整Commit 的順序

7.6 Reset、Revert 跟 Rebase 指令有什麼差別？



第8章：標籤

8.1 使用標籤

8.2 冷知識 標籤跟分支有什麼不一樣？



第9章：其它常見狀況題與冷知識

9.1 狀況題 手邊的工作做到一半，臨時要切換到別的任務

9.2 狀況題 不小心把帳號密碼放在Git 裡了，想把它刪掉…

9.3 冷知識 怎麼樣把檔案真正的從 Git 裡移掉？

9.4 冷知識 你知道Git 有資源回收機制嗎？

9.5 冷知識 斷頭（detached HEAD）是怎麼一回事？



第10章：遠端共同協作 - 使用 GitHub

10.1 GitHub 是什麼？

10.2 Push 上傳到 GitHub

10.3 Pull 下載更新

10.4 狀況題 怎麼有時候推不上去...

10.5 從伺服器上取得 Repository

10.6 常見問題Clone 跟 Pull 指令有什麼不一樣？

10.7 與其它開發者的互動 - 使用 Pull Request（PR）

10.8 狀況題 怎麼跟上當初 fork 專案的進度？

10.9 狀況題 怎麼刪除遠端的分支？

10.10 狀況題 聽說 git push -f 這個指令很可怕，什麼情況可以使用它呢？

10.11 使用GitHub 免費製作個人網站

10.12 冷知識 一定要有GitHub 才能得到別人更新的檔案嗎？



第11章：使用Git flow

11.1 Git Flow 是什麼？為什麼需要這種東西？",https://cf-assets2.tenlong.com.tw/products/images/000/111/681/medium/9789864342662.jpg?1525540373
圖解 LINUX 指令操作與網路設定,"河野寿 著
          許郁文 譯",碁峰資訊,9789865026349,2020/10/21,"看圖就能了解Linux的操作，學習無負擔

本書的宗旨為「看圖就了解Linux的操作」。您只要看看漫畫、插圖圖解與Point的內容，就能了解這些命令或操作會有什麼結果。



本書特色

．透過漫畫詮釋Linux的抽象概念

．以指示線或圖案進一步解說難懂的命令

．「冷知識」單元，用簡單易懂的說法解釋術語

．每章最後均有練習問題，即時驗收學習成效

 

<序>

自UNIX問世以來，已經過了五十年。

雖然運作環境與核心（kernel）不斷進化，但沒想到能一直使用同一套OS（系統），直教人覺得不可思議。

一如本書所介紹的，UNIX本身的進化也非常多元，但其中最為重要的，莫過於「Linux」的問世與普及。Linux目前有許多發行版本，其中以Debian的Ubuntu以及Red Hat的CentOS最為普及。

在伺服器與基礎建設的世界裡，Red Hat的CentOS算是最常使用，所以本書也以CentOS的環境說明。

筆者最初接觸的Linux是Slackware這個發行版，雖然這個版本沒有安裝程式，也不像現在的新版本那麼好用，而且周邊裝置都需經過確認才能安裝，所以記憶中，光是安裝就大費周章。等到家裡採用光纖網路，有了固定IP之後，才開始「在家自建伺服器」，當時是利用Red Hat建立伺服器，現在回想起來，從這個過程中學到不少東西。本書將使用Oracle提供的VirtualBox虛擬化應用程式，執行本書所需的CentOS，各位讀者可透過這個學習環境，實際體驗Linux的操作。

要學習Linux，「邊學邊試」是最快的捷徑，而且本書使用的是虛擬環境，可不斷重複安裝，所以請大家務必勇於嘗試，學習所需的基本知識。



    

    作者簡介
    
      河野壽

小學就常到秋葉原買電子零組件，自行組裝收音機或蜂鳴器，是個非常平凡的少年。進入理科聞名的學校後，便與電腦維持良好的關係，同時嘗試不同的事物，直到現在不改其志。

著有《玄箱PROの本》、《Cygwi nコンパクトリファレンス》、《図解で明解 メールのしくみ》（以上均由毎日コミュニケーションズ出版）、《いっきにわかるパソコン購入のツボ》（宝島社出版）與其他。

    

    目錄大綱
    
      第1章 在開始學習之前

第2章 開始使用Linux吧

第3章 檔案與目錄的基本操作

第4章 第一次使用編輯器就上手

第5章 使用者扮演的角色與群組的基本常識

第6章 使用Shell的實用功能

第7章 越用越順手的絕招

第8章 軟體與套件的基本知識

第9章 檔案系統的基礎知識

第10章 程序、單元、工作

第11章 網路的基礎知識

第12章 伺服器租用服務、虛擬伺服器、雲端服務的基礎知識",https://cf-assets2.tenlong.com.tw/products/images/000/153/542/medium/ACA026300.jpg?1602146680
AIOT 與 OpenCV 實戰應用：Python、樹莓派、物聯網與機器視覺,朱克剛,碁峰資訊,9789865024116,2020/2/24,"*詳細的步驟說明，一步步跟著做，有如專家從旁親自指導!

*本書使用Python 3、樹莓派4B與OpenCV 4

*適合初學者入門以及老手隨時參考的實用工具書

*涵蓋大部分常用感測元件



本書內容說明清楚，透過實作例子的步驟說明，讓初學者可以快速上手，是一本適合學習的好書。

-- 高雄科技大學電子系教授兼學務長 陳銘志



Python近幾年異軍突起，已然成為資料分析、機器學習與人工智慧等應用不可或缺的程式開發工具。這些應用都需要領域資料，而大量資料的搜集與彙整則需仰賴物聯網的建置，Python語言讓物聯網應用更容易實現。本書是Python與物聯網實務學習必備的教材與工具書。

-- 國立虎尾科技大學資工系教授暨彰雲嘉數位機會中心輔導團主任 江季瀚



繼電腦與手機之後，IoT是下一個超過億級佈建的裝置，預估到2025年會超過 754億台，無處不充滿了新的應用與商機。 要抓住這一波大趨勢，樹苺派是最接近IoT世界的起點，透過搭配Python、OpenCV工具的使用，可以讓你一窺這個大世界的堂奧。 很高興朱克剛老師把這些元素集結在一本書裡面，讓大家可以快速掌握這張通往未來的門票。

-- 宏碁策略規劃策略解決方案總處長 游鴻志



因應軟硬整合與物聯網應用需求，朱老師以範例引導的學習方式，從小範例到專題應用實例，讓讀者能將其應用到相關的硬體與感測器，進而開發打造屬於自己的專案，不管對初學者或開發者來說，這都是一本值得擁有的書。

-- 丞鐸數位工程有限公司總經理 李紹群



朱克剛老師在資訊、通訊與教育訓練工作20年，具有豐富的專案開發經驗，對AIoT軟硬整合技術更是爐火純青，由他撰寫的本書提供了豐富詳盡的最新技術，範例精簡而實用，內容精彩可期。

-- 資策會數位教育研究所課程經理 王偉璁



    

    作者簡介
    
      從iOS程式設計跨足物聯網與機器視覺領域，曾於大學資訊相關科系任教，擔任教育部資訊志工資深領隊，創辦台灣資訊志工教育推廣協會，關注台灣偏鄉資訊教育。目前在一家資訊公司打雜接些有趣的案子，並於資策會與台中電腦公會擔任資深講師，與想在資訊領域一展長才的有為青年互相切磋。

    

    目錄大綱
    
      第 1 篇　Python

1-1 介紹與安裝

1-2 基礎概念

1-3 字串處理

1-4 函數

1-5 模組與類別

1-6 多執行緒

1-7 檔案存取

1-8 資料庫

1-9 網際網路

1-10 Socket程式

1-11 Tkinter視窗

第 2 篇　樹莓派

2-1 安裝

2-2 常用指令

2-3 GPIO 輸出

2-4 GPIO 輸入

2-5 PWM

2-6 中斷

2-7 數位感測器

2-8 類比感測器

2-9 MQTT

2-10 Web 與 CGI

2-11 NRF24L01+

2-12 攝影機

第 3 篇　OpenCV

3-1 安裝

3-2 顯示攝影機影像

3-3 開檔與存檔

3-4 2D繪圖

3-5 人臉偵測

3-6 人臉辨識

3-7 特定區域處理

3-8 物體移動追蹤

3-9 背景移除

3-10 色彩辨識與追蹤

3-11 邊緣偵測

3-12 霍夫圓形檢測

3-13 特徵描述

3-14 特徵比對

3-15 多邊形辨識

3-16 多邊形凹凸點計算

3-17 全景圖",https://cf-assets2.tenlong.com.tw/products/images/000/145/263/medium/ACL057500.jpg?1582016112
GAN 對抗式生成網路 (GANs in Action: Deep learning with Generative Adversarial Networks),"Jakub Langr、Vladimir Bok 著
          哈雷 譯",旗標科技,9789863126386,2020/9/7,"「GAN 是近年來機器學習領域中最有趣的點子！」這是臉書首席 AI 科學家、也是當今深度學習三巨頭之一的 Yann LeCun 對 GAN (對抗式生成網路) 技術下的註解。

GAN 從誕生至今已經創造了許多令人瞠目結舌的驚人應用，從最早貓圖片的自動產生器、虛擬人臉生成器、到 Deepfake 影片/照片換臉特效，都是 GAN 的應用。光是 GAN 的開山論文，被引用次數就足足是 TensorFlow 的 2.5 倍，不只在技術領域，就連麥肯錫 (McKinsey & Company) 等主流媒體，GAN 的相關討論也時常出現。

但要搞懂這最尖端、最熱門的技術可不容易，網路上許多似是而非的說法，加上漏洞百出的數學推導，讓初學者不得其門而入。

本書目標是針對想從基礎開始學習 GAN（對抗式生成網路）的人，提供最可靠的原理教學與實戰指南。我們將從最簡單的範例開始上手，然後介紹各種最先進的 GAN 技術並用程式實作，包括生成高解析度圖片、圖像轉譯、或製作對抗性樣本等。我們會提供最直觀的解說，讓讀者只需要具備基礎的 Python、深度學習、與數學相關知識，就能直接探索這項如魔法般的尖端科技。

我們希望讀者不但能了解 GAN 到目前為止所取得的成就，還能獲得必要的知識與工具來充實自己，以便進一步展開新的應用。對於充滿企圖心的人來說，GAN 可是具有無窮的潛力，一旦上手，未來在學術界或生活應用上必能大放異彩，很高興您能加入我們的行列。 

本書特色: 

  ●本書由施威銘研究室監修，內容易讀易懂，並加入大量「編註」與「小編補充」以幫助理解及補充必要知識。

●內容涵蓋 Autoencoder/VAE 及各種 GAN 技術，包括 DCGAN、PGGAN、SGAN、CGAN、CycleGAN、NS-GAN、Min-Max GAN、WGAN、BigGANigGAN、StyleGAN、...等，還有對抗性樣本、以及 GAN 在醫學界與時尚界的應用案例。

●不求花俏吸睛，腳踏實地帶你一步步揭開各種 GAN 的神祕面紗。從原理、演算法、架構圖、再到程式實作，讓您一氣呵成、深入體驗 GAN 的奧妙。

●所有範例程式小編都已在 Colab 上實測過，並針對可能因版本不同而遇到的狀況提供說明及解決方案。建議讀者也在免費的 Colab 上執行範例程式，可避免一些環境設定或相容性等問題。

名人推薦:

全面且深入介紹了 AI 的未來 - Simeon Leyzerzon, Excelsior Software

超級實用, 將理論與實作完美整合 - Dana Robinson, The HDF Group

對於發展快速且應用廣泛的 GAN 知識, 做了非常有系統的介紹 - Grigory V. Sapunov, Intento

出色的寫作、加上易於理解的數學解釋 - Bachir Chihani, C3

在「程式設計書、學術理論書、網誌」之間取得了極佳的平衡 - Erik Sapper博士, 加利福尼亞州立理工大學



    

    作者簡介
    
      Jakub Langr 畢業於牛津大學，是一間新創公司的聯合創始人，該公司使用 GAN 進行創意和廣告應用。Jakub 自 2013 年起就一直從事資料科學工作，最近則是在 Filtered.com 負責資料科學技術，並在 Mudano 從事資料科學研發工作。他還在伯明翰大學（英國）和眾多民營公司設計並教授資料科學課程，另兼任牛津大學客座講師。他也是《Entrepreneur First》第七屆深度技術人才投資者中的一位駐點創業者。Jakub 還是皇家統計學會的研究員，並受邀在各種國際會議上發表演說。他將本書的全部收益捐給英國非營利心臟基金會。

Vladimir Bok 以優異成績取得哈佛大學計算機科學學士學位。他是在微軟研究院從事音樂風格轉換的相關研究時，見證到 GAN 的巨大潛力。他的工作經驗豐富，從 Y Combinator 投資的新創公司應用資料科學部門，到微軟的領導跨職能計劃皆有涉入。Vladimir 最近在紐約的一家新創公司管理資料科學專案，該公司針對線上旅行與電子商務網站提供機器學習服務，其中不乏《財訊》所列的五百大企業。他將本書的所有收益捐給非營利組織《Girls Who Code》。

    

    目錄大綱
    
      [簡要目錄]

第一篇 GAN 與生成模型入門

1 GAN (對抗式生成網路) 簡介

2 用 Autoencoder (AE) 做為生成模型

3 你的第一個 GAN：生成手寫數字

4 深度卷積 GAN (DCGAN)

第二篇 GAN 的進階課題

5 訓練 GAN 時所面臨的挑戰與解決之道

6 漸進式 GAN (PGGAN)

7 半監督式 GAN (SGAN)

8 條件式 GAN (CGAN)

9 CycleGAN

第三篇 GAN 的實際應用及未來方向

10 對抗性樣本 (Adversarial example)

11 GAN 的實際應用

12 展望未來



[完整目錄]

第一篇 GAN 與生成模型入門

第 1 章 GAN (對抗式生成網路) 簡介

1.1 什麼是 GAN (Generative Adversarial Network)？

1.2 GAN 如何運作？

1.3 GAN 的詳細運作流程

1.3.1 GAN 的訓練方式

1.3.2 何時達到均衡 (完成訓練)

1.4 為何要學 GAN？

第 2 章 用 Autoencoder (AE) 做為生成模型

2.1 生成模型 (Generative model) 簡介

2.2 Autoencoder 的運作原理 

2.3 Autoencoder 的架構

2.4 Autoencoder 與 GAN 有何不同？

2.5 Autoencoder 的用途

2.6 「非監督式」與「自監督式」學習 

2.6.1 舊招新用

2.6.2 用 Autoencoder 生成資料

2.6.3 VAE (Variational Autoencoder)

2.7 實例：寫程式實作 VAE 

2.8 再論潛在空間 

2.9 為何我們還是得用 GAN？ 

第 3 章 你的第一個 GAN：生成手寫數字

3.1 GAN 的基礎：對抗訓練 

3.1.1 損失函數

3.1.2 訓練過程

3.2 生成器與鑑別器的目標差異

3.2.1 目標衝突

3.2.2 混淆矩陣 (confusion matrix)

3.3 GAN 的訓練程序 

3.4 實例：生成手寫數字 

3.4.1 匯入模組並設定模型輸入維度

3.4.2 實作生成器

3.4.3 實作鑑別器 

3.4.4 建立並編譯訓練所需的模型

3.4.5 撰寫訓練用的函式

3.4.6 顯示生成的圖片

3.4.7 開始訓練模型

3.4.8 檢查結果

3.5 結語

第 4 章 深度卷積 GAN (DCGAN)

4.1 卷積神經網路 (CNN)

4.1.1 卷積濾鏡 (Convolutional filter)

4.1.2 將 CNN 的概念視覺化

4.2 DCGAN 簡史

4.3 批次正規化 (Batch normalization)

4.3.1 了解正規化

4.3.2 批次正規化計算

4.4 實例：用 DCGAN 生成手寫數字 

4.4.1 匯入模組並設定模型輸入的維度

4.4.2 實作 DCGAN 的生成器

4.4.3 實作 DCGAN 的鑑別器

4.4.4 建立並運行 DCGAN

4.4.5 模型輸出

4.5 結語

第二篇 GAN 的進階課題

第 5 章 訓練 GAN 時所面臨的挑戰與解決之道

5.1 評估訓練成效的方法

5.1.1 各種可能的評估方法

5.1.2 起始分數 (IS)

5.1.3 Fréchet 初始距離 (FID)

5.2 訓練上的挑戰

5.2.1 逐步增加神經網路的深度

5.2.2 更改賽局的設計與評估方式

5.2.3 Min-Max GAN

5.2.4 非飽和 GAN (NS-GAN)

5.2.5 何時該結束訓練

5.2.6 Wasserstein GAN (WGAN)

5.3 賽局設計的重點整理 

5.4 訓練 GAN 的實用技巧

5.4.1 將輸入正規化

5.4.2 批次正規化

5.4.3 梯度懲罰

5.4.4 給鑑別器更多的訓練

5.4.5 避免稀疏梯度

5.4.6 使用標籤平滑或增加標籤雜訊

第 6 章 漸進式 GAN (PGGAN)

6.1 於潛在空間中做插值

6.2 進展快速的 PGGAN

6.2.1 以漸進方式擴充圖層解析度

6.2.2 程式觀摩

6.2.3 小批次標準差

6.2.4 均等學習率

6.2.5 生成器的逐像素特徵正規化

6.3 PGGAN 的關鍵改良總結

6.4 TensorFlow Hub 入門

6.5 實際應用

第 7 章 半監督式 GAN (SGAN)

7.1 認識 SGAN

7.1.1 什麼是 SGAN？

7.1.2 SGAN 的輸入、輸出、與目標

7.1.3 SGAN 的訓練過程

7.1.4 SGAN 的訓練目標

7.2 實例：實作 SGAN

7.2.1 SGAN 的架構圖

7.2.2 行前說明

7.2.3 程式初始設置

7.2.4 準備資料集

7.2.5 設計生成器 

7.2.6 設計鑑別器

7.2.7 建立並編譯模型

7.2.8 開始訓練

7.3 與全監督式分類器比較

7.4 結語

第 8 章 條件式 GAN (CGAN)

8.1 CGAN 的發展動機

8.2 CGAN 的原理與架構

8.2.1 CGAN 的生成器

8.2.2 CGAN 的鑑別器

8.2.3 總結表

8.2.4 架構圖

8.3 實例：實作 CGAN

8.3.1 行前說明

8.3.2 初始設置

8.3.3 設計生成器

8.3.4 設計鑑別器

8.3.5 建立並編譯模型

8.3.6 設計訓練迴圈

8.3.7 顯示樣本影像

8.3.8 實際開始訓練模型

8.3.9 檢視輸出結果：是否生成指定種類的資料

8.4 結語

第 9 章 CycleGAN

9.1 圖像轉譯

9.2 來回一致損失 (Cycle-consistency loss)：先轉過去再轉回來

9.3 對抗損失 (Adversarial loss)

9.4 特質損失 (Identity loss)

9.5 CycleGAN 的架構

9.5.1 整體架構：CycleGAN 的 4 個神經網路

9.5.2 生成器的架構

9.5.3 鑑別器的架構

9.6 GAN 的物件導向設計

9.7 實例：實作 CycleGAN

9.7.1 建立 CycleGAN 的 4 個神經網路

9.7.2 建立生成器的 method

9.7.3 建立鑑別器的 method

9.7.4 訓練模型的 method

9.7.5 實際開始訓練

9.8 CycleGAN 的強化和應用

9.8.1 CycleGAN 加強版 (Augmented CycleGAN)

9.8.2 CycleGAN 的各種應用

第三篇 GAN 的實際應用及未來方向

第 10 章 對抗性樣本 (Adversarial example)

10.1 對抗性樣本的用途

10.2 深度學習的潛在弱點：容易被騙

10.3 訓練方法的善用與濫用

10.4 樣本中的訊號與雜訊

10.5 還不到絕望的時候

10.6 解鈴還須繫鈴人，該 GAN 出馬了

10.7 結語 

第 11 章 GAN 的實際應用

11.1 GAN 在醫學方面的應用

11.1.1 用 GAN 提高診斷準確率

11.1.2 擴增訓練樣本的方法

11.1.3 應用的成果

11.2 GAN 在時尚方面的應用

11.2.1 用 GAN「設計」時尚

11.2.2 把 CGAN 用到時尚領域

11.2.3 創造符合個人偏好的新商品

11.2.4 針對個人偏好改良現有商品

11.3 結語

第 12 章 展望未來

12.1 GAN 的道德考量

12.2 GAN 的最新改良

12.2.1 RGAN (相對 GAN)

12.2.2 SAGAN (自我注意 GAN)

12.2.3 BigGAN

12.3 更多潛力 GAN 的參考資料 

12.4 本書的回顧與結語",https://cf-assets2.tenlong.com.tw/products/images/000/151/612/medium/9789863126386_bc.jpg?1598329036
深度學習的數學：用數學開啟深度學習的大門,"涌井良幸、涌井貞美 著
          楊瑞龍 譯",博碩文化,9789864344802,2020/5/4,"【數學王道】01



掌握數學才能開啟深度學習的大門

注重理解才能走向數學應用之大道



許多人在求學時期接觸數學的時候總是意興闌珊，總覺得只要四則運算就能夠應付大部分的日常所需，什麼指數、對數、向量、三角函數，甚至微積分，常常是不求甚解而只求低空飛過。等到機器學習、深度學習等掘起，人們才突然了解到那些數學知識的確是有用的，它們才是這些領域入門的鑰匙。



不論您是曾經放棄過數學，還是想要重溫數學的知識，透過本書都可以讓您迅速重回數學的懷抱。書中擅用比喻的方式，務使讀者能夠從基礎原理開始理解，並佐以簡明扼要的範例加以解說，使讀者循序漸進地理解深度學習的諸多關鍵字，像是：權重、偏壓、啟動函數、梯度下降法、誤差反向傳播法、卷積神經網路......等。搭配清楚且直觀的插圖，就連高中生也看得懂！不管什麼樣的職業或年紀，只要拿起這本書，就能使數學成為您強而有力的武器。



除了理解之外，本書也重視實際動手作。您可以下載書中資源，親自用Excel檔來接觸深度學習的數學操作。輸入不同的數字並觀察其變化，相信會使讀者更能夠了解公式的涵義。



本書內容



第1章 神經網路的概說

第2章 理解神經網路所需的數學基礎知識

第3章 神經網路的最佳化

第4章 神經網路和誤差反向傳播法

第5章 深度學習和卷積神經網路。



書中使用Excel進行理論驗證，幫助讀者直觀地體驗深度學習的原理。



    

    作者簡介
    
      湧井良幸

1950年出生於東京，畢業於東京教育大學（現今的筑波大學）數學系，並於千葉縣立高等學校擔任教職。爾後他辭去教職成為一名作家，致力於書籍的寫作。著有《用Excel學深度學習》（合著）、《統計學有什麼用？》等書。

湧井貞美

1952年出生於東京，完成東京大學理學系研究科碩士課程後，陸續擔任富士通、神奈川縣立高等學校的教職員，而後成為獨立的科普作家。著有《用Excel學深度學習》（合著）、《圖解貝葉斯統計入門》等書。

    

    目錄大綱
    
      第 1 章　神經網路的概說

1-1 神經網路和深度學習

1-2 神經元行為的數學表示

1-3 啟動函數：將神經元的行為一般化

1-4 什麼是神經網路

1-5 用惡魔來講解神經網路的結構

1-6 將惡魔的行為翻譯成神經網路的語言

1-7 網路自主學習的神經網路

第 2 章　神經網路的數學基礎

2-1 神經網路所需的函數

2-2 有助於理解神經網路的數列和遞推關係式

2-3 神經網路中經常用到的 Σ 符號

2-4 有助於理解神經網路的向量基礎

2-5 有助於理解神經網路的矩陣基礎

2-6 神經網路的微分基礎

2-7 神經網路的偏微分基礎

2-8 誤差反向傳播法必備的連鎖律

2-9 梯度下降法的基礎：多變數函數的近似公式

2-10 梯度下降法的涵義與公式

2-11 用 Excel 體驗梯度下降法

2-12 最優化問題和迴歸分析

第 3 章　神經網路的最佳化

3-1 神經網路的參數和變數

3-2 神經網路的變數的關係式

3-3 學習資料和正解

3-4 神經網路的成本函數

3-5 用 Excel 體驗神經網路

第 4 章　神經網路和誤差反向傳播法

4-1 梯度下降法的回顧

4-2 神經單元誤差 δ

4-3 神經網路和誤差反向傳播法

4-4 用 Excel 體驗神經網路的誤差反向傳播法

第 5 章　深度學習和卷積神經網路

5-1 用小惡魔來講解卷積神經網路的結構

5-2 將小惡魔的行為翻譯成卷積神經網路的語言

5-3 卷積神經網路的變數關係式

5-4 用 Excel 體驗卷積神經網路

5-5 卷積神經網路和誤差反向傳播法

5-6 用 Excel 體驗卷積神經網路的誤差反向傳播法

附錄

A 訓練資料（1）

B 訓練資料（2）

C 用數學式表示模式的相似度",https://cf-assets2.tenlong.com.tw/products/images/000/147/452/medium/MP12014.jpg?1587546117
"數位影像處理 : Python 程式實作, 2/e",張元翔,全華圖書,9789865034450,2020/7/1,"本書為因應現代發展趨勢，針對數位影像處理技術，採取主題介紹方式，除了理論基礎之外，採用Python程式與OpenCV進行實作，強調理論與實務的緊密結合，藉以培養紮實的技術研發能力，內容豐富，同時包含深度學習、人工智慧等相關技術。

1.本書因應現代發展趨勢，針對數位影像處理技術，採取主題介紹方式，循序漸進且深入淺出。

2.本書除了含有基礎理論之外，同時採用Python程式與OpenCV進行實作，強調理論與實務的緊密結合，展現「做中學」的學習理念。

3.各章節均附上習題，除了觀念複習外，並提供專案實作，藉以達到有效的學習效果。



    


    目錄大綱
    
      第1 章 介紹

1-1 引言

1-2 相關領域知識

1-3 基本定義與專業術語

1-4 數位影像檔案格式

1-5 數位影像處理軟體

1-6 數位影像處理技術應用



第2 章 Python 程式設計

2-1 Python 程式語言

2-2 Python 程式設計

2-3 OpenCV 介紹

2-4 數位影像處理初體驗

2-5 OpenCV 繪圖



第3 章 數位影像基礎

3-1 電磁波概念

3-2 人類視覺系統

3-3 影像擷取

3-4 影像形成模型

3-5 數位影像的取樣與量化



第4 章 幾何轉換

4-1 基本概念

4-2 空間轉換

4-3 影像內插

4-4 仿射轉換

4-5 透視轉換

4-6 相機幾何失真



第5 章 影像增強

5-1 基本概念

5-2 強度轉換

5-3 直方圖處理

5-4 影像濾波



第6 章 頻率域影像處理

6-1 基本概念

6-2 離散傅立葉轉換

6-3 頻率域濾波



第7 章 影像還原

7-1 基本概念

7-2 影像雜訊

7-3 週期性雜訊

7-4 影像雜訊分析

7-5 影像還原

7-6 反濾波

7-7 維納濾波

7-8 影像補繪



第8 章 色彩影像處理

8-1 色彩理論

8-2 色彩模型

8-3 灰階與色彩轉換

8-4 色彩影像增強

8-5 HSI 色彩影像處理

8-6 HSV 色彩分割



第9 章 影像分割

9-1 基本概念

9-2 邊緣偵測

9-3 直線偵測

9-4 圓形偵測

9-5 影像閥值化

9-6 適應性閥值化

9-7 分水嶺影像分割

9-8 GrabCut 影像分割



第10 章 二值影像處理

10-1 基本概念

10-2 基本定義與術語

10-3 形態學影像處理

10-4 補洞演算法

10-5 骨架化演算法

10-6 距離轉換



第11 章 小波與正交轉換

11-1 基本概念

11-2 簡易的小波轉換

11-3 小波轉換

11-4 離散小波轉換(1D)

11-5 離散小波轉換(2D)

11-6 小波轉換的數位影像處理應用

11-7 基於矩陣的轉換



第12 章 影像壓縮

12-1 基本概念

12-2 資訊理論

12-3 熵編碼

12-4 影像壓縮系統

12-5 區塊轉換編碼

12-6 JPEG 影像壓縮



第13 章 特徵擷取

13-1 基本概念

13-2 連通元標記

13-3 輪廓搜尋

13-4 形狀特徵

13-5 輪廓特徵

13-6 角點偵測

13-7 關鍵點偵測

13-8 膚色偵測

13-9 臉部偵測



第14 章 影像特效

14-1 基本概念

14-2 幾何特效

14-3 像素特效

14-4 非真實感繪製



第15 章 深度學習

15-1 基本概念

15-2 人工神經網路

15-3 卷積神經網路

15-4 典型的卷積神經網路



附　錄

數學背景

基本數學公式

參考文獻",https://cf-assets2.tenlong.com.tw/products/images/000/150/395/medium/06429017.jpg?1597032467
領域驅動設計：軟體核心複雜度的解決方法 (Domain-Driven Design: Tackling Complexity in the Heart of Software),"Eric Evans
          趙俐、盛海艷、劉霞 譯，任發科　審校，博碩文化　編譯",博碩文化,9789864343874,2019/5/13,"【名家名著 18】 　

領域驅動設計：軟體核心複雜度的解決方法



Domain-Driven Design: Tackling Complexity in the Heart of Software







『這本書應該出現在每位軟體開發人員的書架上。』（This book belongs on the shelf of every thoughtful software developer.）

－Kent Beck

軟體大師，JUnit的創始人，XP與TDD專家





『Eric的這本書太棒、太神奇了，他準確地告訴你如何讓軟體設計滿足你的模型需求……本書讀起來趣味無窮。Eric有許多有趣的故事，而且描述起來很有一套……它將成為軟體開發人員必讀的經典之作。』

－Ralph Johnson

GoF的《Design Patterns》的作者





『如果你認為自己在物件導向程式設計中的投入沒有得到回報，讀了這本書你就會知道自己漏掉什麼。』

－Ward Cunningham

設計模式和敏捷軟體開發方法的先驅





『Eric Evans成功證明了作為開發核心的領域模型的重要性。他搭建了一個穩固的框架，並提供一套實作技術和技巧。這裡沉澱下來的是亙古不變的智慧，在流行的方法論都淪為明日黃花之後，它依然光華璀璨。』

－Dave Collins

《Designing Object-Oriented User Interfaces》的作者





『Eric完全從實戰者的角度著手，描述了通用的語言、與使用者共享模型的好處、物件生命週期的管理、深度重構的過程和結果，這是對我們這個領域的巨大貢獻。』

－Luke Hohmann

《Beyond Software Architecture》的作者





『Eric成功抓住了經驗豐富的物件設計師在設計過程中會使用的那一部分……我們從未有組織地和有系統地把建立領域邏輯的原則制度化。這是一本非常重要的著作。』

－Kyle Brown

《Enterprise Java Programming with IBM WebSphere》的作者



『講解DDD的書籍並不多，而這本書是當中公認最好的一本。如果您對於DDD有任何疑問，這本書將會提供最佳解答』

－陳錦輝

博碩文化《名家名著》總編輯



    

    作者簡介
    
      Eric Evans



領域驅動設計之父。世界知名的軟體建模專家。

他建立了Domain Language公司，致力於幫助公司機構建立與業務緊密相關的軟體。

他在世界各地宣傳和演講領域驅動設計（Domain-Driven Design；DDD）的思想、開設課程、參加會議、接受專訪，並擁有大批的追隨者。

從20世紀80年代開始，他就以設計師和程式設計師的雙重身分參與過許多大型物件導向系統的設計和開發，涉及各種複雜的業務和技術領域。

同時，他還培訓和指導或許多開發團隊實作極限程式設計。

    

    目錄大綱
    
      譯者序

序

前言

致謝

Part I 運用領域模型

第1章 消化知識

第2章 交流與語言的使用

第3章 綁定模型與實作

Part II 模型驅動設計的建構區塊

第4章 分離領域

第5章 軟體中所表示的模型

第6章 領域物件的生命週期

第7章 使用語言：一個延伸的範例

Part III 透過重構來加深理解

第8章 突破

第9章 將隱式概念轉變為顯式概念

第10章 柔性設計

第11章 應用分析模式

第12章 將設計模式應用於模型

第13章 透過重構得到更深層的理解

Part IV 戰略設計

第14章 保持模型的完整性

第15章 精煉

第16章 大型結構

第17章 領域驅動設計的綜合運用

結束語

附錄

術語表

參考文獻

圖片說明

Domain-Driven Design的名人讚譽",https://cf-assets2.tenlong.com.tw/products/images/000/130/774/medium/9789864343874_bc.jpg?1554177163
"Kubernetes：建置與執行, 2/e (Kubernetes: Up and Running: Dive into the Future of Infrastructure, 2/e)","Brendan Burns,Kelsey Hightower,Joe Beda
          林毅民（Sammy Lin）、謝智浩（Scott） 譯",歐萊禮,9789865024895,2020/6/10,"Kubernetes是當紅的容器叢集管理工具。在過去幾年內，容器叢集管理工具大幅改變開發跟維運人員在雲端環境中開發、建構、部署和維護應用程式的方法。不論你是剛剛接觸分散式系統，或著正在使用雲端環境部署應用程式，這本經典之作的更新版能幫助你的公司進入更快速、靈活、可靠和高效的雲端環境。

Brendan Burns, Joe Beda和 Kelsey Hightower三位Kubernetes的專家，將帶領讀者瞭解如何利用Kubernetes部署分散式應用程式。您可以藉由本書學到如何使用工具及API來自動化具有可擴充性的分散式線上服務、機器學習應用程式，甚至是使用Reapberry Pi建立叢集。



．建立並運行一個簡單的叢集來學習Kubernetes的運作

．深入了解如何使用Kubernetes、Pod、Service、Ingress和ReplicaSet來部署應用程式

．在Kubernetes中整合容器化微服務與儲存區

．學會使用Kubernetes中的DaemonSet、Jobs、ConfigMaps和Secret物件

．提供開發及部署應用程式的Kubernetes實用範例



「由三位世界上令人尊敬且具有高度權威性的雲端原生系統作者所撰寫，本書可以幫您奠定使用Kubernetes的基礎觀念，並藉由其中的範例探索Kubernetes的世界」- Liz Rice, Aqua Security

 



    

    作者簡介
    
      Brendan Burns

Kubernetes共同創辦人，Microsoft Azure的傑出工程師，帶領團隊專注於DevOps、開源軟體及微服務。

Joe Beda

Kubernetes共同創辦人，VMware的首席工程師，直到Heptio被VMware併購前，Joe是Heptio的共同創辦人兼CTO，專注於為VMware導入Kubernetes的策略。

Kelsey Hightower

Google Cloud Platform的首席技術傳播者，在他的職涯中嘗試過各種不同的角色，目前致力於研究如何部署應用程式。

    

    目錄大綱
    
      第一章 緒論

第二章 建立和運行容器

第三章 部署 Kubernetes 叢集

第四章 常見的 kubectl 指令

第五章 Pod

第六章 Label 和 Annotation

第七章 服務探索

第八章 使用Ingress 執行 HTTP 負載平衡

第九章 ReplicaSet

第十章 Deployment

第十一章 DaemonSet

第十二章 Job

第十三章 ConfigMap 和 Secret

第十四章 角色型存取權控管（RBAC）

第十五章 Kubernetes 和整合儲存解決方案

第十六章 擴充 Kubernetes

第十七章 部署實際的應用程式

第十八章 整理你的應用程式

附錄A 建立樹莓派 Kubernetes 叢集",https://cf-assets2.tenlong.com.tw/products/images/000/148/881/medium/9789865024895.jpg?1592980367
大話 AWS 雲端架構：雲端應用架構圖解輕鬆學,李秉鴻、周廷諺、何松穎、李建德,博碩文化,9789864345137,2020/10/8,"掌握AWS雲端運算服務全架構‧搭上台灣重點發展的雲端產業列車！

AI需求火爆的背後，是對於強大運算能力的渴求，以共享機房為基礎的雲端服務完美解決了AI的剛性需求。雲端服務付費模式的變化，讓傳統系統整合商的收費模式從買斷制演進到訂閱制，創造了新型商業模式－雲端代理商，造就了大量雲端人才缺口。

有鑑於此，我們為想學習雲端架構的讀者，以平常生活輕鬆常見的對話形式，綜覽多種在AWS使用的架構。期勉讀者研讀後，能夠為公司提出雲端代理商的轉型商業模式，並能依照公司客戶的需求提供多種雲端解決方案。

本書適合尚未導入雲端服務的企業、系統架構師、開發/運維工程師，以及剛入門雲端的新手。若你公司正準備導入雲端，但又不知道該如何提案或者是以何種架構進行導入，則本書將會對你有很大的幫助。

★本書特色★

✪沉浸式的故事情境搭配應用場景，快速瞭解雲端架構應用

✪圖解方式說明雲端架構，並由淺至深進行架構演進

✪書附AWS雲端認證小幫手，協助考取AWS雲端認證

✪以簡單生活化的案例對應複雜的雲端技術名詞





雲育鏈官網　　　　雲育鏈LINE@



    

    作者簡介
    
      李秉鴻、周廷諺、李建德、何松穎

雲育鏈資深講師群，超過十年的雲端服務使用經驗，集資訊業多元職業角色，架構師、開發工程師、DevOps管理員、資深系統運維管理員，並在中央大學、資策會、Tibame緯育、工研院、AI全智網等多處擔任講師，並協助多家企業開發新型態的多種雲端與區塊鏈資訊系統。

現為雲育鏈雲端服務考證課講師、區塊鏈服務技術講師。學生人數遍佈AWS、GCP、Azure原廠、各大雲端代理商、金控、銀行等雲端技術部門。

在雲端教育領域之卓越成就，使勞動部勞動力發展署邀請執行長李秉鴻、台灣大學資工系教授與AWS原廠等專業人員進行針對「雲端系統軟體與維運工程人員」勞動力市場供需及訓練計畫規劃討論。

    

    目錄大綱
    
      推薦序

前言

人物關係圖

人物角色介紹



第一單元　經典雲應用架構

01 經典雲應用架構總覽

1.1 本地怎麼做，雲端就怎麼做

1.2 人類世界與資訊世界是相似的，經典生活化商業案例

1.3 本地經典應用架構

1.4 AWS經典應用架構

1.5 雲育鏈的雲服務考題練習機器人



02 IAM

2.1 AWS的root帳號

2.2 root權限太大，必須實踐多用戶權限管理

2.3 IAM服務的設計思維與核心名詞

2.4 Policy的組成要件

2.5 Policy的組織流程

2.6 常見的應用情境

2.7 考題解析與思路延伸

2.8 IAM帳號管理歸納圖

2.9 本章相關名詞

2.10 本章小結



03 VPC

3.1 一棟公寓大廈的核心組成

3.2 經典網路環境組成

3.3 Virtual Private Cloud -AWS的網路環境組成

3.4 VPC的四大類服務對接方式

3.5 考題解析與思路延伸

3.6 VPC整體架構圖

3.7 本章相關名詞

3.8 本章小結



04 EC2

4.1 添購伺服器的流程

4.2 AWS的EC2虛擬主機服務

4.3 在專案使用EC2時的應用考量

4.4 考題解析與思路延伸

4.5 EC2整體架構圖

4.6 本章相關名詞

4.7 本章小結



05 S3

5.1 公司以往的資料共享方式

5.2 S3的核心要件

5.3 考題解析與思路延伸

5.4 S3整體架構圖

5.5 本章相關名詞

5.6 本章小結



06 RDS

6.1 客戶想要一個關聯式資料庫

6.2 自建資料庫與選用RDS服務的差異

6.3 RDS的高可用、備援與效能調校

6.4 考題解析與思路延伸

6.5 RDS整體架構圖

6.6 本章相關名詞

6.7 本章小結



07 Route 53

7.1 使用Route 53做域名註冊與流量分配

7.2 A Record、Alias與CName等三種常見的DNS格式

7.3 Route 53的導流分發

7.4 考題解析與思路延伸

7.5 Route 53整體架構圖

7.6 本章相關名詞

7.7 本章小結



08 CloudWatch

8.1 CloudWatch-AWS的監控運維服務

8.2 CloudWatch與CloudWatch Logs

8.3 CloudWatch Agent的使用方式

8.4 CloudWatch Logs的核心結構

8.5 考題解析與思路延伸

8.6 CloudWatch整體架構圖

8.7 本章相關名詞

8.8 本章小結



09 CloudTrail

9.1 雲端服務的操作行為監控- CloudTrail

9.2 考題解析與思路延伸

9.3 CloudTrail整體架構圖

9.4 本章小結



第二單元　高併發架構

10 高併發架構總覽

10.1 在線用戶數量大幅成長

10.2 生活化的應用案例-商品產業鏈

10.3 經典的資訊化應用案例

10.4 AWS雲端的漸進式解決方案

10.5 CloudFront、ELB、Auto Scaling、SQS、ElastiCache、DynamoDB



11 CloudFront

11.1 流量緩解的第一道關卡-CloudFront

11.2 CloudFront的核心結構

11.3 考題解析與思路延伸

11.4 CloudFront整體架構圖

11.5 本章相關名詞

11.6 本章小結



12 Elastic Load Balancer

12.1 系統內的流量負載分流- Elastic Load Balancer

12.2 CloudFront與Elastic Load Balancer的差異

12.3 Elastic Load Balancer的核心組件

12.4 Elastic Load Balancer的健康檢查

12.5 Elastic Load Balancer協助加解密

12.6 傳統單機應用碰到Elastic Load Balancer

12.7 容器虛擬技術的負載均衡思維-多機器內多個port多個應用作分流

12.8 考題解析與思路延伸

12.9 Elastic Load Balancer整體架構圖

12.10 本章相關名詞

12.11 本章小結



13 Auto Scaling

13.1 按流量變化，自動增減機器- Auto Scaling

13.2 經典配置- ELB結合Auto Scaling

13.3 EC2 Auto Scaling的核心概念

13.4 增減機器的時機點控制- Scaling Policy

13.5 考題解析與思路延伸

13.6 Auto Scaling整體架構圖

13.7 本章相關名詞

13.8 本章小結



14 SQS

14.1 任務暫存器-SQS

14.2 經典應用案例-工作便利貼

14.3 SQS的核心架構

14.4 每一個任務的Message容量限制

14.5 SQS的兩種版本- Standard與FIFO

14.6 消息不可見性，避免任務重複處理

14.7 考題解析與思路延伸

14.8 SQS整體架構圖

14.9 本章相關名詞

14.10 本章小結



15 DynamoDB

15.1 彈性資料結構的自動全受管數據庫- DynamoDB

15.2 DynamoDB的核心組件

15.3 DynamoDB的資料分散與排序方式- Partition Key與Sort Key

15.4 增強資料讀取效率的二級索引

15.5 DynamoDB按讀寫量來計費

15.6 DynamoDB的兩大備份方案

15.7 考題解析與思路延伸

15.8 DynamoDB整體架構圖

15.9 本章相關名詞

15.10 本章小結



16 ElastiCache

16.1 短期記憶的最佳存放處-ElastiCache

16.2 短期資料的經典儲存方式-記憶體共享

16.3 兩種常見的緩存資料操作手法

16.4 ElastiCache的兩種底層引擎-Memcached與Redis

16.5 Redis

16.6 Memcached

16.7 考題解析與思路延伸

16.8 ElastiCache整體架構圖

16.9 本章相關名詞

16.10 本章小結



第三單元　敏捷式架構

17 敏捷式架構總覽

17.1 以往部署新功能需要停機，造成用戶流失

17.2 敏捷式開發方法論，縮短功能的開發部署週期

17.3 對應到DevOps方法論，AWS也出了一系列工具



18 CloudFormation

18.1 透過設定檔或程式碼，快速建置AWS環境CloudFormation

18.2 視覺化設計架構與設定檔-CloudFormation Designer

18.3 CloudFormation的核心組件

18.4 CloudFormation的收費方式

18.5 考題解析與思路延伸

18.6 CloudFormation整體架構圖

18.7 本章相關名詞

18.8 本章小結



第四單元　手機應用架構

19 手機應用總覽

19.1 現代手機應用透過社群軟體做身份登入驗證，免註冊

19.2 寄發通知與E-mail至手機應用內

19.3 AWS提供了Cognito與SNS來完成這兩項任務



20 Cognito

20.1 以社群應用做身份驗證-Cognito

20.2 Cognito驗證分成兩塊，身份與權限驗證

20.3 Cognito整體架構圖

20.4 本章相關名詞

20.5 本章小結



21 SNS

21.1 推播通知用戶- SNS

21.2 SNS的核心組件

21.3 SNS與SQS結合打造消息重用系統

21.4 考題解析與思路延伸

21.5 SNS整體架構圖

21.6 本章相關名詞

21.7 本章小結



第五單元　成本控管

22 成本控管總覽

22.1 資訊部門雲端專業化

22.2 雲服務的新商業模式-雲端代理商

22.3 雲服務成本計算-Organization



23 單帳號的成本控管

23.1 專案的雲服務成本估算工具

23.2 雲端服務的三大收費方向

23.3 雲端服務成本追蹤

23.4 雲端服務付費方案一覽

23.5 單帳號成本管理架構圖

23.6 本章相關名詞

23.7 本章小結



24 多帳號的權限與成本控管

24.1 單帳號管理容易引發的情形

24.2 多帳號管理有效解決單帳號的管理問題

24.3 多帳號管理衍生出新的管理議題

24.4 AWS推出了Organization服務進行整併

24.5 問題整合對照表

24.6 多帳號權限與成本管理架構圖.

24.7 本章相關名詞

24.8 本章小結



第六單元　大數據架構

25 大數據架構總覽

25.1 大數據接收、操作與倉儲

25.2 Kinesis、EMR、Redshift



26 Kinesis、EMR與Redshift

26.1 物聯網、大量感測器、巨量數據

26.2 Kinesis 進行巨量數據搜集

26.3 Elastic Map Reduce進行巨量數據操作

26.4 整理後的大數據資料會轉存到S3或Redshift

26.5 Redshift資料分析用的大數據資料倉儲

26.6 考題解析與思路延伸

26.7 大數據應用整體架構圖

26.8 本章相關名詞

26.9 本章小結



第七單元　Serverless架構

27 Serverless架構總覽

27.1 腳底按摩店的經營模式解析

27.2 Serverless架構的運行生態

27.3 Serverless架構在AWS上的Solution

27.4 Serverless衍生的微服務架構



28 API Gateway

28.1 大型資訊架構內，會包含多個資訊系統

28.2 AWS提供API Gateway當整合性接口

28.3 API Gateway整體架構圖

28.4 本章相關名詞

28.5 本章小結



29 Lambda

29.1 新型軟體虛擬化技術-容器

29.2 AWS版本的容器運算方案-Lambda

29.3 Lambda的核心結構

29.4 Lambda計費方案

29.5 考題解析與思路延伸

29.6 Lambda整體架構圖

29.7 本章相關名詞

29.8 本章小結



第八單元　混合雲架構

30 混合雲的快速一覽

30.1 本地機房與雲端資源混合使用，保留架構彈性

30.2 Multi-Site解決方案

30.3 考題解析與思路延伸

30.4 混合雲整體架構圖

30.5 本章相關名詞

30.6 本章小結



31 尾聲

32 經典架構圖一覽

33 高併發架構圖一覽

34 DevOps架構圖一覽

35 Serverless架構圖一覽

36 名詞索引表",https://cf-assets2.tenlong.com.tw/products/images/000/153/190/medium/MP22007.jpg?1601453870
量子電腦程式設計 (Programming Quantum Computers),"Eric R. Johnston, Nic Harrigan, Mercedes Gimeno-Segovia 著
          張耀鴻 譯",歐萊禮,9789865024840,2020/5/6,"演算法精要與程式範例



「這是一本為程式設計師所寫的書，它為探索量子計算的新世界帶來了嶄新的表示法和視覺工具。」

—Mike Shapiro，DTrace、DSSD和NVMeoF共同創始人



「作者並不要求讀者具有深厚的數學背景，而是採用視覺化和實作的獨特技術來建構直觀的量子計算能力。」

—James L. Weaver，IBM量子開發宣導師



量子電腦有望啟動新的計算革命，而你可以立即加入這個行列。如果你從事的是軟體工程、電腦繪圖、資料科學、或者只是一位好奇的電腦玩家，本書提供了實用的程式設計指南來認識量子計算技術。你不用透過艱澀的數學和理論進行分析，就可以直接使用本書範例來展示該技術獨特的功能。



量子計算專家Eric Johnston，Nic Harrigan和Mercedes Gimeno-Segovia將引導你在應用程式中編寫量子程式所需的技能、工具和直覺。你將了解量子電腦可以做什麼，並學習如何辨別量子電腦所能解決的問題類型。



本書的章節大致上可分為三大部分：

‧QPU程式設計—探索用於編程量子處理單元的核心概念，包括如何描述和操控量子位元以及如何進行量子瞬間傳送。

‧QPU原式—學習演算法原式和技術，包括振幅放大、量子傅立葉變換和相位估計。

‧QPU應用—研究如何利用QPU原式來建構現有的應用，包括量子搜尋技術和Shor因數分解演算法。



    

    作者簡介
    
      Eric Johnston 是一位軟體工程師，也是QCEngine量子計算模擬器的創始者。

Nic Harrigan 是一位量子架構規劃師和科學傳播者，他在量子力學和量子計算的基礎研究上有廣泛的涉獵。

Mercedes Gimeno-Segovia 是PsiQ公司的量子架構規劃總監，主要從事一般用途的量子電腦設計。

    

    目錄大綱
    
      第一章 緒論

第一部分　QPU 程式設計

第二章 單一量子位元

第三章 多量子位元

第四章 量子瞬間傳送

第二部分　QPU 原式

第五章 量子算術與邏輯

第六章 振幅放大

第七章 QFT：量子傅立葉變換

第八章 量子相位估計

第三部分　QPU 應用

第九章 真實資料

第十章 量子搜尋

第十一章 量子超取樣

第十二章 Shor 因數分解演算法

第十三章 量子機器學習

第四部分　未來展望

第十四章 保持領先：文獻指南",https://cf-assets2.tenlong.com.tw/products/images/000/147/510/medium/A605.jpg?1587715672
"邁向 Linux 工程師之路：Superuser 一定要懂的技術與運用, 2/e (How Linux Works: What Every Superuser Should Know, 2/e)",Brian Ward 著,博碩文化,9789864344383,2019/11/14,"Linux不像其他的作業系統，它不會對使用者隱瞞重要的資訊。反之，Linux會讓它的使用者掌控一切。而想要掌握Linux，就必須理解此作業系統的工作機制，包括「系統是如何啟動的」（boots）、networking是如何運作的，以及Linux的核心實際上都做了些什麼。



本書是暢銷書《How Linux Works》的第二版。作者Brian Ward再次深入Linux的核心，對其概念進行更詳盡、更深度的探討，使任何對作業系統內部運作感到好奇的讀者，都可以從中獲益。本書是作者多年專業知識的累積，透過這本書，你將學到：

♦ Linux從「啟動加載程式」到「初始化實作」(systemd, Upstart, and System V) 的啟動方式有哪些

♦ 核心如何管理設備、設備驅動程式與程序（process）

♦ 網路（networking）、介面、防火牆和伺服器的運作方式

♦ 開發工具如何工作並與共享函式庫協作

♦ 如何編寫高效的shell腳本



讀者還能探索Linux的核心，並檢查使用者空間內的關鍵系統任務，包括系統呼叫、輸入和輸出以及檔案系統。結合了背景、理論、實務案例和詳盡的解釋，本書將教你「如何解決麻煩的問題」以及「控制作業系統」所需的全部知識。





第1版書評

「非常棒的書。在近350頁的內容中，涵蓋了Linux的所有基礎知識。」 —EWEEK

「對於那些想要學習Linux，同時對作業系統內部工作原理又不太熟悉的讀者，本書絕對值得推薦。」—O'REILLYNET

「介紹Linux基礎知識最好的書之一，同時也適合Linux進階使用者閱讀，五星。」—OPENSOURCE-BOOK-REVIEWS.COM

「本書的成功源於它對內容的良好組織和對技術細節的深入探討。」 —KICKSTART NEWS

「本書對Linux的介紹可謂獨樹一格。它樸實無華，注重對命令行的介紹，並且深入到系統內部，而非僅僅停留在圖形使用者介面。」—TECHBOOKREPORT.COM

「本書充分介紹了Linux系統的工作原理。」—HOSTING RESOLVE

 



    

    作者簡介
    
      Brian Ward

畢業於芝加哥大學，獲得電腦科學博士學位。1993 年始接觸Linux，研究並教授Linux 二十餘年。除了這本深受讀者喜愛的書，Brian 還著有《Linux Kernel-HOWTO》、《The Book of VMware》（No Starch Press）以及《The Linux Problem Solver》（No Starch Press）等暢銷著作。

    

    目錄大綱
    
      ch 01　概述

1.1 Linux作業系統中的抽象級別和層次

1.2 硬體系統：理解主記憶體

1.3 核心

1.4 使用者空間

1.5 使用者

1.6 前瞻

ch 02　基礎命令和目錄結構

2.1 Bourne shell: /bin/sh

2.2 shell的使用

2.3 基礎命令

2.4 瀏覽目錄

2.5 中間命令

2.6 更改密碼和shell

2.7 dot檔案

2.8 環境變數和shell變數

2.9 命令路徑

2.10 特殊字元

2.11 命令行編輯

2.12 文字編輯器

2.13 取得線上說明

2.14 shell輸入輸出

2.15 理解錯誤資訊

2.16 查看和操縱程序

2.17 檔案模式和權限

2.18 歸檔和壓縮檔案

2.19 Linux目錄結構基礎

2.20 以超級使用者的身分執行命令

2.21 前瞻

ch 03　設備管理

3.1 設備檔案

3.2 sysfs設備路徑

3.3 dd命令和設備

3.4 設備名總結

3.5 udev

3.6 詳解SCSI和Linux核心

ch 04　硬碟和檔案系統

4.1 為磁碟設備分區

4.2 檔案系統

4.3 交換空間

4.4 前瞻：磁碟和使用者空間

4.5 深入傳統檔案系統

ch 05　Linux核心的啟動

5.1 啟動訊息

5.2 核心初始化和啟動選項

5.3 核心參數

5.4 引導裝載程式

5.5 GRUB簡介

5.6 UEFI安全啟動的問題

5.7 鏈式載入其他作業系統

5.8 引導裝載程式細節

ch 06　使用者空間的啟動

6.1 init介紹

6.2 System V執行級別

6.3 識別你的init

6.4 systemd

6.5 Upstart

6.6 System V init

6.7 關閉系統

6.8 initramfs

6.9 緊急啟動和單使用者模式

ch 07　系統設定：日誌、系統時間、批次處理任務和使用者

7.1 /etc目錄結構

7.2 系統日誌

7.3 使用者管理檔案

7.4 getty和login

7.5 設定時間

7.6 使用cron來調度日常任務

7.7 使用at 進行一次性任務調度

7.8 瞭解使用者ID和使用者切換

7.9 使用者標識和認證

7.10 PAM

7.11 前瞻

ch 08　程序與資源利用詳解

8.1 程序追蹤

8.2 使用lsof查看打開的檔案

8.3 追蹤程式執行和系統呼叫

8.4 線程

8.5 資源監控簡介

8.6 測量CPU時間

8.7 調整程序優先級

8.8 平均負載

8.9 記憶體

8.10 使用vmstat監控CPU和記憶體效能

8.11 I/O監控

8.12 使用pidstat監控程序

8.13 更深入的主題

ch 09　網路與設定

9.1 網路基礎

9.2 網路層次

9.3 網際網路層

9.4 路由和核心路由表

9.5 基本ICMP和DNS工具

9.6 實體層與乙太網

9.7 理解核心網路介面

9.8 設定網路介面

9.9 開機啟動的網路設定

9.10 手動和開機啟動的網路設定帶來的問題

9.11 一些網路設定管理器

9.12 解析主機名

9.13 Localhost

9.14 傳輸層：TCP、UDP 和Service

9.15 普通本地網路

9.16 理解DHCP

9.17 將Linux設定成路由器

9.18 私有網路

9.19 網路位址轉換（IP 偽裝）

9.20 路由器與Linux

9.21 防火牆

9.22 乙太網、IP和ARP

9.23 無線乙太網

9.24 小結

ch 10　網路應用與服務

10.1 服務的基本概念

10.2 網路伺服器

10.3 SSH

10.4 守護程序inetd和xinetd

10.5 診斷工具

10.6 遠程程式呼叫

10.7 網路安全

10.8 前瞻

10.9 socket：程序與網路的通訊方式

10.10 Unix 域socket

ch 11　shell腳本

11.1 shell腳本基礎

11.2 引號與字面量

11.3 特殊變數

11.4 結束碼

11.5 條件判斷

11.6 迴圈

11.7 命令替換

11.8 管理臨時檔案

11.9 here文件

11.10 重要的shell腳本工具

11.11 子shell

11.12 在腳本中包含其他檔案

11.13 讀取使用者輸入

11.14 什麼時候（不）應該使用shell腳本

ch 12　在網路上傳輸檔案

12.1 快速複製

12.2 rsync

12.3 檔案共享

12.4 用Samba分享檔案

12.5 NFS 客戶端

12.6 關於網路檔案服務的選擇與侷限的更多內容

ch 13　使用者環境

13.1 建立啟動檔案的規則

13.2 何時需要修改啟動檔案

13.3 shell 啟動檔案的元素

13.4 啟動檔案的順序及例子

13.5 使用者預設設定

13.6 啟動檔案的一些陷阱

13.7 前瞻

ch 14　Linux桌面概覽

14.1 桌面元件

14.2 近觀X Window系統

14.3 探索X客戶端

14.4 X的未來

14.5 D-Bus

14.6 列印

14.7 其他有關桌面的話題

ch 15　開發工具

15.1 C 編譯器

15.2 make

15.3 除錯器

15.4 Lex和Yacc

15.5 腳本語言

15.6 Java

15.7 展望：編譯包

ch 16　從C程式碼編譯出軟體

16.1 軟體的建置系統

16.2 解開C原始碼包

16.3 GNU autoconf

16.4 實踐安裝

16.5 打補丁

16.6 編譯和安裝的問題排查

16.7 前瞻

ch 17　在基礎上搭建

17.1 Web伺服器與應用

17.2 資料函式庫

17.3 虛擬化

17.4 分散式計算與按需計算

17.5 嵌入式系統

17.6 結束語",https://cf-assets2.tenlong.com.tw/products/images/000/142/053/medium/MP11910.jpg?1572347296
程式設計師的自我修養－連結、載入、程式庫,俞甲子、石凡、潘愛民,碁峰資訊,9789861818283,2009/12/28,"<內容特色>

本書主要介紹系統軟體的執行機制和原理：應用程式在Windows和Linux編譯、連結和執行所發生的各種事項，包括：如何保存程式碼指令、程式庫檔案如何與應用程式碼靜態連結、應用程式如何載入記憶體並開始執行、如何實作動態連結、C/C++執行期程式庫的工作原理，以及如何呼叫作業系統提供的系統服務。每個技術專題都配備了大量圖、表和程式碼實例，力求將複雜的機制以簡潔的形式表達出來。本書最後還提供了一個小巧且跨平臺的C/C++執行期程式庫MiniCRT，綜合展示了與執行期程式庫相關的各種技術。



這是一本深入闡述連結、載入和程式庫等問題的優秀圖書，讀來讓人愉悅，你從中可以清晰地瞭解程序的前世今生，徹底理解敲入的程式碼如何變成程序在系統中執行。通讀本書不管對於開發還是troubleshooting都會很有幫助。建議每一位希望從事系統開發、或希望更實務地理解作業系統和編譯器、或不滿足於只寫程式碼的優秀程式員都該有這樣一本書。--鄒飛，趨勢科技（中國）研發中心 資深軟體工程師



本書從大處著眼、小處著手，以通俗易懂的語言，深入淺出地對系統軟體的底層行程機制進行條分縷析，正合藥山禪師所謂高高山頂立，深深海底行。循著作者的思緒一路走來，有如醍醐灌頂，暢快淋漓。非常高興有預覽此書初稿的寶貴機會，我在瀏覽書稿和查核相關資料的過程中，學到了很多以前未知或知之不深的內容。--馮亮，阿里巴巴（中國）網路技術有限公司運維部 系統架構師

<章節目錄>

第一篇 簡介

第1章 溫故而知新

第二篇 靜態鏈結

第2章 編譯和鏈結

第3章 目的檔裡有什麼

第4章 靜態連結

第5章 Windows PE/COFF

第三篇 裝載與動態連結

第6章 可執行檔的裝載與進程

第7章 動態連結

第8章 Linux共用程式庫

第9章 Windows的動態連結

第四篇 程式庫與執行期程式庫

第10章 記憶體

第11章 執行期程式庫

第12章 系統呼叫與API

第13章 實作執行期程式庫

附錄A",https://cf-assets1.tenlong.com.tw/images/54527/medium/9789861818283.jpg
大話設計模式,程杰,悅知文化,9789866761799,2009/3/15,"<本書特色>

■ 重視過程。完整呈現程式從無到有，以及逐步優化的歷程，讓讀者可以更加容易了解如何寫出好程式。

■ 輕鬆易讀。有別於一般技術書籍的生硬，本書以情境對話的方式，透過日常生活的場景與譬喻，解說設計模式，保證是一本可以讓您從頭讀完的技術書籍。

<內容簡介>

由Erich Gamma、Richard Helm、Ralph Johnson、John M. Vlissides「四人幫」（Gang of Four, GoF）所合著的《Design Patterns》（設計模式），將軟體設計問題，歸納出23種設計模式，影響深遠，已是當代軟體開發人員必讀的聖經之一。但大師之作，對初窺堂奧的人稍嫌晦澀，因而陸續出現了許多「釋義本」。而這本《大話設計模式》，可說是當中最為特別的一本。

作者根據多年軟體開發與教學經驗寫作而成本書，精確掌握初學者常見的疑惑，創新詮釋四人幫的23個設計模式。全書分為三大部分，首先闡述物件導向的意義，以及重要的設計原則；其次，則針對各個設計模式，融合真實世界的範例作深入的講解，藉此讓讀者跟隨書中人物的練習，以提升對模式的理解，進而學習更精鍊的程式設計技巧。最後，以「超級模式大賽」作為總結，將所有的物件導向與模式概念擬人化，以類似選秀的情境，進行各種模式之比較，加強讀者更全面而完整的理解。 


        

    


    目錄大綱
    
      第01章｜程式碼無錯就是優？—簡單工廠模式

第02章｜商場促銷—策略模式

第03章｜拍攝UFO—單一職責原則

第04章｜升學求職兩不誤—開放-封閉原則

第05章｜會修電腦不會修收音機？—依賴倒轉原則

第06章｜穿什麼有這麼重要？—裝飾模式

第07章｜為他人做嫁衣—代理模式

第08章｜南丁格爾依然在人間—工廠方法模式

第09章｜履歷影印—原型模式

第10章｜考題抄錯會做也白搭—範本方法模式

第11章｜無熟人難辦事？—迪米特法則

第12章｜多頭市場股票還會虧錢？—外觀模式

第13章｜好菜每回味不同—建造者模式

第14章｜老闆回來，我不知道—觀察者模式

第15章｜就不能不換嗎？—抽象工廠模式

第16章｜無盡加班何時休—狀態模式

第17章｜在NBA我需要翻譯—轉接器模式

第18章｜如果再回到從前—備忘錄模式

第19章｜分公司=一部門—組合模式

第20章｜想走？可以！先買票—迭代器模式

第21章｜有些類別也需計畫生育—獨體模式

第22章｜手機軟體何時統一—橋接模式

第23章｜烤羊肉串引來的思考—命令模式

第24章｜加薪非要老總批？—職責鏈模式

第25章｜世界需要和平—仲介者模式

第26章｜專案多也別傻傻做—享元模式

第27章｜其實你不懂老闆的心—解譯器模式

第28章｜男人和女人—訪問者模式

第29章｜OOTV杯超級模式大賽—模式總結

附 錄A｜訓練實習生—物件導向基礎

附 錄B｜參考文獻",https://cf-assets1.tenlong.com.tw/images/49583/medium/9789866761799.jpg
"Java 最強入門邁向頂尖高手之路：王者歸來, 2/e (全彩版)",洪錦魁,深智數位,9789865501587,2020/10/15,"本書特色

相較於第一版這一版新增下列內容：


	
	
		更完整解說輸入與輸出
		溫度轉換與高斯數學
		生肖系統程式
		火箭升空程式
		圓周率
		雞兔同籠
		國王的麥粒
		線性搜尋
		計算器
		基礎統計
		最基礎的JavaFX入門
		其他修訂約50處
	
	


    很早就想改版第一版的書籍，歷經多時的醞釀與投入，終於完成這本書著作的改版，心情是愉快的，因為我相信只要讀者購買本書遵循本書實例，一定可以輕輕鬆鬆快快樂樂學會Java語法與應用，逐步讓自己往Java頂尖高手之路邁進，這也是撰寫本書的目的。

    這本Java書將是國內講解Java內容最完整的書籍，全書有32個章節，以約407張彩色圖解說明，677個彩色程式實例，講解了下列知識：


	完整解說物件導向程式設計
	類別與物件
	物件建構與封裝
	繼承與多形
	Math和Random類別
	日期與時間類別
	字元與字串類別
	Object類別
	抽象類別與介面
	Java包裝類別
	大型程式設計
	正規表達式與文字探勘
	程式異常處理
	多執行緒，同時簡單說明馬、兔子、烏龜賽跑實例
	完整解說匿名陣列、匿名方法與匿名類別
	Lambda表達式
	Java的工廠方法
	檔案輸入與輸出
	壓縮與解壓縮檔案設計
	解說Java Collection
	使用Java Collection處理簡易資料結構的知識
	現代Java運算
	使用AWT設計視窗程式
	事件處理
	使用Swing設計視窗程式
	繪圖與動畫
	網路程式設計
	簡易網路聊天室設計
	JavaFX最基礎解說




    

    作者簡介
    
      洪錦魁

一位跨越電腦作業系統與科技時代的電腦專家，著作等身的作家。


	DOS時代他的代表作品是IBM PC組合語言、C、C++、Pascal、資料結構。
	Windows時代他的代表作品是Windows Programming使用C、Visual Basic。
	Internet時代他的代表作品是網頁設計使用HTML。
	大數據時代他的代表作品是R語言邁向Big Data之路。


    除了作品被翻譯為簡體中文、馬來西亞文外，2000年作品更被翻譯為Mastering HTML英文版行銷美國，近年來作品則是在北京清華大學和台灣深智同步發行：

    1：Java最強入門邁向頂尖高手之路王者歸來

    2：Python最強入門邁向頂尖高手之路王者歸來

    3：Python最強入門邁向數據科學之路王者歸來

    4：Python網路爬蟲：大數據擷取、清洗、儲存與分析王者歸來

    5：演算法最強彩色圖鑑 + Python程式實作王者歸來

    6：網頁設計HTML+CSS+JavaScript+jQuery+Bootstrap+Google Map

      王者歸來

    7：機器學習彩色圖解 + 基礎數學篇 + Python實作王者歸來

    8：R語言邁向Big Data之路

    9：Excel完整學習邁向最強職場應用王者歸來

    他的近期著作分別登上天瓏、博客來、Momo電腦書類暢銷排行榜第一名，他的著作最大的特色是，所有程式語法會依特性分類，同時以實用的程式範例做解說，讓整本書淺顯易懂，讀者可以由他的著作事半功倍輕鬆掌握相關知識。

 

    

    目錄大綱
    
      目錄

第一章　基本觀念

1-1 認識Java

1-2 Java 的起源

1-3 Java 之父

1-4 Java 發展史

1-5 Java 的三大平台

1-6 認識Java SE 平台的JDK/JRE/JVM

1-7 Java 跨平台原理 

1-8 Java 語言的特色

第二章　Java 程式從零開始

2-1 我的第一個Java 程式 

2-2 解析Java 的程式結構

2-3 程式註解 

第三章　Java 語言基礎

3-1 認識變數(Variable)

3-2 基本資料型態(Primitive Data Types) 

3-3 字串(String) 資料型態

3-4 常數(Constant) 的觀念

3-5 精準控制格式化的輸出 

第四章　程式基本運算

4-1 程式設計的專有名詞

4-2 指定運算子的特殊用法說明

4-3 基本數學運算

4-4 複合指定運算子(Compound Assignment Operator) 

4-5 布林運算、反向運算、比較運算與邏輯運算

4-6 位元運算(Bitwise Operation) 

4-7 Java 運算子優先順序

4-8 資料型態的轉換(Data Type Conversion)

4-9 資料的轉換與輸入

4-10 淺談import 與java.lang 套件

4-11 程式敘述的結合與分行

4-12 專題- 溫度轉換/ 高斯數學

第五章　程式流程控制

5-1 if 敘述

5-2 switch 敘述

5-3 專題-BMI/ 生肖/ 火箭升空

第六章　迴圈控制

6-1 for 迴圈

6-2 巢狀for 迴圈 

6-3 while 迴圈

6-4 巢狀while 迴圈

6-5 do ⋯ while 迴圈 

6-6 無限迴圈 

6-7 迴圈與break 敘述

6-8 迴圈與continue 敘述

6-9 迴圈標籤與break/continue 

6-10 將迴圈觀念應用在Scanner 類別的輸入檢查

6-11 迴圈相關的程式應用

6-12 專題 圓周率/ 雞兔同籠/ 國王的麥粒 

第七章　陣列

7-1 認識陣列(Array) 

7-2 陣列的宣告與應用

7-3 Java 參照資料型態(Reference Data Types)

7-4 Java 垃圾回收(Garbage Collection)

7-5 多維陣列的原理 

7-6 Java 命令列參數

7-7 二維陣列的程式應用

7-8 專題 線性搜尋/ 計算器

第八章　類別與物件

8-1 認識物件與類別

8-2 定義類別與物件

8-3 類別的基本實例

8-4 類別含多個物件的應用

8-5 類別的參照資料型態

8-6 再談方法(method) 

8-7 變數的有效範圍 

8-8 匿名陣列(Anonymous Array)

8-9 遞迴式方法設計recursive

8-10 河內塔問題

第九章　物件建構與封裝

9-1 建構方法(Constructor)

9-2 類別的訪問權限 – 封裝(Encapsulation)

9-3 static 關鍵字

第十章　內建Math 和Random 類別

10-1 數學常數

10-2 隨機數的應用

10-3 求較大值max( )/ 較小值方法min( )

10-4 求絕對值方法abs( ) 

10-5 四捨五入round( )

10-6 返回最接近的整數值rint( )

10-7 求近似值ceil( )/floor( ) 

10-8 一般的數學運算方法

10-9 三角函數的應用

10-10 Random 類別

10-11 專題 使用Math 模組與經緯度計算地球任意兩點的距離

第十一章　日期與時間的類別

11-1 Date 類別

11-2 Java 8 後的新日期與時間類別

第十二章　字元與字串類別

12-1 字元Character 類別

12-2 字串的建立 

12-3 String 類別的方法

12-4 StringBuffer 類別

12-5 StringBuilder 類別

12-6 字串陣列的應用

第十三章　正規表達式Regular Expression

13-1 使用Java 硬功夫搜尋文字

13-2 使用String 類別處理正規表達式次數區間

13-3 正規表達式的特殊字元

13-4 matches( ) 方法的萬用程式與功能擴充

13-5 再談String 類別有關的正規表達方法

13-6 正規表達式套件

第十四章　繼承與多形

14-1 繼承(Inheritance) 

14-2 IS-A 和HAS-A 關係

14-3 Java 程式碼太長的處理

14-4 重新定義(Override)

14-5 多重定義(Overload) 父類別的方法

14-6 多形(Polymorphism) 

14-7 靜態綁定(Static Binding) 與動態綁定(Dynamic Binding)

14-8 巢狀類別(Nested classes)

第十五章　Object 類別

15-1 認識擴充Object 類別 

15-2 Object 類別的方法 

15-3 認識哈希碼(hashcode) 與hashCode( ) 

15-4 equals( ) 方法

15-5 toString( ) 方法

15-6 getClass( ) 方法 

第十六章　抽象類別(Abstract Class)

16-1 使用抽象類別的場合

16-2 抽象類別基本觀念

16-3 抽象方法的基本觀念

16-4 抽象類別與抽象方法觀念整理 

16-5 抽象類別的建構方法

16-6 使用Upcasting 宣告抽象類別的物件

16-7 抽象類別與方法的程式應用

第十七章　介面(Interface)

17-1 認識介面

17-2 介面的成員變數 

17-3 Java 8 新增加介面內容

17-4 Java 9 新增加介面內容

17-5 基本介面的繼承

17-6 介面多重繼承(Multiple Inheritance)

17-7 實作時發生成員變數有相同名稱

17-8 類別重新定義Default 方法 

17-9 一個類別同時繼承類別與實作介面

17-10 類別分別繼承父類別與實作介面發生方法名稱衝突

17-11 多層次繼承中發生Default 方法名稱相同

17-12 名稱衝突的鑽石(Diamond) 問題 

第十八章　Java 包裝(Wrapper) 類別

18-1 基本觀念

18-2 認識包裝類別

18-3 認識自動封箱(Autoboxing) 與拆箱(Unboxing)

18-4 建立包裝類別物件

18-5 使用valueOf( ) 建立物件 

18-6 取得Number 類別物件的值

18-7 包裝類別的常數

18-8 將基本資料轉成字串toString( )

18-9 將字串轉成基本資料型態parseXXX( )

18-10 比較方法 

第十九章　設計套件(Package)

19-1 複習套件名稱的匯入

19-2 設計Java 套件基礎知識

19-3 Java 套件的優點 

19-4 建立、編譯與執行套件

19-5 套件與應用程式分屬不同資料夾

19-6 建立子套件

19-7 套件的存取控制 

19-8 將介面應用在套件

19-9 將編譯檔案送至不同資料夾的方法

第二十章　程式異常的處理

20-1 認識程式錯誤的類別

20-2 認識簡單的異常實例

20-3 處理異常方法

20-4 try-catch

20-5 捕捉上層的異常

20-6 try/catch/finally 

20-7 Throwable 類別

20-8 自行拋出異常throw

20-9 方法拋出異常throws 

20-10 使用者自訂異常類別

第二十一章　多執行緒

21-1 認識程式(Program)、行程(Process)、執行緒(Thread) 

21-2 認識多工作業(Multitasking) 

21-3 Java 的多執行緒 

21-4 執行緒的生命週期

21-5 建立執行緒

21-6 再看Java 執行緒的工作原理

21-7 讓執行緒進入睡眠

21-8 執行緒的join( ) 方法 

21-9 執行緒的優先順序值

21-10 守護(Daemon) 執行緒

21-11 Java 的同步(Synchronization) 

21-12 匿名類別(Anonymous Class) 

21-13 同步區塊(Synchronized Block)

21-14 同步靜態方法(Sychronized Static Methods)

21-15 認識死結Deadlock

21-16 執行緒內部通信(Inter-thread communication) 

第二十二章　 輸入與輸出

22-1 認識串流(Stream) 

22-2 InputStream 和OutputStream 類別圖

22-3 適用byte 資料檔案輸入與輸出

22-4 使用緩衝區處理byte 資料檔案輸入與輸出

22-5 Writer 和Reader 類別

22-6 字元讀取與寫入FileReader 類別與FileWriter 類別

22-7 字元資料輸入與輸出BufferedReader/BufferedWriter 

22-8 System 類別

22-9 PrintStream 類別

22-10 Console 類別

22-11 檔案與資料夾的管理File 類別

第二十三章　壓縮與解壓縮檔案

23-1 基本觀念與認識java.util.zip 套件

23-2 壓縮(Zip) 檔案

23-3 解壓縮(Unzip) 檔案 

第二十四章　Java Collection

24-0 認識泛型Generic 

24-1 認識集合物件

24-2 List 介面

24-3 Set 介面

24-4 Map 介面

24-5 Java Collections Framework 架構之演算法

第二十五章　現代Java 運算

25-1 增強版的匿名內部類別

25-2 Lambda 表達式

25-3 forEach( ) 

25-4 方法參照(method references) 

25-5 Java 的工廠方法(Factory Methods)

25-6 Java 新的版本字串格式

第二十六章　視窗程式設計使用AWT

26-1 AWT 類別結構圖 

26-2 Frame 類別

26-3 視窗元件顏色的設定Color 類別

26-4 標籤Label 類別 

26-5 字型設定Font 類別

26-6 Button 類別

26-7 建立文字輸入物件

26-8 Checkbox 類別

26-9 CheckboxGroup 類別 

26-10 版面配置管理員(LayoutManagers) 

第二十七章　事件處理

27-1 委派事件模式(Delegation event model)

27-2 簡單按鈕事件處理

27-3 認識事件處理類別

27-4 ActionEvent 事件類別 

27-5 ItemEvent 類別

27-6 TextEvent 類別

27-7 KeyEvent 類別

27-8 KeyAdapter 類別

27-9 MouseEvent 類別 

27-10 WindowEvent 類別

27-11 WindowAdapter 類別 

第二十八章　 再談AWT 物件

28-1 表單List 類別 

28-2 下拉式選單Choice 類別

28-3 功能表設計 

28-4 捲軸Scrollbar 類別 

28-5 對話方塊Dialog 類別

28-6 檔案對話方塊FileDialog 類別

第二十九章　視窗程式設計使用Swing

29-1 SQLite 基本觀念.

29-2 資料庫連線

29-3 SQLite 資料類型

29-4 建立SQLite 資料庫表單

29-5 增加SQLite 資料庫表單紀錄

29-6 查詢SQLite 資料庫表單

29-7 更新SQLite 資料庫表單紀錄

29-8 刪除SQLite 資料庫表單紀錄

29-9 DB Browser for SQLite

29-10 將台北人口數儲存SQLite 資料庫

29-11 MySQL 資料庫

第三十章　繪圖與動畫

30-1 認識座標系統

30-2 AWT 繪圖

30-3 Swing 繪圖

30-4 顏色與字型

30-5 Graphics 類別與Graphics2D 類別

30-6 Graphics2D 類別

30-7 專題拖曳滑鼠可以繪製線條

30-8 動畫設計6-12 enumerate 物件

第三十一章 　網路程式設計

31-1 認識Internet 網址

31-2 Java InetAddress 類別 

31-3 URL 類別 

31-4 URLConnection 類別

31-5 HttpURLConnection 類別

31-6 主從架構(Client-Server) 程式設計基本觀念

31-7 UDP 通訊

第三十二章　JavaFX 最基礎解說

32-1 使用JavaFX 建立系列簡單的Java視窗程式 

32-2 Pane 容器方格

32-3 Pane 的佈局

附錄A　Java 下載、安裝與環境設定

A-1 下載Java

A-2 安裝Java

A-3 Java 環境設定

附錄B　函數或方法索引表

附錄C　關鍵字或專有名詞索引表8-6 元組切片(tuple slices)",https://cf-assets2.tenlong.com.tw/products/images/000/153/547/medium/DM2047_750x933.jpg?1602150218
無瑕的程式碼－敏捷軟體開發技巧守則 (Clean Code: A Handbook of Agile Software Craftsmanship),Robert C. Martin 著、戴于晉、博碩文化 譯,博碩文化,9789862017050,2013/3/22,"本書榮獲iThome年度百大好書推薦

本書的原文書名為《Clean Code: A Handbook of Agile Software Craftsmanship》，根據作者的說法，《無瑕的程式碼》為Jolt得獎著作《敏捷軟體開發：原則、樣式及實務》的前傳。

在台灣另一本銷售極佳的書籍《重構─改善既有程式的設計》，根據亞馬遜Amazon網站的統計，購買該書原文版《Refactoring: Improving the Design of Existing Code》，又同時購買的其他書籍第一名，正是《Clean Code: A Handbook of Agile Software Craftsmanship》這一本書。



第一章作者開宗明義說明什麼是Clean Code，他詢問了包含C++發明人Bjarne Stroustrup、Eclipse策略教父Dave Thomas、極限程式設計大師Ron Jeffries、維基與極限程式設計發明人，Ward Cunningham等等的大師，從他們的眼光來描述什麼是Clean Code，最後才說到作者本人認為的Clean Code應該長成什麼樣子，有什麼好處，以及學習撰寫Clean Code的基本原則。

小編只能說，能和那麼多大師對談，就已經證明了作者也是一位大師

其餘部分本書分成三部份。

 第一部份

 包含有許多章節，這些章節將描述撰寫clean code的原則、模式及實踐，這些章節包含了不少的程式碼篇幅，閱讀它們頗具有挑戰性。這些章節替你準備好閱讀第二部份所需的背景知識。

第二部份

 這裡包含許多複雜性不斷增加的案例討論。在這個部分，作者會直接帶領您進行整個重構的過程，每次的修改，作者都會說明原因，重構的對象並不僅止於一般的程式，甚至還包含了著名的框架，例如JUnit（哇！把開放原始碼框架拿來重構，真酷)。

第三部份

 終於到了成果收割的時候。最後一章列出了案例討論時搜集到的程式啟發和氣味。在案例討論裡走過和清理程式碼時，紀錄了每個行為的原因，並整理成一種程式啟發或氣味，成了一個知識庫，這個知識庫可以說是整本書的精華與交互參照。


        

    

    作者簡介
    
      Robert C. Martin

人稱Uncle Bob，程式設計經驗超過40年，Agile Software（敏捷軟體開發）的提倡者之一。

創立Object Mentor，這是一間專注於C ++、Java物件導向、模式、UML、敏捷方法學和極限程式設計的顧問諮詢公司。

在這些領域，作者撰寫了相當多的名著，其中，又以獲得有IT奧斯卡獎之稱──Jolt震撼年度大獎的《Agile Software Development: Principles, Patterns, and Practices》《敏捷軟體開發：原則、樣式及實務》最為知名。

該得獎年度，Jolt僅頒布通用類、技術類各一本著作得獎，通用類由此書獲得大獎，而技術類書籍則由另一本廣為人知的《Thinking in Java（第三版）》獲得。

    

    目錄大綱
    
      第1章 　無瑕的程式碼　　　　　　（Clean Code）

第2章 　有意義的命名　　　　　　（Meaningful Names）

第3章 　函式　　　　　　　　　　（Functions）

第4章 　註解　　　　　　　　　　（Comments）

第5章 　編排　　　　　　　　　　（Formatting）

第6章 　物件及資料結構　　　　　（Objects and Data Structures）

第7章 　錯誤處理　　　　　　　　（Error Handling）

第8章 　邊界　　　　　　　　　　（Boundaries）

第9章 　單元測試　　　　　　　　（Unit Tests）

第10章 　類別　　　　　　　　　（Classes）

第11章 　系統　　　　　　　　　（Systems）

第12章 　羽化　　　　　　　　　（Emergence）

第13章 　平行化　　　　　　　　（Concurrency）

第14章 　持續地精煉　　　　　　（Successive Refinement）

第15章 　JUnit 的內部結構　　　 （JUnit Internals）

第16章 　重構SerialDate （Refactoring SerialDate）

第17章 　程式碼的氣味和啟發　　（Smells and Heuristics）

附錄 A 平行化之二 （Concurrency II）

附錄 B org.jfree.date.SerialDate （第16章，重構的目標與結果）

附錄 C 啟發的相互參照　　　　（Cross References of Heuristics）",https://cf-assets1.tenlong.com.tw/images/74504/medium/PG21219.jpg
"重構｜改善既有程式的設計, 2/e (繁中平裝版)(Refactoring: Improving The Design of Existing Code, 2/e)","Martin Fowler
          賴屹民",碁峰資訊,9789865021832,2019/6/28,"“任何一個傻瓜都能寫出電腦可以理解的程式，唯有優秀的程式設計師能寫出讓人讀懂的程式。”

—M. Fowler (1999)



完全修訂及更新：包含新的重構方法和範例程式



二十多年來，世界各地經驗豐富的程式員都使用Martin Fowler的《重構》來改善既有程式的設計、提升軟體的易維護性，以及讓既有的程式更容易被人瞭解。



為了反映程式設計領域的重大變化，作者全面翻新書籍內容，推出這本備受期待的新版本。《重構 第二版》提供了新的重構名錄，加入JavaScript範例程式以及新的實用範例來展示各種重構。



這個版本與第一版一樣，將解釋什麼是重構、為何重構、如何認出需要重構的程式，以及如何成功地重構，無論你是使用哪一種語言。



‧瞭解重構的程序與一般原則

‧快速運用實用的重構技術，讓程式更容易理解與修改

‧辨認暗示有待重構的程式碼“異味”

‧探討重構，每一個案例都包括說明、動機、作法與簡單的範例

‧為重構建立可靠的測試程式

‧認識重構的取捨與障礙



本書原文網站提供免費的web標準版本，包含更多重構資源，書中內容將說明如何取得。



    

    作者簡介
    
      MARTIN FOWLER 是ThoughtWorks首席科學家。自稱是“軟體開發界的作者、演說者、顧問與大嘴巴。”Fowler擅長設計企業軟體，研究什麼是好的設計，以及其建立的方法。

    

    目錄大綱
    
      Chapter 1 重構：第一個範例

Chapter 2 重構的原理

Chapter 3 程式碼異味

Chapter 4 建構測試程式

Chapter 5 名錄簡介 

Chapter 6 第一組重構

Chapter 7 封裝

Chapter 8 移動功能

Chapter 9 移動功能

Chapter 10 簡化條件邏輯

Chapter 11 重構 API

Chapter 12 處理繼承",https://cf-assets2.tenlong.com.tw/products/images/000/136/342/medium/ACL054600.jpg?1561522072
Working Effectively with Legacy Code : 管理、修改、重構遺留程式碼的藝術 (中文版),"MICHAEL C. FEATHERS 著
          劉未鵬 譯",博碩文化,9789864344000,2019/8/2,"【名家名著】19

Robert C. Martin Series

軟體工程師必讀的十大好書之一

《無瑕的程式碼》作者Bob大叔親自撰文推薦！

遺留程式碼是每個coder在職場上幾乎都會遇到的難題，

且讓本書幫助您披荊嶄棘，殺出一條軟體變更的康莊大道！



讓你更能妥善處理你的遺留程式碼：使它有更多表現、更多功能、更具可依賴性以及更易於管理

你的程式碼容易修改嗎？當你修改它的時候，可以即時得到回饋嗎？你了解它的運作嗎？如果有任何一個答案為否定，那麼你面對的就是遺留程式碼，而且它會拖垮你的開發成效，使你浪費更多寶貴的時間與金錢。

在本書中，MICHAEL C. FEATHERS提供了許多整套的策略，使讀者能夠更有效率地使用遺留程式碼，以及未經測試的遺留code base。這本書取材於作者為他知名的Object Mentor研討會所撰寫的內容。作者在指導時所提到的技巧，已經幫助數以百計的開發者、技術管理者以及測試人員，使他們的遺留系統維持在掌控之中。

本書內容包括：

☛了解軟體修改的機制：增加特性、修正bug、改善設計、調整性能。

☛使遺留程式碼進入測試控制工具（test harness）。

☛編寫測試來保護你免於引入新的問題。

☛可用於任何語言或平台的技術──以Java、C++、C與C#為範例。

☛正確分辨程式碼應該修改的地方。

☛處理非物件導向的遺留系統。

☛處理看來似乎沒有任何結構的應用程式。

這本書也包含24個解依賴技術的目錄，可協助你讓程式的要素獨立，並且使變動更加安全。



    

    作者簡介
    
      MICHAEL C. FEATHERS

任職於Object Mentor，是一家提供軟體開發的相關服務且在這方面達世界頂尖的公司。服務項目諸如技術指導、技術開發、知識轉移，以及領導技巧等等。他目前在全球的測試驅動開發（TDD）、重構、物件導向設計、Java、C#、C++及極限程式設計（XP）的領域中，提供專業訓練及技術指導的服務。他還是CppUnit（C++的JUnit測試框架）及FitCpp（C++的FIT整合測試框架）的原創作者。他是ACM及IEEE的會員，也曾在三次OOPSLA會議中主持過CodeFest活動。

    

    目錄大綱
    
      Part I 修改機制

Chapter 1 修改軟體

1.1 修改軟體的四個起因

1.2 危險的修改

Chapter 2 帶著回饋工作

2.1 什麼是單元測試

2.2 高層測試

2.3 測試覆蓋

2.4 遺留程式碼修改演算法

Chapter 3 感測和分離

3.1 偽裝成合作者

Chapter 4 接縫模型

4.1 一大段文字

4.2 接縫

4.3 接縫類型

Chapter 5 工具

5.1 自動化重構工具

5.2 仿物件

5.3 單元測試控制工具

5.4 一般測試控制工具

Part II 修改程式碼的技術

Chapter 6 時間緊迫，但必須修改

6.1 新生方法

6.2 新生類別

6.3 外覆方法

6.4 外覆類別

6.5 小結

Chapter 7 漫長的修改

7.1 理解程式碼

7.2 時滯

7.3 解依賴

7.4 小結

Chapter 8 添加特性

8.1 測試驅動開發

8.2 差異式程式設計

8.3 小結

Chapter 9 無法將類別放入測試控制工具之中

9.1 令人惱火的參數

9.2 隱藏依賴

9.3 構造塊

9.4 惱人的全域依賴

9.5 可怕的包含依賴

9.6 「洋蔥」參數

9.7 化名參數

Chapter 10 無法在測試控制工具中執行方法

10.1 隱藏的方法

10.2 「有益的」語言特性

10.3 無法探知的副作用

Chapter 11 修改時應當測試哪些方法

11.1 推測程式碼修改所產生的影響

11.2 前向推測

11.3 影響的傳播

11.4 進行影響推測的工具

11.5 從影響分析當中學習

11.6 簡化影響結構示意圖

Chapter 12 在同一個地方進行多處修改，是否應該將所有相關的類別都解依賴

12.1 攔截點

12.2 透過匯點來判斷設計的好壞

12.3 匯點的陷阱

Chapter 13 修改時應該怎樣寫測試

13.1 特徵測試

13.2 刻畫類別

13.3 目標測試

13.4 編寫特徵測試的啟發式方法

Chapter 14 棘手的函式庫依賴問題

Chapter 15 到處都是API 呼叫

Chapter 16 對程式碼的理解不足

16.1 註記/草圖

16.2 清單標註

16.3 草稿式重構

16.4 刪除不用的程式碼

Chapter 17 程式毫無結構可言

17.1 講解系統的故事

17.2 Naked CRC

17.3 反省你們的交流或討論

Chapter 18 測試程式碼礙手礙腳

18.1 類別命名約定

18.2 測試程式碼放在哪裡

Chapter 19 對非物件導向的專案，如何安全地對它進行修改

19.1 一個簡單的案例

19.2 一個棘手的案例

19.3 添加新行為

19.4 利用物件導向的優勢

19.5 一切都是物件導向

Chapter 20 處理大類別

20.1 職責識別

20.2 其他技術

20.3 繼續前進

20.4 類別提取之後

Chapter 21 需要修改大量相同的程式碼

21.1 開始步驟

Chapter 22 要修改一個巨型方法，卻沒辦法為它編寫測試

22.1 巨型方法的種類

22.2 利用自動重構支援來對付巨型方法

22.3 手動重構的挑戰

22.4 策略

Chapter 23 降低修改的風險

23.1 超感編輯（Hyperaware Editing）

23.2 單一目標的編輯

23.3 簽章保持

23.4 依靠編譯器

Chapter 24 當你感到絕望時

Part III 解依賴技術

Chapter 25 解依賴技術

25.1 參數適配

25.2 分解出方法物件

25.3 定義補全

25.4 封裝全域參照

25.5 暴露靜態方法

25.6 提取並覆寫呼叫

25.7 提取並覆寫工廠方法

25.8 提取並覆寫獲取方法

25.9 實作提取

25.10 介面提取

25.11 引入實例委託

25.12 引入靜態設置方法

25.13 連接替換

25.14 參數化建構子

25.15 參數化方法

25.16 樸素化參數

25.17 特性提升

25.18 依賴下推

25.19 換函數為函數指標

25.20 以獲取方法替換全域參照

25.21 子類別化並覆寫方法

25.22 替換實例變數

25.23 模板重定義

25.24 文字重定義

Appendix 重構

方法提取

術語表",https://cf-assets2.tenlong.com.tw/products/images/000/138/400/medium/MP11914.jpg?1563786524
"Python 技術者們 - 練功！老手帶路教你精通正宗 Python 程式 (The Quick Python Book, 3/e)","Python 軟體基金會主席 Naomi Ceder 著
          張耀鴻 譯",旗標科技,9789863125914,2019/10/11,"別再用 C/Java 邏輯來寫 Python 程式了！

Python 軟體基金會主席 親自指點、引領入門

教您學 Python, 更讓您懂 Python

用真正 Python 思維寫出流利的 Pythonic 程式碼

Python 是目前的當紅程式語言, 更是進入 AI 機器學習必備的基礎知識, 學習 Python 已經蔚為風潮。但是大部分書籍、文件都只是教語法, 洋洋灑灑一大篇語法說明, 學了之後, 真的能懂 Python？知道怎麼寫 Python 嗎？

本書不只是說明語法, 更告訴您 Python 與其他程式語言的不同之處, 以及這些特點背後的原因, 讓您真的懂 Python、用 Python！

本書特色 :

翻譯書都看不懂？新手免害怕, 詳細的解說+流暢的翻譯, 讓你也看得懂、學得會, 領你進門更帶你修練成老手

本書為 Python 軟體基金會主席親自撰寫的最新版 Python 經典, 中文版由施威銘研究室監修, 書中針對原書進行大量補充, 並適當添加註解, 幫助讀者能更加理解內容。

其他書看不到的內容, 只存在於老手間的獨門心法, 就讓這本書一一為您詳細說明。例如：

● Python 全域變數不是真正全域？

● Python 函式的區域變數是由賦值與否來決定的？

● 為何 Python 函式都不檢查參數值, 先用了出錯再處理？

● Python 物件沒有真正的私有屬性, 資訊都不用封裝隱藏了嗎？

● 鴨子型別是什麼？我實在不懂這跟鴨子到底有什麼關係？

● 為什麼 Python 函式可以一次 return 多個傳回值？

● Pythonic 這個詞好像很厲害, 是什麼意思？

● Python 的 list[n:m] 切片為何要有頭無尾？

● 為什麼 Python 要求程式每行結尾不要超過 80 個字？

● Python 的型別與類別是同義詞？

本書相關資源網頁如下, 請登錄下載範例程式及 Bonus：

http://www.flag.com.tw/bk/t/f9749

也歡迎加入本書社群, 和技術者們直接對話！

「從做中學 Learning by doing」粉絲專頁 

(https://www.facebook.com/flaglearningbydoing/)



    

    作者簡介
    
        作者 Naomi Ceder 為 Python 軟體基金會主席, 有超過 30 年的程式設計經驗, 從 2001 年開始使用 Python, 已經廣泛地將 Python 應用於系統管理、網頁程式、資料庫管理、數據分析等各種實務場合, 同時也擔任 Python 教學的講師, 學生從 12 歲初學者到專業人士, 致力於將 Python 的優點推廣給所有人。

    

    目錄大綱
    
      第1篇 初始篇

第1章 關於Python 

1.1 Python簡介 

1.2 Python的優勢 

1.3 Python表現不佳的地方 

1.4 為什麼要學習 Python 3? 

第2章 開發環境安裝與設定 

2.1 安裝Python 開發環境 

2.2 設定Python 開發環境 

第3章 執行與測試Python程式 

第2篇 基礎篇 

第4章 絕對的基礎 

4.1 縮排及區塊結構 

●老手帶路：Python 的縮排原則 

4.2 註解 

4.3 變數及其設定 

●老手帶路：Python中的變數：是水桶還是標籤？ 

4.4 運算式 

4.5 字串 

4.6 數字 

●老手帶路：Python 的除法特性 

●老手帶路：避免使用 from import * 

4.7 None值 

4.8 取得使用者的輸入 

4.9 內建算符 

4.10 基本Python風格與名稱命名慣例 

第5章 基本資料結構：list、tuple、set 

5.1 list類似陣列 

5.2 list的索引與切片 

●老手帶路：為什麼Python的切片索引要有頭無尾？ 

5.3 修改list 

5.4 list的排序 

5.5 其他常用的list操作 

5.6 多層list和深層副本 

5.7 tuple 

●老手帶路：自動打包與自動解包的功用 

●老手帶路：您寫的Python程式夠Pythonic嗎？ 

5.8 set 

第6章 字串 

6.1 字串為字元序列(sequence) 

6.2 基本的字串操作 

6.3 特殊字元和轉義字元 

●老手帶路：程式敘述過長的缺點與長字串的建立 

6.4 字串的method 

6.5 從物件轉換成字串 

6.6 使用format() method來格式化字串 

●老手帶路：使用格式化字串的優點 

6.7 以 % 算符來格式化字串 

6.8 以 f-strings來格式化字串 

6.9 bytes物件 

6.10 使用print() 控制字串輸出 

第7章 字典 

7.1 什麼是字典? 

7.2 其他字典操作 

7.3 字數統計 

7.4 什麼型別可以當作鍵來使用? 

7.5 稀疏矩陣 

7.6 以字典作為快取 

7.7 字典的效率 

第8章 流程控制 

8.1 while 迴圈 

●老手帶路：while-else的使用場合 

8.2 if-elif-else 判斷式 

●老手帶路：使用簡潔易懂的單行if條件運算式 

8.3 for 迴圈 

8.4 用生成式快速建立新的list與字典 

●老手帶路：用索引刪除list元素的隱形Bug 

8.5 敘述、區塊、和縮排 

8.6 布林值與運算式的真假運算 

●老手帶路：用Short-circuit Evaluation代替if判斷式 

8.7 寫一個簡單的程式來分析文字檔 

第9章 函式 

9.1 基本函式定義 

9.2 函式的參數定義與引數傳遞 

9.3 用可變 （mutable）物件作為引數時要小心 

●老手帶路：用可變物件做為函式參數預設值的問題 

9.4 local、global、nonlocal變數 

●老手帶路：小心區域變數未賦值先使用 

9.5 將變數參照到函式 

●老手帶路：將函式當成引數來傳遞與其適用場合 

9.6 lambda 匿名函式 

●老手帶路：使用 lambda匿名程式的優缺點 

9.7 產生器(走訪器)函式 

9.8 修飾器（Decorator） 

●老手帶路：修飾器（decorator）的用途 

第10章 模組與變數可視範圍 

10.1 什麼是模組? 

10.2 第一個模組 

10.3 import 敘述的三種形式 

10.4 模組搜尋路徑 

10.5 模組中的私有名稱 

10.6 函式庫與第三方模組 

10.7 Python命名空間和變數可視範圍 

●老手帶路：Python全域變數的可視範圍不涵蓋全程式 

●老手帶路：從模組import變數容易發生的問題 

●老手帶路：在主程式與不同模組之間共享變數資料 

第11章 Python程式檔 

11.1 將主程式放入主控函式 

11.2 在Linux/UNIX讓Python程式檔變成執行檔 

11.3 macOS上的Python程式檔 

11.4 Windows中Python程式檔的啟動方式 

11.5 程式與模組 

11.6 發佈Python應用程式 

第12章 使用檔案系統 

12.1 os 和 os.path 與 pathlib之比較 

12.2 路徑和路徑名稱 

12.3 取得檔案相關的資訊 

12.4 更多檔案系統操作 

12.5 用os.walk()處理所有子目錄中的所有檔案 

第13章 檔案讀寫 

13.1 開啟檔案與file物件 

13.2 關閉檔案 

13.3 以寫入模式或其他模式開啟檔案 

13.4 讀寫文字檔和二進位檔案 

13.5 用pathlib讀取與寫入 

13.6 標準輸入/輸出與重新導向 

13.7 用struct模組讀取結構化二進位資料 

13.8 將物件序列化後保存到檔案 

13.9 Shelve 物件 

第14章 例外處理 

14.1 什麼是例外 

●老手帶路：LBYL（事先檢查避免出錯）與EAFP（先做了出錯再處理） 

14.2 Python的例外機制 

●老手帶路：EAFP錯誤處理風格的優缺點 

●老手帶路：用例外處理與Guard Clauses讓程式流程更清楚 

14.3 使用with資源管理器 

第3篇 進階篇 

第15章 類別與物件導向程式設計 

15.1 類別Class 

15.2 物件變數與__init__特殊method 

15.3 物件方法method (物件的函式) 

15.4 類別變數class variables 

15.5 靜態方法static method與 

15.6 類別的繼承inheritance 

15.7 類別變數與物件變數的繼承 

15.8 Python類別基礎的重點複習 

15.9 私有變數與私有方法 

●老手帶路：有別於資訊隱藏傳統！ Python對於物件內部資料的公開風格 

15.10 以 @property 修飾器來實作更靈活的物件變數

15.11 物件的變數視野與命名空間

15.12 物件的記憶體回收機制

15.13 多重繼承

第16章 常規表達式 

16.1 什麼是常規表達式 

16.2 具有特殊字元的常規表達式 

16.3 常規表達式與原始字串 

16.4 從字串中提取符合樣式的文字 

16.5 用常規表達式搜尋取代字串 

第17章 物件的型別與特殊method 

17.1 取得物件的型別 

17.2 比較與檢查型別 

17.3 取得物件所屬類別與類別繼承結構 

17.4 鴨子型別（Duck Typing） 

●老手帶路：鴨子型別在實際應用上的彈性 

17.5 何謂物件的特殊method 

17.6 用__getitem__自訂可走訪與 

17.7 用__setitem__自訂可用索引賦值的 

17.8 賦予自訂物件更多類似list的功能 

17.9 繼承內建型別來產生新的型別 

17.10 使用特殊method的時機 

第18章 套件 

18.1 什麼是套件 

18.2 套件的運作方式 

18.3 套件的具體範例 

18.4 __all__ 屬性 

18.5 套件的正確使用方式 

第19章 使用Python 函式庫 

19.1 「內建電池」：標準函式庫 

19.2 用安裝檔新增Python函式庫 

19.3 使用pip 安裝Python函式庫 

19.4 virtualenv虛擬環境 

19.5 PyPI（Python套件索引） 

第4篇 實戰篇 

第20章 基本的檔案整理 

20.1 問題：永無止境的資料檔案流 

20.2 場景：每天都會收到的產品資訊檔 

20.3 更有組織的檔案整理方式 

20.4 節省儲存空間: 壓縮和修剪 

第21章 處理純文字、CSV、Excel資料檔 

21.1 資料的提取、轉換、載入（ETL） 

21.2 處理純文字檔 

21.3 Excel 試算表檔案 

21.4 資料清理 

21.5 寫入資料檔 

第22章 網路下載與解析資料 

22.1 使用Python下載檔案 

22.2 透過API取得資料 

22.3 解析JSON與XML格式 

22.4 解析網站HTML資料 

第23章 存取資料庫 

23.1 關聯式資料庫 

23.2 SQLite：使用sqlite3資料庫 

●老手帶路：防止SQL Injection攻擊 

23.3 使用MySQL、PostgreSQL和 

23.4 使用ORM讓資料庫更容易處理 

23.5 NoSQL 資料庫 

23.6 用Redis 儲存Key-Value資料庫 

23.7 用MongoDB儲存文件資料庫 

第24章 資料分析 

24.1 用於資料分析的Python工具 

24.2 Jupyter Notebook 

24.3 Python和pandas 

24.4 用pandas進行資料ETL 

24.5 資料彙總與操弄 

24.6 繪製資料進行視覺化 

24.7 什麼情況不適合使用pandas 

第25章 實例應用：繪製氣溫長期變化圖 

25.1 挑選合適的氣象站 

25.2 下載資料繪製氣溫變化圖

BONUS PM2.5 空氣品質警報通知：簡訊+LINE (中文版獨家/旗標特製)",https://cf-assets2.tenlong.com.tw/products/images/000/140/657/medium/9789863125914_bc.jpg?1568803454
小輕快跨平台：王的編輯器 Visual Studio Code 聖經,韓駿,深智數位,9789865501556,2020/10/21,"本書特色

市面上第一本完整說明Visual Studio Code的中文書

 

★ 全世界軟體設計師最愛的IDE編輯器。

支援上百種程式語言，語義突顯、自動完成、自動縮排，完整中斷偵錯，跨平台，內建支援SSH、GIT，可連線到遠端的Windows/Linux/MacOS上進行開發、網頁支援、雲端支援，說不完的強大，連編輯器之神vim的愛用者都忍不住跳槽，連神之編輯器Emacs的使用者也紛紛安裝，不管你是哪作業系統的使用者，快點進入這王之編輯器！

 

★ 好評襲來

Visual Studio Code（VS Code）之所以越來越受歡迎，除了因為它本身具有某些優秀品質，許多外掛程式也功不可沒。本書的一大特色就是幫助你找到合適的外掛程式，並且指導你快速上手。無論你有興趣的是各種程式語言（JavaScript/TypeScript、Java、Python 等），還是實際的開發場景（前端、雲端原生、物聯網等），本書都提供了詳盡的指引。工欲善其事，必先利其器。相信透過本書的學習，你可以把VS Code 訂製成高效又稱手的開發環境。

—微軟Java 語言開發工具團隊首席軟體開發經理 李榕

 

VS Code 是一款極為優秀的開放原始碼產品。透過本書，你除了可以全面地了解到VS Code 的許多使用技巧，還可以學習到VS Code 團隊是如何做開放原始碼的。VS Code 團隊不僅將其程式開放原始碼，而且將整個開發過程都建立於開放原始碼環境之上。對於開放原始碼專案的開發者，VS Code 有許多值得參考和學習的地方。

—開放原始碼中國創始人兼CTO 紅薯

 

VS Code 是微軟針對多語言開發者的程式編輯器，是一款程式設計利器，深受開發者喜愛。VS Code 雖然容易上手，但卻很難精通，因為有關的技術細節比較多，外掛程式生態也比較豐富。作者憑藉其在VS Code 上的多年使用和外掛程式開發經驗，為讀者們把VS Code 的整個技術架構分門別類地整理清楚，並介紹使用技巧、外掛程式、語言服務和各種開發場景，最後達到深入淺出的目的。本書作為VS Code 技術領域的標桿圖書，在技術廣度和深度上兼具極強的參考價值，適合各種語言的開發者作為學習和參考用書。

—華為雲DevCloud 研發技術總監 王亞偉

 

VS Code 的誕生加速了開發階段的數位化進程。近年來，雲端開發理念深入人心，這表示我們需要用網際網路模式重構對開發者來說最重要的工具—IDE。作者透過本書將VS Code 的精妙之處完整呈現，不管是IDE 的使用者、開放原始碼同好還是工具開發者都不應該錯過本書。

—阿里巴巴研發平台負責人 陳鑫（花名神秀）

 

作為程式設計師，我們中的大部分人對VS Code 都再熟悉不過。但是，正如「二八法則」所揭示的那樣，80% 日常用它敲程式的程式設計師很可能只用到了其20% 的核心功能。本書帶我們全面細數VS Code 的各方面，或許其中的小基礎知識就能幫助你在未來的使用過程中提升開發效率。為了儲備與開發工具相關的知識，本書值得一讀。

—著名開放原始碼軟體ECharts 核心貢獻者之一 羨轍

 

本書從開發工具的歷史入手，由淺入深地說明了VS Code 的入門和進階知識，以及VS Code 的強大生態，並教你如何為生態、社區，甚至是VS Code本身做出自己的貢獻。這是一本關於使用VS Code 進行開發的大而全，卻又不雜的好書。

—《Node.js：來一打C++ 擴充》作者、

《精通Vim：用Vim 8 和Neovim 實現高效開發》譯者死月

 

VS Code 是入門簡單卻頗具深度的開發工具，使用者可以極快上手，但隨著深入使用，又會發現達到爐火純青的境界並非易事。本書對於開發者而言，最大的優勢在於它的系統性。從入門到進階再到擴充，整個知識系統一脈相承，開發者不再侷限於許多雜湊基礎知識的拼湊，更可以利用它使VS Code成為技術團隊不可或缺的生產力！

—騰訊雲Serverless 技術專家、百度前技術經理 王俊傑

 

VS Code 作為Visual Studio 家族的產品，也是微軟在雲端原生時代提供的輕量級開發工具。韓駿透過本書，不僅將VS Code 的豐富內容向我們展現得淋漓盡致，讓我們知其然知其所以然，而且能夠使我們在讀後舉一反三地探索VS Code 的未來。

—深圳市友浩達科技有限公司CEO 張善友

 

VS Code 是全球極受歡迎的開發工具之一。韓駿老師憑藉豐富的技術經驗和生動的語言，帶大家由淺入深地學習VS Code，本書非常值得讀者閱讀學習。

—微信公眾號「程式設計師小灰」作者、《漫畫演算法》作者 魏夢舒

 

VS Code 是微軟在2015 年發佈的編輯器，隨後便快速發展起來，成為Stack Overflow 上認證的最受歡迎的編輯器。儘管我一直覺得Emacs 是最好的編輯器，但其實我使用VS Code 的頻率已經高於Emacs。本書歸納了韓駿多年的VS Code 開發經驗，能夠幫助你快速入門及進階VS Code，了解VS Code 在不同領域（如雲端運算、物聯網）的應用，以及如何進行正在火熱發展中的雲端研發等。

—ThoughtWorks 進階諮詢師、

《前端架構：從入門到微前端》作者 黃峰達（Phodal）

 

本書是VS Code 使用者和貢獻者都值得一讀的書。書中透過豐富的使用場景，由淺入深地從各個角度詳盡地介紹了VS Code。無論你是想使用VS Code的各種功能，還是想要了解它的執行機制，或是想成為其生態圈的貢獻者，本書都會是你手邊的必備寶典。

—Works Applications 副總裁 王浚立

 

和韓老師在微軟共事多年，他絕對當得起「極客」的稱呼，是當之無愧的VS Code 專家。VS Code 作為近幾年最強勢的編輯器，迅速橫掃了這個已經深耕多年的市場，並打破了微軟一向給人的「不夠開放」的固有印象。無論你使用哪種程式語言進行程式設計，使用什麼作業系統進行開發，本書都可以幫助你掌握一個高效的開發工具，使你的職業生涯如虎添翼！

—字節跳動Tech Lead 盧肇興

 

韓老師對VS Code 生態具有相當大的熱情，持續一貫地進行中文圈VS Code的技術佈道，幫助開發者更進一步地了解、使用VS Code，加強生產力。本書除了可以作為VS Code 的使用手冊，還可以使你了解微軟團隊在開發這款卓越工具背後的一些有趣故事。

—螞蟻金服技術專家 牽招

 

正確、有效地使用開發工具可以讓開發人員的開發效率倍增，而本書正是透過全面介紹VS Code 的各個功能模組及日常開發的使用場景來探索這款流行開發工具的潛能，進而幫助各個領域的開發者掌握VS Code 正確、有效的使用方法。相信這是一本值得廣大開發人員花時間好好翻閱的關於VS Code 的書。

—亞馬遜AWS 軟體工程師 勵洋

 

VS Code 的生態十分強大，包含Google 在內的許多大廠都開發了多款VS Code 外掛程式。工欲善其事，必先利其器。透過本書的學習，你一定能掌握更多關於VS Code 的技能，大幅加強程式設計效率。

—Google 軟體工程師 趙豐

 

VS Code 作為微軟擁抱開放原始碼社區的又一大成果，結合了該公司深厚的商務軟體開發底蘊和開放原始碼社區的活躍創造力，在短時間內一躍成為業界最受歡迎的程式編輯器。它幾乎融合了所有以往編輯器的優點，同時又能透過自由擴充來支援現在乃至未來的技術熱點。非Windows 平台的使用者終於可以感受原汁原味的「宇宙第一IDE」的魅力。但是，與其強大、豐富的功能相比，市面上針對它的教學材料卻少得可憐，用中文寫的就更是少之又少。本書的出現適時地彌補了這一缺憾。它不僅能幫助剛開始學習程式設計的初

學者，也能幫助從業一段時間的程式設計師。本書不僅詳細介紹了VS Code比較常用的各項功能，而且非常強調實作。每一個案例都配有詳細的步驟和畫面，幾乎可以當作一本工具書來收藏。本書作者是本人的大學同學，也是在微軟工作近10 年的資深工程師，其業務能力毋庸置疑。非常高興能看到本書的出版，以及作者為國內技術社區做出的貢獻。

—Facebook 進階工程師 萬志程（Jensen Wan）

 

VS Code 是我用過的最簡潔清爽又功能強大的編輯器。一直以來都缺乏一本詳細解析VS Code 使用技巧與設計的書。韓駿作為微軟開發工具事業部的工程師，在保持本書專業性的同時，又將VS Code 的使用和設計深入淺出地娓娓道來。能夠將技術圖撰寫得如此生動有趣，著實不易。本書對VS Code 在多場景下的使用進行了一步步的詳細解析，相當大地擴充了我的視野。我原先並不知道VS Code 可以將如此多的內容輕鬆整合在一起，讓每個人都能形成具有自己風格的、便利的開發環境。本書解答了我「不知道自己有什麼不知

道」的問題。最後，本書並非只是一本參考手冊，在某些部分，讀者不僅能從書中循序漸進地掌握VS Code 的許多不為人知的使用訣竅，還能了解到一些團隊設計背後的考量，從中學到大廠在建置優秀產品時難得一見的背後想法與洞見。讀完本書，你將大呼過癮。

—eBay 軟體工程師 吳慧珺

 

工欲善其事，必先利其器。本書透過豐富的圖示一步步指導讀者打造專屬的VS Code 開發環境，深入細緻地介紹了各種場景下的使用精髓，是一本學習VS Code 的優秀圖書。

—愛奇藝大數據服務軟體工程師 鄭浩南

作者簡介

韓駿

 

畢業於上海交通大學軟體學院，微軟開發平台事業部軟體工程師。

VS Code（Visual Studio Code）中文社區創始人，VS Code程式碼貢獻者，「玩轉VS Code」微信公眾號及知乎專欄作者，PyCon、JSConf、.NET Conf、Microsoft Tech Summit、Google Developer Group、COSCon等技術大會講師。

 

編寫過20多款VS Code外掛程式，其中Code Runner外掛程式下載量超過1000萬。

目錄

01 如何學習Visual Studio Code

1.1 學會搜尋

1.2 學會提問

1.3 學會學習

 

02 Visual Studio Code 簡介

2.1 Visual Studio Code 概覽

2.2 Visual Studio Code 簡史

2.3 Visual Studio Code 的優勢

2.4 Visual Studio Code 開發團隊

2.5 Visual Studio Code 是如何做開放原始碼的

 

03 核心元件

3.1 Electron

3.2 Monaco Editor

3.3 TypeScript

3.4 Language Server Protocol

3.5 Debug Adapter Protocol

3.6 Xterm.js

 

04 安裝與設定

4.1 概覽

4.2 Linux

4.3 macOS

4.4 Windows

 

05 快速入門

5.1 Visual Studio Code Insiders

5.2 設定

5.3 使用者介面

5.4 編輯功能

5.5 主題

5.6 快速鍵

5.7 整合終端

5.8 中文顯示

 

06 進階應用

6.1 命令列

6.2 IntelliSense

6.3 程式導覽

6.4 玩轉Git

6.5 打造自己的主題

6.6 快速建立可重複使用的程式片段

6.7 Task，把重複的工作自動化

6.8 Multi-root Workspaces

6.9 偵錯與執行

 

07 外掛程式

7.1 外掛程式市場

7.2 外掛程式管理

7.3 那些不錯的外掛程式

 

08 語言深入

8.1 概覽

8.2 Python

8.3 JavaScript

8.4 TypeScript

8.5 Java

8.6 C#

8.7 C/C++

8.8 Go

8.9 更多語言支援

 

09 前端開發

9.1 HTML

9.2 CSS、SCSS 和Less

9.3 Emmet

9.4 React

9.5 Angular

9.6 Vue

9.7 前端外掛程式推薦

 

10 雲端運算開發

10.1 微軟Azure

10.2 AWS

10.3 Google Cloud Platform

10.4 阿里雲

10.5 騰訊雲

 

11 物聯網開發

11.1 裝置端開發

11.2 裝置上雲端

11.3 裝置模擬

11.4 邊緣計算

11.5 物聯網外掛程式推薦

 

12 遠端開發

12.1 遠端開發概覽

12.2 遠端開發外掛程式

12.3 SSH

12.4 容器

12.5 WSL

 

13 Visual Studio family

13.1 Visual Studio、Visual Studio Code、Visual Studio Codespaces，你都分清楚了嗎

13.2 Visual Studio Codespaces

13.3 Visual Studio Live Share

13.4 Visual Studio IntelliCode

 

14 成為Visual Studio Code的貢獻者

14.1 GitHub Issues

14.2 提問

14.3 討論

14.4 GitHub Pull requests

14.5 外掛程式

14.6 翻譯

 

15 外掛程式開發

15.1 如何打造一款優秀的Visual Studio Code 外掛程式

15.2 你的第一個Visual Studio Code外掛程式

15.3 Visual Studio Code 外掛程式的擴充能力

15.4 外掛程式開發面面觀

15.5 外掛程式開發的生命週期

序

推薦序

 

Visual Studio Code 已經迎來了5 周年的誕辰！在2015 年4 月29 日的微軟Build 開發者大會上，微軟宣佈推出Visual Studio Code。自從Visual Studio Code 第一個公開預覽版本發佈以來，這個輕量級的編輯器已經吸引了全球數以百萬計的開發者。在很短的時間內，Visual Studio Code 在全世界成了開發者們最喜愛的開發工具。如今，Visual Studio Code 已經有了超過1200 萬的月活使用者，並且保持著持續增長的趨勢。

 

從公司創立之初，微軟就有為開發者服務的基因。微軟創始人比爾· 蓋茲開發的第一款產品，就是執行在Altair 電腦上的BASIC 語言。歷經數十年，微軟一直致力於為廣大開發者與開發團隊打造最優秀和最具生產力的開發工具。微軟的使命和願景是幫助每一個人、每一個組織成就不凡。為了達成這一使命，我們希望幫助全球每一位開發者，用先進的工具與平台幫助創新者去實現他們的創意，改變世界。

 

回想2015 年， 我們非常幸運， 因為有Erich Gamma 來帶領Visual Studio Code 的開發團隊。Erich 是經典書《設計模式：可重複使用物件導向軟體的基礎》的作者之一。在加盟微軟之前，他主管開發了Eclipse 平台上的Java Development Tools（JDT） 專案。有Erich 和微軟Visual Studio 主管層之間的強強聯手，我們的團隊對開發者的需求有了深度的了解。同時，從Visual Studio 和Eclipse 數十年的開發經驗中，我們提煉了許多寶貴的經驗與教訓。

 

打造Visual Studio Code 的開發團隊不僅實力頂尖，還應用了現代化的開發模式。Visual Studio Code 基於開放原始碼且跨平台的理念，按照每月發佈的節奏來快速反覆運算產品開發，並且提供每日發佈的Insider 通道。它擁有上萬個外掛程式，生態極為活躍和豐富。

更重要的是，Visual Studio Code 是我們踐行微軟「顧客至上」文化的最佳榜樣。Erich 極佳地擁護了「開發團隊與使用者零距離」的格言。整個Visual Studio Code 開發團隊持續地與使用者溝通，基於他們的回饋來改進產品，並與社區緊密合作，在GitHub 上建立了月度工作專案。

 

透過韓駿的這本書，我希望讀者能學到更多Visual Studio Code 的使用技巧。我們很樂意看到Visual Studio Code 能繼續成為你工作與生活的一部分，也希望本書能幫助有意願學習程式設計的人成就不凡。

Happy Coding!

—微軟開發平台事業部全球資深副總裁 潘正磊（Julia Liuson）

 

序

 

那些年，我們一起追的Visual Studio Code（VS Code）

2015 年，我25 歲。Visual Studio（VS）是微軟最重要的開發工具。開發者們還在期待Visual Studio 2015 的到來。

那些年，組裡的前端專案用的是AngularJS，組裡購買了WebStorm 的正版軟體授權，大家紛紛表示很好用。

那一年，那些年。

我叫韓駿，大學同學都叫我韓總。我高中念的是北虹進階中學，大學念的是上海交通大學。2013 年，我正式入職微軟上海。故事，由此開始。故事的另一位主角，是現居西雅圖的VS Code 團隊核心成員呂鵬老師。早在2012 年暑期，在微軟實習時，我們就相識了。那時，我們的交集並不多。有幸的是，我們雙雙拿到了微軟正式員工的Offer，便不再糾結於讀研還是工作。2013 年7 月8 日，我和呂老師，還有其他幾位夥伴一起入職了。剛接觸呂老師時，就覺他特別有靈性，常常具有超越常人的想法與見解。入職後，我們驚奇地發現，兩個人的住所相隔如此之近，只有5 分鐘的步行距離。

這，也許是天意。由此，我們開始了長達3 年的微軟10 號交通車之旅。我已經記不清10 號交通車換了多少位交通車司機，但不變的是，每天來回3 小時路上我們都在。無數個3 小時，我們都不會孤獨，一路上，從C#、.NET、AugularJS 再到後來的TypeScript、VS Code，我們無不討論。（嗯，在此，要對10 號交通車上的所有同事說聲抱歉，打擾到你們睡覺啦。）

 

2015 年，我們有一個CMS 系統的專案，而visualstudio.com 的內容也被放在這個系統上管理。某一天，我不經意間在測試網站上發現了一個VS Code 的頁面，描述裡赫然寫著它是一個跨平台的編輯器。當時已經臨近舉辦微軟最重要的開發者大會—Build 大會，我的第一反應就是，這是一個重量級產品！我馬上喊來呂老師一起看。呂老師仔細地看著那個頁面，不等我們交流，從他看網頁的那堅定的眼神中我就能知道，我們想的是一樣的，將會是一個Big News（大新聞）。果不其然，不久後的2015 年4 月29 日，在Build 大會上，

微軟宣佈推出VS Code 的第一個預覽版本，許多開發者為之振奮，也有很多類似「VS 支援跨平台了」的標題黨出現。我當然第一時間下載下來並體驗了一下，第一印象是VS Code 的速度是如此之快，而且對Git 具有很好的支援。

 

從那時起，我的主力編輯器就逐漸轉向了VS Code。

在半年後的2015 年11 月18 日，VS Code 獲得MIT License（MIT 授權）並在GitHub 上開放原始碼，同時宣佈將支援擴充功能。在10 號交通車上，呂老師和我談到了VS Code 的發展前途，並有給VS Code 寫外掛程式的打算。到了2016 年春節後，呂老師在交通車上和我說，他正在寫Ruby 的外掛程式，詳細說了一下VS Code 的外掛程式機制。當時，VS Code 的外掛程式很少，很多語言的外掛程式都是缺失的，為其開發外掛程式可謂是一片真正的藍海。

大概過了一周，呂老師發佈了他的Ruby 外掛程式。我不禁感歎呂老師的效率之高，他可以算是最早一批抓住VS Code 機會的大佬之一。也正是憑藉這個Ruby 外掛程式作為試金石，呂老師在那年成功入職高手雲集的VS Code 團隊，開啟人生贏家之路。其實關於Ruby 外掛程式還有一個小故事，當時除了呂老師，還有一位老外也在寫Ruby 外掛程式。那時，那位老外被一個技術困難卡住了，還沒等他解決那個困難，呂老師就以迅雷不及掩耳之勢發佈了Ruby 外掛程式。後來，呂老師也說服了那位老外一起來寫這個已經發佈的外掛程式，避免重複工作。如果呂老師的Ruby 外掛程式再晚發佈幾天，也許就是另一種結果了。

 

到了2016 年6 月，呂老師已經開始準備去美國了。組裡的另一位大佬同事也發佈了REST Client 外掛程式，廣受好評。那月，Erich Gamma（VS Code 開發團隊的總負責人、《設計模式：可重複使用物件導向軟體的基礎》作者之一、JUnit 建立者之一）來到微軟上海，我也有幸親眼見到了他。我知道，我該行動了。這是一片即將變紅的藍海。以Fail Fast（快速失敗）為指導思想，我在短短一個月的時間裡接連發佈了4 款外掛程式。沒想到，這4 款外掛程式都廣受使用者的喜歡，特別是Code Runner，下載量從1 萬、10萬，一直上升到現在的1000 萬，是我開發的20 多個外掛程式中使用者最喜

歡的外掛程式之一。

 

2016 年下半年，呂老師遠赴美國，而10 號交通車上只剩我「一個人」了。但是，我追逐VS Code 的步伐並沒有停止。正巧，部門那時開始做IoT 的Developer Tooling，我馬上想到要做一個VS Code 的外掛程式。可惜，當時做一個VS Code 的IoT 外掛程式並沒有被列為一個優先專案。但是，感謝微軟的開放態度，我利用自己的個人時間開發了Azure IoT Toolkit，由於反響良好，一年後我把外掛程式貢獻出來，使Azure IoT Toolkit 被升級為微軟的官方外掛程式。

到了2017 年，IoT 外掛程式開發被正式提上議程，組裡成立了專門的團隊來開發Arduino 外掛程式。我雖然沒有實際參與外掛程式的開發，但在整個過程中提出了很多建議，在兩次組內的Bug Bash 中勇奪冠軍。外掛程式發佈後受到了Arduino 社區的很多好評，因此，我們部門也開始了VS Code 外掛程式開發的旅程，自行開發或合作開發的外掛程式超過了20 個，這些外掛程式有關的領域包含IoT、Java、Ansible、Terraform 等。

 

2018 年，我有幸在微軟技術暨生態大會上做了一次演講，主題是「從零開始開發一款屬於你的Visual Studio Code 外掛程式」，把外掛程式開發的經驗帶給更多的開發者朋友。

 

2019 年，我對VS Code 外掛程式開發有了更深入的思考。僅憑我一個人寫外掛程式又能寫多少呢，新的外掛程式還比較好寫，最耗費成本的其實是外掛程式維護，現在的20 個外掛程式維護起來已經很累了，所以授人以魚不如授人以漁，我開通了「玩轉VS Code」微信公眾號及知乎專欄，就是希望把VS Code 的一些經驗分享給更多的人，也希望有更多志同道合的朋友一起來玩轉VS Code。整個2019 年，我也在多場大會（PyCon、JSConf、.NET Conf、Google Developer Group、GitHub 官方見面會、COSCon 等）上進行了公開演講，對VS Code 進行佈道。

 

2019 年11 月30 日，又是一個特別值得紀念的日子！經歷了長時間的籌備，VS Code 中文社區終於成立了！從一個普通的藍領程式設計師到VS Code 外掛程式的「產品設計師」，到VS Code 的佈道師，再到VS Code 中文社區的創始人，我與VS Code 一起成長。

 

不知道這些年來我對VS Code 的追逐到底產生了多大的影響。但是，至少，我看到了一些變化。曾經，人們會把VS Code 當成VS，以為VS 跨平台了。如今，會有95 後的同學反過來把VS 當作VS Code：原來除了VS Code，居然還有個VS ？曾經，面對新的專案，我們會問：為什麼要做一個VS Code 的外掛程式？如今，面對新的專案，我們會問：為什麼不做一個VS Code 的外掛程式？

 

微軟的10 號交通車還在，很多當年一起入職的夥伴卻分散到了不同的地方：上海、蘇州、無錫、西雅圖。我依稀記得，在某個早晨的交通車上，我和呂老師為了一個專案中的技術問題吵到面紅耳赤，而到了中午依舊是80 分遊戲的最佳拍檔；某天下班的路上，我們為了專案中的難以重現的Bug，在交通車上開啟筆記型電腦一起來偵錯；某個晚上，我為了Code Runner 中的Bug 奮戰到淩晨兩點。那時，在交通車上，我們還經常會拿著Surface RT，看Channel 9，看Design Spec，回郵件。微軟的10 號交通車還在，承載著我那時對技術的執著與熱情，繼續行駛在光明的大路上。

 

不忘初心，莫失初衷。不言放棄，追逐所愛。",https://cf-assets2.tenlong.com.tw/products/images/000/153/538/medium/%E6%B7%B1%E6%99%BA-DM2044-%E7%AB%8B%E9%AB%94%E6%9B%B8.jpg?1602149213
你所不知道的 JS｜導讀，型別與文法 (You Don't Know JS: Up & Going),Kyle Simpson 著、黃銘偉 譯,歐萊禮,9789863479666,2016/3/18,"<內容簡介>

 

《你所不知道的 JS》系列包括：

■ 導讀，型別與文法

■ 範疇與 Closures，this 與物件原型

■ 非同步處理與效能

■ ES6 與未來發展

 

■ 導讀篇

 

學習 JavaScript 的部分功能很容易，但要完全學好它，或甚至只是學習到「充分」的程度，就難上許多了，無論你是該語言的新手，或是已使用它多年，皆是如此。藉由《你所不知道的 JS》系列書籍，你將會對 JavaScript 有較完整的理解，包括該語言較棘手、會讓許多有經驗的 JavaScript 程式設計師想要避開的那些部分。

 

《導讀篇》為程式設計經驗有限的你們提供了必要的背景知識。學習了程式設計的基本構建組塊，以及 JavaScript 的核心機制之後，你就準備好能夠進一步探索系列中講解更深入的書籍，邁向真正精通 JavaScript 之道。

 

在本篇中，你會：

■ 學到必要的程式設計構建組塊，包括運算子、型別、變數、條件式、迴圈以及函式

■ 熟悉 JavaScript 的核心機制，例如值、函式 closures、this以及原型

■ 對本系列中其他書籍有個概觀，並且知道為何理解 JavaScript 的「所有」部分是很重要的

 

■ 型別與文法篇

 

不管你有多少的 JavaScript 使用經驗，很有可能你還是沒有完整地了解這個語言。作為《你所不知道的 JS》系列的一部分，這本簡明的指南會相當深入地探討 JavaScript 的型別，介紹型別強制轉型的問題、說明型別為何如此運作，並展示如何善用這些功能。

 

《型別與文法篇》會深入到此語言較為棘手的部分，也就是許多 JavaScript 程式設計師會單純避開或假設它們不存在的那些部分(像是型別)。裝備了這些知識後，你就能真正精通 JavaScript。

 

在本篇中，你會：

■ 熟悉 JavaScript 的七個型別：null、undefined、boolean、number、string、object 與 symbol

■ 理解 JavaScript 獨特的陣列、字串與數字之特質為何可能讓你感到愉快也可能使你困惑

■ 學到原生功能如何提供包裹基本型別值的物件包裹器

■ 深入了解強制轉型的爭議，並知道為何這個功能在許多情況下都是有用的

■ 探索 JavaScript 語法中的各種細微之處，包括了述句、運算式與其它功能

 

本系列之補充資料(程式碼範例、練習等)可在此處下載：github.com/getify/You-Dont-Know-JS

 

<名人推薦>

 

「當你奮力去理解你的程式碼，就會創造出較好的作品，並能讓你更勝任工作。程式碼不再只是你的工作而已，它成為了你的技藝。這就是我喜愛《你所不知道的JS》的原因。」—Jenn Lukas，前端顧問

 

「本書以非常清晰的方式，帶你一觀那些複製貼上動作和 JavaScript 工具集沒辦法教你，也可能永遠不會教你的核心 JavaScript 基礎知識。」—David Walsh，Mozilla 資深 Web 開發人員

 

 

<作者簡介>

 

Kyle Simpson

 

Kyle Simpson 是來自德州奧斯汀的 Open Web 的傳道者，對 JavaScript 的所有東西都充滿熱情。他是一位作家、研討會講師、技術講者，以及 OSS 的貢獻者和領導者。

 

<目錄>

 

PART 1 導讀篇

Chapter1 程式設計簡介

Chapter2 JavaScript 入門

Chapter3 《你所不知道的JS》系列簡介

 

PART 2 型別與文法篇

Chapter4 型別

Chapter5 值

Chapter6 Natives

Chapter7 強制轉型

Chapter8 文法

 

Appendix A 混合環境的JavaScript

Appendix B 致謝",https://cf-assets2.tenlong.com.tw/products/images/000/091/184/medium/9789863479666.jpg?1525538572
為你自己學 Git,五倍紅寶石 高見龍,博碩文化,9789864342662,2017/11/29,"不管您的職業是不是工程師，只要你是電腦工作者每天或多或少都需要編輯、修改許多的檔案。



您怎麼樣備份您的檔案？您怎麼樣一眼就可以知道每次備份的差別？如果您跟其它同事一起共同檔案，不論是有心無意，萬一檔案被其它同事覆蓋掉了該怎麼救回來？



如果你在乎這些問題的答案，那使用「版本控制系統」就是一個很不錯的選擇。透過這樣的系統，可以清楚的記錄每個檔案是誰在什麼時候加進來、什麼時候被修改或刪除。Git 就是一種版本控制系統，也是目前業界最流行的版本控制系統，沒有之一。



人生不能重來，但 Git 可以隨時幫你救回來不小心修改或刪除的檔案。



簡單的說，Git 就像玩遊戲的時候可以儲存進度一樣。為了避免遊戲打輸了而損失裝備，又或是打倒頭目卻沒有掉落期望的裝備，你也許在每次要去執行任務之前之前記錄一下，在發生狀況的時候可以載入舊進度，再來挑戰一次。



若您平日的工作已有在使用 Git，本書大部份的內容應該相對的輕鬆；即使已經平日有在使用 Git，也可從本書學到一些「本來以為 Git 是這樣，但其實是那樣」的觀念。



本書內容：

- 常用 Git 指令介紹。

- 各種 Git 的常見問題及使用情境。

- 如何修改 Git 的歷史紀錄。

- 如何使用 GitHub 與其它人一起工作。

- 一般平常工作用不到但對觀念建立有幫助的冷知識。



    

    作者簡介
    
      五倍紅寶石 高見龍



雖非資訊本科系出身，但喜歡寫程式而且希望可以寫一輩子程式的電腦阿宅。



喜歡辦活動，是不少台灣大型技術研討會(如 PHPConf、WebConf、RubyConf Taiwan 等)及社群活動(Rails Girls Taipei、Taipei.rb)的發起人或主辦人。



喜愛與人分享，曾在許多國內、外技術研討會分享心得。四次創業經驗，雖然其中有兩次是失敗經驗但仍樂此不疲。目前為五倍紅寶石共同創辦人及負責人。



- 20 年程式開發經驗

- 將近 10 年的教學經驗

- 在台灣推廣 Ruby 程式語言多年，在各大專院校廣為開課，學生已累積超過 1,000 人以上



Blog: http://kaochenlong.com

Facebook: https://www.facebook.com/eddiekao

Twitter: https://twitter.com/eddiekao

Github: https://github.com/kaochenlong

Email: eddie@5xruby.tw



封面插畫

陳曉菁，喜歡手作實踐一些小玩意，平常寫寫程式，偶爾弄弄設計煮煮飯，簡單來說就是有點手賤要找點事做，目前是五倍紅寶石的酒鬼，歡迎來礦坑乾杯。

    

    目錄大綱
    
      前言　寫在最前面 - 為你自己學Git ！

作者序



第1章：入門篇

1.1 什麼是Git？為什麼要學習它？

1.2 與其它版本控制系統的差異



第2章：環境安裝

2.1 安裝在 Windows 作業系統

2.2 安裝在Mac OSX 作業系統

2.3 安裝在Linux 作業系統

2.4 圖形化介面工具



第3章：終端機/命令提示字元

3.1 終端機及常用指令介紹

3.2 超簡明Vim操作介紹



第4章：設定Git

4.1 使用者設定

4.2 其它方便的設定



第5章：開始使用Git

5.1 新增、初始 Repository

5.2 把檔案交給Git 控管

5.3 工作區、暫存區與儲存庫

5.4 檢視紀錄

5.5 狀況題 如何在Git 裡刪除檔案或變更檔名？

5.6 狀況題 修改Commit 紀錄

5.7 狀況題 追加檔案到最近一次的Commit

5.8 狀況題 新增目錄？

5.9 狀況題 有些檔案我不想放在Git 裡面...

5.10 狀況題 檢視特定檔案的Commit 紀錄

5.11 狀況題 等等，這行程式誰寫的？

5.12 狀況題 啊！不小心把檔案或目錄刪掉了…

5.13 狀況題 剛才的Commit 後悔了，想要拆掉重做…

5.14 狀況題 不小心使用hard 模式Reset 了某個Commit，救得回來嗎？

5.15 冷知識 HEAD 是什麼東西？

5.16 狀況題 可以只Commit 一個檔案的部份的內容嗎?

5.17 冷知識 那個長得很像亂碼SHA-1 是怎麼算出來的？

5.18 超冷知識 在.git 目錄裡有什麼東西？ Part 1

5.19 超冷知識 在.git 目錄裡有什麼東西？ Part 2



第6章：使用分支

6.1 為什麼要使用分支？

6.2 開始使用分支

6.3 對分支的誤解

6.4 合併分支

6.5 狀況題 為什麼我的分支都沒有「小耳朵」？

6.6 常見問題合併過的分支要留著嗎？

6.7 狀況題 不小心把還沒合併的分支砍掉了，救得回來嗎？

6.8 另一種合併方式（使用 rebase）

6.9 合併發生衝突了，怎麼辦？

6.10 冷知識 為什麼大家都說在 Git 開分支「很便宜」？

6.11 冷知識 Git 怎麼知道現在是在哪一個分支？

6.12 狀況題 我可以從過去的某個Commit 再長一個新的分支出來嗎？



第7章：修改歷史紀錄

7.1 狀況題 修改歷史訊息

7.2 狀況題 把多個 Commit 合併成一個Commit

7.3 狀況題 把一個 Commit 拆解成多個Commit

7.4 狀況題 想要在某些 Commit 之間再加新的Commit

7.5 狀況題 想要刪除某幾個 Commit 或是調整Commit 的順序

7.6 Reset、Revert 跟 Rebase 指令有什麼差別？



第8章：標籤

8.1 使用標籤

8.2 冷知識 標籤跟分支有什麼不一樣？



第9章：其它常見狀況題與冷知識

9.1 狀況題 手邊的工作做到一半，臨時要切換到別的任務

9.2 狀況題 不小心把帳號密碼放在Git 裡了，想把它刪掉…

9.3 冷知識 怎麼樣把檔案真正的從 Git 裡移掉？

9.4 冷知識 你知道Git 有資源回收機制嗎？

9.5 冷知識 斷頭（detached HEAD）是怎麼一回事？



第10章：遠端共同協作 - 使用 GitHub

10.1 GitHub 是什麼？

10.2 Push 上傳到 GitHub

10.3 Pull 下載更新

10.4 狀況題 怎麼有時候推不上去...

10.5 從伺服器上取得 Repository

10.6 常見問題Clone 跟 Pull 指令有什麼不一樣？

10.7 與其它開發者的互動 - 使用 Pull Request（PR）

10.8 狀況題 怎麼跟上當初 fork 專案的進度？

10.9 狀況題 怎麼刪除遠端的分支？

10.10 狀況題 聽說 git push -f 這個指令很可怕，什麼情況可以使用它呢？

10.11 使用GitHub 免費製作個人網站

10.12 冷知識 一定要有GitHub 才能得到別人更新的檔案嗎？



第11章：使用Git flow

11.1 Git Flow 是什麼？為什麼需要這種東西？",https://cf-assets2.tenlong.com.tw/products/images/000/111/681/medium/9789864342662.jpg?1525540373
深入淺出設計模式 (Head First Design Patterns),"Elisabeth Freeman, Eric Freeman, Bert Bates, Kathy Sierra 著、蔡學鏞 譯",歐萊禮,9789867794529,2005/9/29,"你不想重新發明輪子（或者更差的是，沒有充氣的輪子），所以你從設計模式中尋求協助－設計模式是過去人們面對軟體設計問題所學來的經驗。

有了設計模式，你就可以利用其他人經驗和實務的精華，省下的時間可以用在...其他的事情上，像是：更有挑戰性的事情、更複雜的事情、 更有趣的事情。

你想要學習：

事關緊要的模式

何時使用某個模式，為何使用該模式

如何在你自己的設計中馬上採用這些模式

何時不該使用模式（如何避免對模式過度狂熱）

某個模式是依據哪些OO設計守則而設計出來的

更重要的是，你想在學習設計模式的過程中，不會感覺到昏昏欲睡。

如果你曾經讀過任何一本一頭栽進系列書籍， 你就會知道你能夠從本書中得到的是：透過豐富的視覺效果讓你的大腦充分地運作。

本書的編寫運用許多最新的研究， 包括神經生物學、認知科學、以及學習理論，這使得這本書能夠將這些設計模式深深地烙印在你的腦海中，不容易被遺忘。

你將會更擅長於解決軟體設計的問題，並能夠和你的團隊成員用模式的術語來溝通。


        

    

    作者簡介
    
      Eric Freeman以及Elisabeth Freeman是作家、講師、以及技術顧問。原本在迪士尼公司領導數位媒體以及網際網路的開發， 後來他們將這些經驗採用在他們自己的媒體中，包括這本書中。Eric具有耶魯大學的電腦科學博士學位，Elisbath具有耶魯大學 的電腦科學碩士學位。

Kathy Sierra（javaranch.com的創始者） 以及Bert Bates是暢銷的一頭栽進系列書籍的創立者，也是Sun公司Java開發者認証的規劃者。

「我昨天收到了這本書，然後就開始閱讀...我簡直欲罷不能。這簡直酷斃了！內容相當有趣，但是涵蓋層面很廣，而且切中要點，這本書讓我感到印象深刻。」

Erich Gamma

IBM頂級工程師、《Design Patterns》作者之一



「我覺得像是剛剛把一本數千鎊重的書高舉過頭頂。」

Ward Cunningham

Wiki發明者、Hillside Group創始人



「本書趨近完美，因為它在提供專業知識的同時，仍然具有相當高的可讀性。口吻權威、閱讀輕鬆。」

David Gelernter

耶魯大學資訊科學系教授



「這是我閱讀過最有趣且最聰明的軟體設計書籍。」

Aaron LaBerge

ESPN.com技術副主席

    

    目錄大綱
    
      目錄

序

1 介紹模式設計

模擬鴨子

喬依想到繼承

利用介面如何？

軟體開發的一個不變真理

分開變動和不會變動的部分

設計鴨子的行為

測試鴨子的程式

動態地設定行為

行為封裝的大局觀

『有一個』可能比『是一個』更好

策略模式

共通模式詞彙的威力

我如何使用設計模式？

設計箱內的工具

習題解答

2 觀察者模式

氣象監測系統

認識觀察者模式

出版者 + 訂閱者 = 觀察者模式

五分鐘短劇：值得觀察的主題

定義觀察者模式

鬆綁的威力

設計氣象站

實踐氣象站

使用 Java 內建的觀察者模式

java.util.Observable 的黑暗面

設計箱內的工具

習題解答

3 裝飾者模式

歡迎來到星巴茲咖啡

開放關閉守則

認識裝飾者模式

以裝飾者建構飲料訂單

定義裝飾者模式

裝飾飲料

寫下星巴茲的程式碼

真實世界的裝飾者：Java I/O

設計自己的 Java I/O 裝飾者

設計箱內的工具

習題解答

4 工廠模式

當看到『new』，就要聯想到『具象』

物件村比薩

封裝建立物件的程式碼

建立一個簡單的比薩工廠

定義簡單工廠

給比薩店使用的框架

允許次類別做決定

讓我們開一家比薩店吧！

宣告一個工廠方法

會見工廠方法模式

平行的類別階層

定義工廠方法模式

一個很依賴的比薩店

看看物件的相依性

顛覆依賴守則

再回到比薩店...

原料家族

建立原料工廠

到底做了什麼事？（抽象工廠）

幕後花絮

定義抽象工廠模式

比較工廠方法以及抽象工廠

設計箱內的工具

習題解答

5 獨體模式

獨一無二

小小獨體

剖析經典的獨體模式設計

獨體的告解

巧克力工廠

定義獨體模式

Hershey（賓州廠），我們遇到麻煩了...

化身為 JVM

處理多執行緒

獨體的 Q&A

設計箱內的工具

習題解答

6 命令模式

巴斯特家電自動化公司

遙控器

看一下廠商的類別

同時，回到餐廳...

研究餐廳的互動過程

物件村餐廳的角色以及責任

從餐廳到命令模式

第一個命令物件

定義命令模式

命令模式與遙控器

實踐遙控器

逐步測試遙控器

寫文件的時刻到了

使用狀態實踐復原

每個遙控器都需具備集合形式！

使用巨集命令

命令模式的更多用途：佇列請求

命令模式的更多用途：日誌請求

設計箱內的工具

習題解答

7 轉接器模式與表象模式

我們周遭的轉接器

OO 轉接器

解釋轉接器模式

定義轉接器模式

物件和類別的轉接器

今晚的話題：物件轉接器以及類別轉接器

真實世界的轉接器

將列舉轉接到重複器

今晚的話題：裝飾者模式以及轉接器模式

甜蜜的家庭劇院

燈光，相機，表象！

建構家庭劇院表象

定義表象模式

「認識極少化」守則

設計箱內的工具

習題解答

8 樣板方法模式

急就章寫幾個咖啡和茶的類別

抽取咖啡和茶

更進一步的設計

將 prepareRecipe() 抽象化

我們做了什麼事？

認識樣板方法

走，泡茶去

樣板方法帶給我們什麼？

定義樣板方法模式

再靠近一點

對樣板方法進行掛鉤...

使用掛鉤

執行測試程式

好萊塢守則

好萊塢守則以及樣板方法

荒野中的樣板方法

用樣板方法排序

來排序鴨子吧

比較鴨子

觀察排序的內部運作

寫一個 Swing 的視窗程式

Applet

今晚的話題：樣板方法以及策略方法

設計箱內的工具

習題解答

9 反覆器與合成模式

物件村餐廳和煎餅屋合併

比較菜單的實踐方式

可以封裝重複的動作嗎？

認識反覆器模式

在餐廳菜單中加入一個反覆器

鳥瞰目前的設計

利用 java.util.Iterator 改寫程式

這為我們帶來什麼好處？

定義反覆器模式

單一責任

反覆器與聚合

Java 5 的反覆器以及聚合

正當我們認為這很安全的時候...

定義合成模式

利用合成設計菜單

實踐合成菜單

倒敘到反覆器

空反覆器

反覆器和合成湊在一起的魔力...

設計箱內的工具

習題解答

10 狀態模式

如何實踐狀態？（辦公室隔間對話）

狀態機的要點

狀態機程式碼第一版

該來的躲不掉...需求改變！

混亂的狀態...

定義狀態介面與類別

實踐我們的狀態類別

重新改造糖果機

定義狀態模式

狀態 vs 策略模式

狀態精神檢查

我們差點兒忘了！

設計箱內的工具

習題解答

11 代理人模式

監控糖果機

遠端代理人的角色

RMI 巡禮

糖果機遠端代理人

代理人幕後花絮

定義代理人模式

準備虛擬代理人

虛擬代理人設計 CD 封面程式

圖像代理人的幕後花絮

使用 Java API 的代理人

五分鐘短劇：保護主角

建立動態代理人

代理人動物園

設計箱內的工具

習題解答

12 複合模式

複合模式

鴨子重出江湖

加入一個轉接器

加入一個裝飾者

加入一個工廠

加入一個合成，一個反覆器

加入一個觀察者

模式總結

從鴨子的角度看類別圖

Model-View-Controller 之歌

設計模式是 MVC 的關鍵

戴上模式的有色眼鏡看 MVC

使用 MVC 控制節拍...

Model

View

Controller

探索策略模式

Model 的轉接

我們已經準備好進行心臟控制器

將 MVC 運用在 Web

設計模式與 Model

設計箱內的工具

習題解答

13 與設計模式相處

物件村指南

定義設計模式

更仔細地觀察設計模式的定義

願力量與你同在

模式型錄

發掘自己的模式

想當一個設計模式的作家嗎？

組織設計模式

用模式思考

在模式的心智

別忘了共通語彙的威力

共通語彙的五種方式

和四人幫一同巡迴物件村

你的旅途剛開始...

其他設計模式的資源

模式動物園

以反模式殲滅惡勢力

設計箱內的工具

離開物件村...

14 附錄：剩下的模式

橋樑模式

建立者模式

責任鏈模式

蠅量級模式

翻譯者模式

居間協調者模式

助記物模式

雛形模式

參觀者模式

索引",https://cf-assets1.tenlong.com.tw/images/32306/medium/9867794524.jpg
高品質軟體文件｜持續分享技術與知識 (Living Documentation: Continuous Knowledge Sharing by Design),"Cyrille Martraire 著
          楊尊一 譯",碁峰資訊,9789865024871,2020/7/9,"有效製作軟體文件



“真希望這本書20年前就出版，可以省下我很多時間”

-Woody Zuill, Agile Guide與Mob Programming先驅



運用領域驅動設計(Domain-Driven Design)方法建立文件檔，於軟體開發生命週期中創造最大價值



軟體文件可以生動、動態，並在實質上幫助你創建出更好的軟體。本書為開發者、架構設計師和軟體專業工作者而寫，展示如何在設計與開發過程中建立隨之演進的文件。



透過模式解說、清晰圖示與具體範例，引領您應用良好的製作工具與自動化功能，在最低成本下大幅提升文件的價值。不論任何領域、語言或技術，您都無需在運行軟體和詳盡的高品質文件之間做取捨，讓魚與熊掌都能兼得。



‧擷取與增強知識，讓它發揮實質效用

‧自動建立隨著知識變化演進的文件與圖表

‧使用開發工具重構文件

‧利用文件改善軟體設計

‧在原有與新環境中引入有效文件



    

    作者簡介
    
      Cyrille Martraire 是Arolla的CTO、共同創辦人、合夥人，擁有20年的軟體設計經驗。曾經參與及領導許多專案，大多數為金融財務方面。他建立Paris Sftware Crafters社群，經常在國際性研討會發表演說，對軟體設計的各個方面充滿熱情。

    

    目錄大綱
    
      Chapter 1 重新思考文件

Chapter 2 行為驅動開發即為實例規格

Chapter 3 知識利用

Chapter 4 知識增強

Chapter 5 有效整理展示：識別權威知識

Chapter 6 文件自動化

Chapter 7 執行即為文件

Chapter 8 可重構文件製作

Chapter 9 穩定的文件

Chapter 10 避免傳統文件

Chapter 11 超越文件：活設計

Chapter 12 活架構文件

Chapter 13 新環境導入活文件

Chapter 14 製作舊應用程式的文件

Chapter 15 額外收錄：醒目的文件

索引",https://cf-assets2.tenlong.com.tw/products/images/000/149/864/medium/9789865024871.jpg?1593833124
"依賴注入：原理、實作與設計模式 (Dependency Injection: Principles, Practices, Patterns, 2/e)","Steven van Deursen, Mark Seemann 著
          錢亞宏 譯",博碩文化,9789864344987,2020/7/30,"【名家名著】 21



想要讓程式更具彈性、更容易測試、更接近clean code，

你需要降低元件之間的耦合度，

依賴注入將是你強而有力的工具！

它是組合取代繼承的重要實踐！



Odd-e Taiwan 敏捷技術教練 陳仕傑（91）專文推薦



名人盛讚

「我非常推薦與認同書裡的脈絡安排與學習順序，其實戰性毋庸置疑。」

──Odd-e Taiwan 敏捷技術教練：陳仕傑（91）



「實用的範例內容讓原本虛無縹渺的概念具體化了... 作得太好了。」

 

──Glenn Block，來自Microsoft



「內容豐富、思路清晰、指引明確、而且... 永久受用。」

 

──David Barkol，來自Neudesic



「這本書正是所有.NET 軟體設計師需要的。」

──Paul Grebenc，來自PCA Services



「這本書把那些原本雲裡霧裡的模糊觀念全都撥雲見日。」

──Rama Krishna，來自3C Software



「跟隨這本書的獨特思維，深入學習現代軟體開發的實務原則。極度推薦！」

──Darren Neimke，來自HomeStart Finance



「對依賴注入議題所需要知道的一切都在這本書裡了，保證物超所值！」

──Jonas Bandi，來自TechTalk



「想了解依賴注入必讀之書。」

──Braj Panda，來自Capgemini India



「這本書是你在.NET 開發框架上的依賴注入架構指引經典。」

──Doug Ferguson，來自Improving Enterprises



「要讓軟體保持彈性應付多變的需求，就必須降低元件之間的依賴性。如果能夠把依賴性在使用時才注入，就能保持軟體發展的最大彈性，而這就是依賴注入。依賴注入是一項成果，應用這項成果最多的則是各式各樣的框架（尤其是Web框架），例如.NET Core、Spring Boot。依賴注入活用了眾多的設計模式，而這些設計模式則充分利用了OOP的多型來進行軟體的OOD。很少有作者可以把依賴注入寫得如此易學與完整，所以這本書毫無疑問成為該領域不可或缺的大部頭書籍，博碩文化引進本書翻譯為繁體中文，期待藉由這本書能大幅提升台灣程式設計師的軟體設計思維。」

──博碩文化 總編輯 陳錦輝



----



要降低軟體元件之間的緊耦合程度，最好的方法便是引入「依賴注入（DI，Dependency Injection）」技術。在鬆耦合架構下，不用再自己手動指定資料庫連線時要使用的驅動，而是透過一個可被替換的第三方元件進行。本書將說明如何在ASP.NET Core這類應用程式框架下，利用DI架構幫助你管理軟體中的變更與複雜度議題。



《依賴注入-原理、實作、與設計模式》的前身是來自於暢銷經典書籍《Dependency Injection in .NET》一書的重編與增量版本。本書會從基礎開始從頭介紹何謂DI架構，並且在說明打造具備鬆耦合與完善架構的應用程式上，會遇到哪些設計模式、應避免的反模式、並且對此提出可供參考的範例內容。這些以C#程式語言寫成的範例，具備完善的說明註解並搭配圖表，可以幫助讀者在以現代物件導向程式語言以及支援DI架構的容器函式庫進行開發時，順暢無誤地遵循實務原則與設計模式。



本書內容

❖教你如何將既有程式碼，重構為鬆耦合架構

❖以標準物件導向程式語言觀點來實作的DI技巧

❖與標準.NET框架整合的教學內容

❖將舊版範例內容重新編寫，以.NET Core框架來示範DI架構



本書適合那些對物件導向程式語言已有一定熟悉的讀者。



延伸閱讀：

《無瑕的程式碼》系列叢書

《單元測試的藝術》

《領域驅動設計》

《Working Effectively with Legacy Code中文版》



    

    作者簡介
    
      Steven van Deursen

自2002年起，便於荷蘭從事自由聘僱的.NET開發者與軟體架構設計師至今。生活於荷蘭奈美亨市，不論是基於興趣或出於謀生，他都很享受編寫程式的生涯。但除了編寫程式之外，Steven 也會透過武術鍛鍊身心、出門享受美食、並且還是醇美威士忌的愛好者。

Mark Seemann

居住於丹麥哥本哈根市，是一名程式設計師、軟體架構設計師、以及講師。自1995年起他便從事軟體業界至今，而後於2003年起投身於TDD測試驅動開發推動，而後在Microsoft中任職顧問、開發者、以及架構設計師有六年職涯。Mark如今在哥本哈根持續發揮其專業進行軟體開發。他熱愛閱讀、繪畫、彈奏吉他、品嚐美酒與美食。

    

    目錄大綱
    
      關鍵字關係圖

推薦序

來自本書第一版的讀者回饋

前言

致謝

關於本書

推薦對象

本書概要

格式說明與檔案下載

線上討論區

作者簡介

PART I 朝著依賴注入邁進

Chapter 1 依賴注入的基礎：定義、理由與實作方法

1.1 編寫易於維護的程式碼

1.1.1 對依賴注入的常見誤解

1.1.2 為何需要依賴注入

1.2 初步的範例：Hello DI!

1.2.1 Hello DI!的程式碼

1.2.2 依賴注入能帶來的好處

1.3 適合與不適合注入的對象

1.3.1 穩定依賴性

1.3.2 不穩定依賴性

1.4 依賴注入在軟體中牽涉的範疇

1.4.1 物件的組合

1.4.2 物件的生命週期

1.4.3 物件的攔截

1.4.4 三種不同面向上的 DI

1.5 小結

重點回顧

Chapter 2 緊耦合架構

2.1 先寫一份緊耦合架構出來

2.1.1 以 Mary Rowan 為例

2.1.2 建立資料層

2.1.3 建立業務層

2.1.4 建立展示層

2.2 評估緊耦合架構應用程式

2.2.1 依賴關係圖

2.2.2 對可組合性的評估

2.3 缺乏可組合性的問題根源

2.3.1 對依賴關係圖的剖析

2.3.2 對資料層的剖析

2.3.3 其他需要關注的問題

2.4 小結

重點回顧

Chapter 3 鬆耦合架構

3.1 重新打造電商網站應用程式

3.1.1 打造更具可維護性的展示層

3.1.2 打造獨立於依賴的業務層

3.1.3 打造新的資料層

3.1.4 配合 ASP.NET 核心所實作的 IUserContext

3.1.5 在「組合根」組裝你的應用程式

3.2 分析鬆耦合架構應用程式

3.2.1 元件之間的互動關係

3.2.2 分析新的依賴關係圖

3.3 小結

重點回顧

PART II 分門別類

Chapter 4 DI 設計模式

4.1 組合根

4.1.1 組合根的運作方式

4.1.2 在組合根上運用 DI 容器

4.1.3 範例：純 DI 架構的組合根

4.1.4 依賴數量的爆增表象

4.2 建構子注入

4.2.1 建構子注入的運作方式

4.2.2 建構子注入的使用時機

4.2.3 建構子注入的使用實例

4.2.4 範例：在主打商品清單加上貨幣轉換功能

4.2.5 結論是...

4.3 方法注入

4.3.1 方法注入的運作方式

4.3.2 方法注入的使用時機

4.3.3 方法注入的使用實例

4.3.4 範例：在 Product 資料實體加入貨幣轉換

4.4 屬性注入

4.4.1 屬性注入的運作方式

4.4.2 屬性注入的使用時機

4.4.3 屬性注入的使用實例

4.4.4 範例：利用屬性注入來擴展可重複利用的函式庫

4.5 如何選擇設計模式

4.6 小結

重點回顧

Chapter 5 DI 反模式

5.1 控制狂

5.1.1 範例：建立依賴關係時的控制狂

5.1.2 範例：工廠模式下的控制狂

5.1.3 範例：對建構子多載時的控制狂

5.1.4 對控制狂反模式的反思

5.2 服務定位

5.2.1 範例：ProductService 中的服務定位

5.2.2 對服務定位反模式的反思

5.3 環境物件

5.3.1 範例：查詢時間用的環境物件

5.3.2 範例：紀錄時用的環境物件

5.3.3 對環境物件反模式的反思

5.4 限制性建構

5.4.1 範例：ProductRepository 的晚期繫結

5.4.2 對限制性建構反模式的反思

5.5 小結

重點回顧

Chapter 6 程式異樣

6.1 建構子過度注入的程式異樣

6.1.1 辨識建構子過度注入

6.1.2 將建構子過度注入重構為前台模式

6.1.3 將建構子過度注入重構為業務事件

6.2 抽象工廠的濫用

6.2.1 為了生命週期問題而濫用了抽象工廠

6.2.2 為了在執行期決定依賴對象而濫用抽象工廠

6.3 循環依賴

6.3.1 範例：違反 SRP 原則造成的循環依賴

6.3.2 分析 Mary 的依賴循環

6.3.3 解決違反 SRP 問題以重構循環依賴

6.3.4 打破依賴循環的策略

6.3.5 最終手段：以屬性注入來打破依賴的循環

6.4 小結

重點回顧

PART III 單純 DI 架構

Chapter 7 應用程式的物件組合

7.1 指令列介面應用程式的物件組合

7.1.1 範例：以 UpdateCurrency 程式來更新貨幣匯率

7.1.2 建立 UpdateCurrency 程式的組合根

7.1.3 在 CreateCurrencyParser 中組合物件關聯

7.1.4 剖析 UpdateCurrency 的架構層

7.2 通用 Windows 平台應用程式的物件組合

7.2.1 UWP 應用程式的物件組合

7.2.2 範例：建立一個商品管理 app

7.2.3 在UWP 應用程式中實作組合根

7.3 ASP.NET 核心 MVC 框架應用程式的物件組合

7.3.1 自訂一個 Controller 啟動器

7.3.2 在單純DI 架構建立自訂的中介層

7.4 小結

重點回顧

Chapter 8 物件生命週期

8.1 管理依賴對象的生命週期

8.1.1 生命週期的管理

8.1.2 在單純 DI 架構下管理生命週期

8.2 處理依賴的廢棄問題

8.2.1 處理可廢棄依賴對象

8.2.2 管理可廢棄的依賴對象

8.3 生命週期型態彙整

8.3.1 單例型態

8.3.2 一次性型態

8.3.3 作用域型態

8.4 不良生命週期型態

8.4.1 被綁架的依賴

8.4.2 抽象漏洞造成的生命週期型態資訊洩漏

8.4.3 與執行緒生命週期綁定的物件會造成並行上的問題

8.5 小結

重點回顧

Chapter 9 介入攔截

9.1 關於攔截

9.1.1 裝飾者設計模式

9.1.2 範例：以裝飾者模式實作稽核機制

9.2 實作橫切關切點

9.2.1 以攔截實作斷路器設計模式

9.2.2 在回報例外錯誤時利用裝飾者模式

9.2.3 在保護機敏功能避免非法存取時利用裝飾者模式

9.3 小結

重點回顧

Chapter 10 設計面上的剖面導向程式設計

10.1 何謂剖面導向程式設計

10.2 關於 SOLID 五原則

10.2.1 單一職責原則（SRP）

10.2.2 開放封閉原則（OCP）

10.2.3 里氏替換原則（LSP）

10.2.4 介面切離原則（ISP）

10.2.5 依賴反轉原則（DIP）

10.2.6 攔截與 SOLID 五原則之間的關係

10.3 透過 SOLID 五原則達成AOP

10.3.1 範例：以 IProductService 實作商品相關功能項目

10.3.2 以 SOLID 五原則的觀點分析 IProductService

10.3.3 遵循 SOLID 五原則改善設計

10.3.4 添加更多橫切關切點機制

10.3.5 本章結語

10.4 小結

重點回顧

Chapter 11 以工具實作的剖面導向程式設計

11.1 動態攔截

11.1.1 範例：以 Castle Dynamic Proxy 實作攔截

11.1.2 對動態攔截的分析

11.2 後編譯織入

11.2.1 範例：利用後編譯織入實作交易階段剖面

11.2.2 對後編譯織入的分析

11.3 小結

重點回顧

PART IV DI 容器技術

Chapter 12 DI 容器

12.1 關於 DI 容器技術

12.1.1 關於容器技術的解析 API

12.1.2 自動裝配

12.1.3 範例：實作自動裝配功能的簡易 DI 容器

12.2 設定 DI 容器

12.2.1 以設定檔來設定容器

12.2.2 以程式化設定來設定容器

12.2.3 以自動註冊功能達到規範先於設定的容器設定方式

12.2.4 不同設定方式之間的搭配

12.3 採用 DI 容器技術的時機

12.3.1 引入第三方函式庫的成本與風險

12.3.2 單純 DI 架構能有更快的回饋循環

12.3.3 採用 DI 容器技術的確切時機

12.4 小結

重點回顧

Chapter 13 DI 容器介紹：Autofac

13.1 介紹 Autofac

13.1.1 物件解析

13.1.2 對 ContainerBuilder 的設定

13.2 管理生命週期

13.2.1 設定物件作用域

13.2.2 釋放元件

13.3 以進階 API 執行註冊

13.3.1 設定基本型別的依賴關係

13.3.2 指定物件產生來源的註冊方式

13.4 多重註冊關係的處理方式

13.4.1 多個對映選項下的抉擇方式

13.4.2 對序列的裝配

13.4.3 裝飾元件的裝配

13.4.4 合成元件的裝配

13.5 小結

重點回顧

Chapter 14 DI 容器介紹：Simple Injector

14.1 介紹 Simple Injector

14.1.1 物件解析

14.1.2 對 Container 的設定

14.2 管理生命週期

14.2.1 設定生命週期型態

14.2.2 釋放元件

14.2.3 作用域的全域管理

14.2.4 對常見生命週期議題的偵測分析

14.3 以進階 API 執行註冊

14.3.1 設定基本型別的依賴關係

14.3.2 將基本型別依賴轉為參數物件

14.3.3 指定物件產生來源的註冊方式

14.4 多重註冊關係的處理方式

14.4.1 多個對映選項下的抉擇方式

14.4.2 對序列的裝配

14.4.3 裝飾元件的裝配

14.4.4 合成元件的裝配

14.4.5 其實有著串流內在的序列

14.5 小結

重點回顧

Chapter 15 DI 容器介紹：Microsoft.Extensions.DependencyInjection

15.1 介紹Microsoft.Extensions.DependencyInjection

15.1.1 物件解析

15.1.2 對 ServiceCollection 的設定

15.2 管理生命週期

15.2.1 設定生命週期型態

15.2.2 釋放元件

15.3 以進階 API 執行註冊

15.3.1 設定基本型別的依賴關係

15.3.2 將基本型別依賴轉為參數物件

15.3.3 指定物件產生來源的註冊方式

15.4 多重註冊關係的處理方式

15.4.1 多個對映選項下的抉擇方式

15.4.2 對序列的裝配

15.4.3 裝飾元件的裝配

15.4.4 合成元件的裝配

15.5 小結

重點回顧

術語表

參考文獻",https://cf-assets2.tenlong.com.tw/products/images/000/150/468/medium/MP11901.jpg?1594973390
從 Hooks 開始，讓你的網頁 React 起來（iT邦幫忙鐵人賽系列書）,陳柏融　著,博碩文化,9789864345083,2020/9/14,"內容簡介



本書內容改編自第 11 屆 iT 邦幫忙鐵人賽，Modern Web 組優選網路系列文章──《從 Hooks 開始，讓你的網頁 React 起來》。



☛ 第一本整合線下內容與線上社群的 React 實體書，再也不怕沒人解惑 (https://www.facebook.com/groups/274607427104369/)

☛ 從 Hooks 開始上手 React，大幅降低陡峭的 React 學習曲線

☛ 透過專案實作到最終發布上線，讓所有人都可以看到你的作品



Q：買書後碰到問題卻沒人問怎麼辦？

A：第一本同時整合線下文字與線上社群的 React 實體書籍，不只是一本書，更提供專業線上討論與協助，免除讀者在學習新技術上的焦慮與不安！



Q：沒學過 React 可以直接從 Hooks 開始嗎？

A：從 Hooks 開始入手 React，可大幅降低過去 React 陡峭的學習曲線！



Q：學過 React 語法卻不知如何實作成專案作品？

A：以專案實作帶你一步步熟悉 React 各種語法，並將作品發布至雲端，讓所有人都能共享使用！





專業推薦



如果你希望透過學習 React 這個目前業界非常流行的框架，來提升職涯發展潛力，那這本書再適合你不過！本書是 PJ 為你設計的一趟學習旅程。除了耐心指引你步驟之外，更會告訴你各種「為什麼」，讓你對 React 背後的邏輯與思維有充分瞭解。更重要的是，你將體會到，「學習」，其實可以很不一樣。

Bernard Chan | 陳治平

前 Yahoo! 亞太區產品總監、ALPHA Camp 校長



本書不是一本工具書，而是作者在腦中思考的過程，是一本教你思考的書，以邏輯思考的走向代替一般指令式的教學，這樣的內容才是正確的教學方式，學習到的並不只是技術，而是在實務過程中所累積下來的經驗。

Howard | 吳展瑋

台南「好想工作室」創辦人、台灣口罩地圖、動森揪團工具開發者





適用讀者



✎ 學過 JavaScript，想要開始上手前端框架的初學者

✎ 想要成為前端工程師的網頁開發求職者

✎ 用過 Vue 等其他前端框架，想要體驗 React 框架的開發者





本書的誕生主要源自於 iT 邦幫忙鐵人賽，筆者在學習的過程中受益非常多，因此決定將本書首刷版稅回饋iT邦幫忙鐵人賽，鼓勵台灣IT社群互助合作且彼此樂於分享的精神。



    

    作者簡介
    
      陳柏融 (pjchender)



現任 Jubo 智齡科技軟體工程師，曾於 UXTesting, Inc. 擔任前端工程師，同時擔任 ALPHA Camp 講師與學生導師，熟悉 React、Vue 前端框架以及 Chrome Extension 開發。

對資訊科技充滿熱情， 喜歡學習Know-How，致力於透過資訊科技，帶給人們更幸福與便利的生活。同時經營 FB「PJCHENder 網頁前端資源站」粉絲專頁，透過內容的撰寫與知識分享，減少初學者在學習新技術上的焦慮與不安。

    

    目錄大綱
    
      01 React 中一定會用到的JavaScript 語法

1-1 統一開發環境- 註冊 CodePen 帳號

1-2 JavaScript 語法小測試與免費學習資源

1-3 樣板字面值（Template literals ／ Template strings）

1-4 箭頭函式（arrow functions）

1-5 解構賦值和物件屬性名稱縮寫

1-6 展開語法和其餘語法

1-7 模組的匯出與匯入

1-8 這些語法全都要會才能往下看嗎



02 React Hooks 起來：useState 與JSX 的使用

2-1 在沒有 React 以前…，用原生 JavaScript 做一個簡單的計數器

2-2 把 HTML 寫在 JavaScript 中！？— JSX 的概念

2-3 在 JSX 中帶入變數與表達式

2-4 將計數器改用 JSX 來寫

2-5 在 JSX 中套用 CSS 樣式

2-6 建立第一個 React 元件

2-7 與使用者互動 - React 中的事件處理

2-8 React 元件中的資料- useState 的使用

2-9 條件轉譯的使用

2-10 動態新增 CSS 樣式來隱藏 HTML 元素

2-11 事件處理器的重構

2-12 JSX 中迴圈的使用

2-13 JSX 元素只能有一個最外層元素

2-14 React Hooks 不可這麼用



03 React 元件間的資料傳遞：props 的應用

3-1 網速傻傻分不清楚 Mbps? MB/s? 來寫個單位換算器吧

3-2 使用 Create React App 工具建立專案

3-3 建立網速單位轉換器的 UI

3-4 React 中表單的基本應用

3-5 React 元件的拆分

3-6 React 元件間的資料傳遞

3-7 子層元件如何修改父層元件的資料狀態

3-8 使用 React FontAwesome



04 在 JavaScript 中撰寫 CSS 樣式

4-1 「台灣好天氣」 App 專案說明

4-2 認識專案資料夾結構與檔案下載

4-3 用 JavaScript 寫 CSS!? CSS in JS 的使用

4-4 使用 emotion 完成「台灣好天氣」 UI

4-5 為深色主題做準備 - 將 props 傳入 styled components 中

4-6 使用 emotion 實作深色主題

4-7 快速了解各元件的資料狀態 - React Developer Tools



05 串接 API：useEffect 與 useCallback

5-1 申請使用中央氣象局 API

5-2 將天氣資料呈現於畫面中 - useState 的使用

5-3 使用 fetch 拉取天氣觀測資料

5-4 頁面載入時就去請求資料 - useEffect 的基本使用

5-5 實作資料載入中的狀態

5-6 搭配 useEffect 拉取多支 API 回傳的資料

5-7 讓拉取 API 的函式與元件脫鉤

5-8 了解定義函式的適當位置以及 useCallback 的使用



06 進階資料處理與客製化 React Hooks

6-1 將天氣代碼轉換為天氣圖示

6-2 根據天氣代碼顯示天氣圖示 - useMemo 的使用

6-3 根據白天或夜晚顯示不同的主題配色

6-4 專案程式碼重構

6-5 建立自己的鉤子 - Custom Hooks



07 表單處理與頁面間的切換

7-1 處理不同支 API 需帶入不同地區名稱的問題

7-2 新增地區設定頁面

7-3 實作頁面間的切換功能

7-4 React 中的表單處理（Controlled vs Uncontrolled）

7-5 Uncontrolled components 和useRef 的使用

7-6 讓使用者可以自行設定地區

7-7 透過localStorage 保存使用者設定的地區



08 網站部署與未來學習方向

8-1 將「台灣好天氣」部署到 Github Pages

8-2 將網頁變成手機 Web App

8-3 那些相當重要但故意先不告訴你的地方",https://cf-assets2.tenlong.com.tw/products/images/000/152/373/medium/MP22021.jpg?1599472731
Python 自學聖經：從程式素人到開發強者的技術與實戰大全！(附影音/範例程式),鄧文淵 總監製/文淵閣工作室 編著,碁峰資訊,9789865024284,2020/3/11,"一本帶你入行！

系統化分章，全面跨入Python程式開發殿堂！

學業界指定Python講師，眾多讀者與程式教師選書第一指名團隊精心彙整！

六大領域、33個主題、近百種模組套件、1337個範例，

涵蓋語法入門，橫跨各大熱門技術與軟硬整合實戰應用。



給需要本書的人：

★不知道如何開始才能自學好Python的人

★有接觸過但又不想打掉重練的人

★老是寫不好Python程式的人

★想運用Python開發專案的人





掌握系統化的學習途徑

才能真正駕馭Python



Python廣泛應用於大數據、網路爬蟲、人工智慧、機器學習、物聯網等熱門領域，是一套直譯式、物件導向，功能強大的程式語言。具備簡潔的語法，擁有許多模組套件，跨平台且容易擴充，所以非常適合初學者學習，但沒有系統性與結構化的學習，只能一知半解，而胡亂網路爬文，也只會迷失在資訊叢林。



本書從Python自學角度出發，系統化的分章學習，全面涵蓋語法、模組套件、主題應用、軟硬整合，規劃出最好的學習曲線，縮短自學途徑，排除學習障礙，真正從初學入門到業界活用！



■完整詳實的程式入門：

從開發環境建置開始，由淺入深、循序漸進、完整且詳細的解說變數、運算、判斷式、迴圈、串列、元組、字典、函式與模組等語法觀念與實作。



■晉級專業的進階心法：

包括檔案管理、例外處理、物件導向開發、GUI圖形使用者介面、正規表達式等內容。



■應用廣泛的資料科學：

涵蓋網路爬蟲、資料儲存與讀取、資訊圖表化，以及Numpy與Pandas的完整學習。



■無所不在的網路應用：

Flask網路應用程式開發、Django資料庫網站架設，還有LINE Bot機器人整合應用。



■邁向未來的AI人工智慧：

具備機器學習入門、深度學習MLP、CNN與RNN的應用，以及演算法雲端利器Algorithmia、機器學習雲端平台Azure、NLP自然語言處理等能力。



■萬物可通的IoT物聯網：

從MicroPython程式實作、ESP8266運用、感測器應用、加入顯示裝置、使用Wi-Fi無線網路，到物聯網整合。



★超值學習資源：全書範例程式檔/Python物件導向程式開發影音教學

 

<序>

Python是一套直譯式、物件導向，功能強大的程式語言，廣泛應用於大數據、網路爬蟲、人工智慧、機器學習、物聯網等熱門領域。具備簡潔的語法，擁有許多模組套件，跨平台且容易擴充，所以非常適合初學者學習。

但有許多的人在學習時卻迷失在網路爬文、教學影片的知識叢林裡，沒有系統也沒有結構，花了太多時間也沒有成效。所以本書整理了多年教學、研習與專案開發的心得，並且爬梳了許多國內外學習Python的重點，帶領讀者由淺入深地領略Python程式在各個領域裡的開發應用。

在章節的規劃上，除了想要帶領學習者打好札實的語法基礎，並針對Python每個引發討論的主流重點深入探討，特別以基礎入門、進階學習、資料科學、網路應用、人工智慧與IoT物聯網為重點脈絡，打造沒有死角的學習體驗。

我們希望觀念與實作並進，因此要求團隊在內容編寫上要與時俱進、貼近實際開發現況；除了在各個階段詳盡地說明相關的語法內容外，還搭配了實用又有趣的範例，盼望能在自學的道路上拉你一把，規劃出最好的學習地圖，縮短學習途徑，提高學習成效。



    

    作者簡介
    
      一個致力於資訊圖書創作二十餘載的工作團隊，擅長用輕鬆詼諧的筆觸，深入淺出介紹難懂的 IT 技術，並以範例帶領讀者學習電腦應用的大小事。

我們不賣弄深奧的專有名辭，奮力堅持吸收新知的態度，誠懇地與讀者分享在學習路上的點點滴滴，讓軟體成為每個人改善生活應用、提昇工作效率的工具。

舉凡程式開發、文書處理、美工動畫、攝影修片、網頁製作，都是我們專注的重點，而不同領域有各自專業的作者組成，以進行書籍的規劃與編寫。一直以來，感謝許多讀者與學校老師的支持，選定為自修用書或授課教材。衷心期待能盡我們的心力，幫助每一位讀者燃燒心中的小宇宙，用學習的成果在自己的領域裡發光發熱！

我們期待自己能在每一本創作中注入快快樂樂的心情來分享， 也期待讀者能在這樣的氛圍下快快樂樂的學習。

官方網站：www.e-happy.com.tw

FB粉絲團：www.facebook.com/ehappytw

    

    目錄大綱
    
          

【基礎入門篇】

01 建置Python開發環境

1.1 建置Anaconda開發環境

1.2 Spyder編輯器

1.3 Jupyter Notebook編輯器

02 變數、運算及判斷式

2.1 變數與資料型別

2.2 運算式

2.3 判斷式

03 迴圈、串列與元組

3.1 迴圈與串列

3.2 進階串列與元組

04 字典的使用

4.1 字典基本操作

4.2 字典進階操作

05 函式與模組

5.1 自訂函式

5.2 數值函式

5.3 字串函式

5.4 亂數模組

【進階學習篇】

06 檔案系統的使用

6.1 檔案和目錄管理

6.2 檔案的讀寫

6.3 二進位檔案的讀寫

07 物件導向程式開發

7.1 類別與物件

7.2 類別封裝

7.3 類別繼承

7.4 多型

7.5 多重繼承

7.6 類別應用

7.7 建立Python專案

7.8 打造自己的模組

08 例外處理

8.1 例外處理

8.2 try…except常用例外錯誤表

8.3 捕捉多個例外

8.4 raise拋出例外

8.5 Traceback記錄字串

8.6 assert斷言

09 圖形使用者介面設計

9.1 Tkinter圖形使用者介面模組

9.2 排版方式

9.3 視窗區塊(Frame)

10 正規表達式

10.1 使用傳統程式設計方式搜尋

10.2 使用正規表達式

10.3 使用re模組建立隱含正規表達式物件

10.4 更豐富的搜尋方式

10.5 使用re.sub()取代字串

10.6 正規表達式實務上的應用

【資料科學篇】

11 數據資料的爬取

11.1 requests模組：讀取網站檔案

11.2 BeautifulSoup模組：網頁解析

11.3 Selenium模組：瀏覽器自動化操作

12 數據資料的儲存與讀取

12.1 csv資料的儲存與讀取

12.2 Excel資料儲存與讀取档

12.3 SQLite資料庫的操作

12.4 MySQL資料庫的操作

12.5 Google試算表的操作

13 數據資料視覺化

13.1 繪製折線圖：plot

13.2 繪製長條圖：bar

13.3 圓餅圖繪製：pie

13.4 設定圖表區：figure

13.5 在圖表區加入多張圖表：subplot、axes

13.6 專題：台灣股市股價走勢圖

14 Numpy與Pandas

14.1 Numpy陣列建立

14.2 Numpy陣列取值

14.3 Numpy的運算功能

14.4 Pandas Series

14.5 Pandas DataFrame的建立

14.6 DataFrame資料取值

14.7 DataFrame資料操作

14.8 Pandas資料存取

14.9 Pandas模組：繪圖應用

【網路應用篇】

15 Flask網站開發

15.1 基本Flask網站應用程式

15.2 使用模板

15.3 Template語言

15.4 以GET及POST傳送資料

16 Flask建立Web API及Heroku部署

16.1 建立縣市天氣資料Web API

16.2 部署Web API到Heroku

16.3 Web API應用：縣市天氣應用程式

17 Django網站開發

17.1 Django是什麼？

17.2 建立Django專案

17.3 視圖(view)與URL

17.4 視圖、模版與Template語言

17.5 以GET及POST傳送資料

18 Django資料庫連結與應用

18.1 Django資料庫

18.2 admin後台管理與ModelAdmin類別

18.3 資料庫查詢

18.4 資料庫管理

19 Django專案實戰及Heruko部署

19.1 Django新聞系統

19.2 部署Django專案到Heroku

20 LINE Bot申請設定及開發

20.1 Line開發者帳號

20.2 「鸚鵡」LINE Bot

21 LINE Bot進階應用與互動功能

21.1 圖文式LINE Bot

21.2 LINE Bot基本互動功能

22 LINE Bot專題實戰

22.1 取得發票中獎號碼

22.2 發票對獎LINE Bot

【人工智慧篇】

23 機器學習起點：多層感知器(MLP)

23.1 認識多層感知器(MLP)

23.2 Mnist資料集

23.3 訓練Mnist手寫數字圖片辨識模型

23.4 模型儲存與預測

24 深度學習重點：CNN及RNN

24.1 卷積神經網路(CNN)基本結構

24.2 卷積神經網路實戰：Mnist手寫數字圖片辨識

24.3 循環神經網路(RNN)基本結構

24.4 循環神經網路實戰：股價預測

25 演算法雲端利器：Algorithmia

25.1 認識Algorithmia平台

25.2 使用 Algorithmia演算法

26 機器學習雲端平台：Azure

26.1 電腦視覺資源

26.2 臉部辨識資源

26.3 文字語言翻譯資源

27 自然語言處理(NLP)

27.1 Jieba模組

27.2 文字雲

【IoT物聯網篇】

28 MicroPython與ESP8266

28.1 認識MicroPython與ESP8266

28.2 NodeMCU和WEMOS D1 mini控制板簡介

28.3 下載與燒錄MicroPython韌體

28.4 使用Thonny操控MicroPython控制板

28.5 使用麵包板連接LED電路

28.6 LED閃爍電路實作

29 MicroPython小專題實作

29.1 三色Led燈

29.2 按鈕開關

29.3 PWM電路

29.4 類比輸入

29.5 蜂鳴器

30 感測器應用：溫溼度與超音波感測器

30.1 Timer計時器

30.2 DHT11溫溼度感測器

30.3 超音波感測器

31 顯示裝置：LCD液晶顯示器

31.1 認識I2C

31.2 LCD顯示器

32 Wi-Fi無線網路

32.1 Wi-Fi無線網路

32.2 設定開機自動連線

32.3 讀取網站

32.4 建立網路通訊程式

32.5 連結網站伺服器

32.6 以HTTPS連結網站伺服器

33 物聯網應用

33.1 網站伺服器

33.2 傳送HTML網頁和圖片檔

33.3 遠端控制

33.4 從外部網路控制

33.5 ThingSpeak的物聯網應用",https://cf-assets2.tenlong.com.tw/products/images/000/145/833/medium/ACL058400.jpg?1583119918
"精通機器學習｜使用 Scikit-Learn , Keras 與 TensorFlow, 2/e (Hands-on Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2/e)","Aurélien Géron 著
          賴屹民 譯",歐萊禮,9789865024345,2020/4/8,"建立智慧系統的概念、工具與技術



“這是一本卓越的機器學習資源，有清楚、直觀的解說，以及大量實用技巧。”

—François Chollet

Keras作者，《Deep Learning with Python》作者



“這本書詳細介紹以神經網路解決問題的理論與做法；建議想要實際運用ML的人都要看這本書。”

—Pete Warden

TensorFlow行動主管



深度學習經歷了一系列的突破之後，已經大幅推動了整個機器學習領域，如今，即使你對這項技術一無所知，也可以使用簡單、高效的工具，製作可從資料中學習的程式。這本暢銷書新版本使用具體的案例、精簡的理論，以及Python準生產框架，協助你直觀地認識智慧系統的概念與建構工具。



你將學到可快速上手的技術，只要具備程式編寫經驗，就可以藉由各章的習題來學習。你可以在GitHub取得本書的所有程式碼，這些程式已經更新為TensorFlow 2，以及最新版的Scikit-Learn。



‧使用Scikit-Learn與pandas，透過端對端專案建立機器學習基礎

‧用TensorFlow 2建構與訓練許多神經網路架構，以進行分類及回歸

‧探索物體偵測、語義分割、專注機制、語言模型、GAN等

‧探索TensorFlow 2的官方高階API—Keras API

‧使用TensorFlow的Data API、分散式策略API、TF Transform及TF-Serving將TensorFlow模型生產化

‧在Google Cloud AI Platform或行動裝置上部署

‧瞭解降維、分群及異常檢測等非監督學習技術

‧用強化學習來建立自主學習代理程式(agent)，包括使用TF-Agents程式庫



    

    作者簡介
    
      Aurélien Géron 是機器學習顧問和教練。

曾經在Google任職，在2013年至2016年是YouTube的影片分類團隊主管。

他也是Wifirst創辦人(法國無線網際網路服務龍頭供應商)暨CTO(2002~2012)。

    

    目錄大綱
    
      前言

【第一部分　機器學習基本知識】

chapter 01　機器學習領域

chapter 02　端對端機器學習專案

chapter 03　分類

chapter 04　訓練模型

chapter 05　支援向量機

chapter 06　決策樹

chapter 07　整體學習與隨機森林

chapter 08　降維

chapter 09　無監督學習技術

【第二部分　神經網路與深度學習】

chapter 10　以 Keras 介紹人工神經網路

chapter 11　訓練深度神經網路

chapter 12　用 TensorFlow 來自製模型和進行訓練

chapter 13　使用 TensorFlow 來載入和預先處理資料

chapter 14　使用摺積神經網路來製作深度電腦視覺

chapter 15　使用 RNN 和 CNN 來處理序列

chapter 16　用 RNN 與 Attention 處理自然語言

chapter 17　使用自動編碼網路與 GAN 來進行表徵學習與生成學習

chapter 18　強化學習

chapter 19　大規模訓練與部署 TensorFlow 模型



附錄 A　習題解答

附錄 B　機器學習專案檢核表

附錄 C　SVM 對偶問題

附錄 D　Autodiff

附錄 E　其他流行的 ANN 結構

附錄 F　特殊資料結構

附錄 G　TensorFlow 圖

索引",https://cf-assets2.tenlong.com.tw/products/images/000/146/623/medium/9789865024345.jpg?1585273182
"Kali Linux 滲透測試工具｜花小錢做資安，你也是防駭高手, 3/e",陳明照,碁峰資訊,9789865023584,2019/12/25,"專為繁體中文環境而編寫的Kali工具書

這是一本專為繁體中文環境而編寫的Kali工具書，本書根據入門學習與滲透作業實務需要編寫。透過淺顯易懂的實例，解說如何活用弱點掃描工具，提昇測試作業效率，為架構安全的網路環境做最完善的準備。



專為駭客打造的Linux系統

Kali是一套專為滲透測試所發行的Linux版本。預載了500套左右的資安相關程式，涵蓋了漏洞分析、Web程序、密碼攻擊、無線攻擊、漏洞利用、嗅探/欺騙、逆向工程、壓力測試、數位取證等，這些工具除了是駭客必備之外，也是滲透測試工作不可或缺的輔助程式。



模擬駭客攻擊的測試手法，用實戰標準評估資安防護的程度

本書所講的漏洞主要著眼於資訊系統漏洞，因為資訊系統漏洞可以直接進行測試及評估，評估方式與駭客攻擊極為相似，滲透測試手法幾乎等同駭客攻擊，最能模擬真實的網路攻擊型態，以評估組織的資訊防護機制。



本書特色：

．以2019.2、2019.3版Kali為藍本而寫編

．支援多國語系作業及繁體中文輸入作業

．佐以實用Linux指令，減低入門學習障礙

．精挑常用滲透工具，提升實務作業效率

．內容兼具入門學習及滲透作業實務需要

．利用實例語法說明，工具應用清楚易懂

．設定及啟動OpenVAS，活用弱點掃描工具

．安裝及設定Nessus，強化漏洞挖掘火力

．配合最新版Metasploit修訂專章內容

．專為網站滲透提權的「一句話木馬」介紹

．因應網路變化，強化Wi-Fi及IPv6內容

．新增藍牙設備的滲透測試作業專章

．更豐富的暴力密碼破解內容與實例

<序>

日子過得好快，感覺第二版才剛發行，但其實已經是四年前的事了。這期間發生不少資安事件，遠的不說，單單國內就有幾宗大事件：WannaCry肆虐，連台積電也中槍；國內幾家機構受到DDoS攻擊；中華郵政、疾管局、臺北市政府及銓敘部的個資外洩事件；第一銀行的ATM遭駭。國際上的資安事件就更精采了，LinkedIn、Facebook、Yahoo及Google等大公司發生個資外洩、多家銀行及大型機構遭受攻擊。就在本書即將定稿之際，竟然又發生勒索病毒肆虐，衛生福利部及至少18間醫院遭到襲擊。

對滲透測試人員影響較深的事件則是「資通安全管理法」在2018年公布，2019年元月正式施行，筆者不是法律人，沒辦法判斷它的衝擊有多大，但無庸置疑，它對機關、企業鐵定造成極大震撼，依照「資通安全管理法施行細則」第４條第１項第２款，各機關依本法第９條委外辦理資通系統之建置、維運或資通服務之提供，選任及監督受託者時，應注意：受託者應配置充足且經適當之資格訓練、擁有資通安全專業證照或具有類似業務經驗之資通安全專業人員。這項要求正是資安人的契機。

除了不間斷的資安事件，Kali的更新未曾停歇，累積四年的改版，裡頭又加入了其他新工具，既有工具亦先後推出新版本，例如metasploit從4.0升到5.0、theHavester增加支援hunter.io、thc-Hydra可支援破解多主機上的帳密，為提供讀者最新資訊，本書確實有改版必要，相信當中有值得讀者期待的內容。

縱觀書市，相較於簡體中文書籍，滲透測試的正體中文書仍屬少數，畢竟簡體中文不是我們的原生語言，閱讀上仍有隔閡，筆者衷心期盼資通安全管理法施行之後能激勵國內的資安出版產業，讓國內的專家願意奉獻所長，為想進入滲透測試領域的人提供更有價值、觀念正確的學習教材。

筆者一向奉行國父孫中山先生「知難行易」的精神，本書是以「參考手冊」的角度編撰，著重操作的實用性，不會講述太多理論細節，希望本書能成為讀者執行滲透測試專案時的輔助指南，而非學習各種通訊協定的教科書。

最後，感謝碁峰編輯團隊的幫忙，多虧他們的協助方能提高本書的可讀性；感謝鼓勵我、體諒我的長官與同事們，才得以持續精進滲透技巧；感謝太座的鼓勵及支持，讓我不致失去對資訊技術的熱情；還要感謝許多網友的建議和指正，及時矯正筆者偏差的觀念，無法一一向您們致謝，謹借用陳之藩大師的話：要感謝的人太多了，就感謝天吧！

和其他資訊技術相比，滲透測試包含的內容更加廣泛，涉及多門專業領域，囿於時間、體力、精力及腦力，實難樣樣精通，謬誤之處，在所難免，敬請各位同好不吝指正。

知識因分享而偉大；旅程因你同行而精采。共勉~~



    

    作者簡介
    
      一位狂熱追求技術的資訊人，熟悉個人電腦硬體架構，擅於Assembly、C、Java、C#，養過病毒、寫過防毒，開發過許多應用程式。

2010年取得行政院國家資通安全會報技術服務中心公務人員資安職能評量「Web應用程式安全」類證書。2012年奉派參加技術服務中心舉辦的資安事件現場稽核人員培訓（滲透測試技巧訓練），因為底子深厚，學習速度比別人快，從此由安全應用程式開發跨進系統滲透測試領域。

2013年起即受任務指派方式對機關網站進行滲透測試，憑藉深厚的技術基楚及奇特的思考模式，歷次滲透測試皆有不錯成績，目前主要職務為新進人員安全程式開發培訓、數位鑑識暨滲透測試團隊成員、網站應用程式安全性評核，致力於協助機關提升資訊系統安全防護能力。

個人網站：http://atic-tw.blogspot.tw

    

    目錄大綱
    
      第1章｜Kali與滲透測試

第2章｜Kali安裝與設定

第3章｜關於Linux的基本操作

第4章｜補充滲透能量

第5章｜建立練習環境

第6章｜情報蒐集工具

第7章｜目標探測

第8章｜漏洞評估

第9章｜Web掃描

第10章｜社交工程

第11章｜資料庫探測與攻擊

第12章｜密碼破解

第13章｜封包監聽與篡改、提權工具

第14章｜持續控制

第15章｜Metasploit專章

第16章｜無線網路攻擊

第17章｜藍牙設備

第18章｜壓力測試

第19章｜終章",https://cf-assets2.tenlong.com.tw/products/images/000/143/398/medium/ACN035700.jpg?1576572796
Python 專家實踐指南｜搭乘專業開發者的學習便車 (The Hitchhiker's Guide to Python: Best Practices for Development),"Kenneth Reitz, Tanya Schlusser 著、楊尊一 譯",歐萊禮,9789864762859,2017/2/12,"<內容簡介>

”《Python專家實踐指南》以精煉的內容帶你巡禮Python宇宙“。

-Raymond Hettinger

卓越的Python核心開發者

”你一直期待這本書。慣例與最佳實踐的闡述對新手非常重要，而每個人均在某些事上是個新手。透過社群中專家的合作，展示開源的價值並分享最佳想法與實踐“。

-Eric Holshcer

Read the Docs網站（readthedocs.org）

準備好成為真正的Python專家嗎？本書提供Python社群成員的最佳實踐與常用工具資訊。打算參與開源專案或以Python應用創業的Python程式程式設計師，將會從此跨越基本並進入Python專家領域。

本書由上百位Python社群成員合作撰寫，內容分為三個部分。首先是學習如何設定與使用Python的編輯工具，然後是Python風格的範例程式，最後探索Python社群常用的函式庫。

‧學習風格、傳統、慣例與特性以撰寫最好的Python程式

‧解析從Python函式庫中挑選的開源程式碼範例

‧包裝與發佈Python程式碼的最佳實踐方式

‧探索Python的命令列、GUI與網頁應用程式使用者界面函式庫

‧學習系統管理員工具、C與C++函式庫介接及提升Python的速度

‧運用網路函式庫進行非同步工作、序列化與加密

‧檢視資料儲存與資料操控函式庫以及影像與聲音處理工具

<章節說明>

 第一篇 開始

chapter 01  挑選直譯器

chapter 02  正確安裝 Python

chapter 03  開發環境

第二篇 開發

chapter 04  撰寫好程式

chapter 05  閱讀好程式

chapter 06  發布好程式

第三篇 應用情境

chapter 07  使用者互動

chapter 08  程式管理與改進

chapter 09  軟體界面

chapter 10  資料處理

chapter 11  資料儲存

附錄A 額外註記

索引",https://cf-assets1.tenlong.com.tw/images/115112/medium/9789864762859.jpg
圖解！一次搞懂資料庫,小笠原種高,碁峰資訊,9789865024758,2020/4/22,"無論是工作或是日常生活中，幾乎所有人都會用到資料庫。特別是涉足IT 領域的讀者，了解資料庫應該會成為您的強大武器。



以技術麻瓜也能聽懂的方式，配合大量的圖說明資料庫設計與資料庫系統開發的概念



用對話的方式學習資料庫

本書將和喵太與大衛這兩名人物一起認識所有與資料庫相關的基礎知識，從「資料庫究竟是什麼」開始，一直到關聯式資料庫的基礎、使用資料庫的需求機制、設計方法與操作維護等。



以圖解的方式解說抽象的概念

認識資料庫的過程中最重要的並不是記住術語，而是要理解並學會概念、想法，與邏輯。若是學會了這些，自然而然就會記住相關的術語。因此，本書使用大量的圖示解說抽象的資料庫概念，讓讀者更容易掌握資料庫的本質。





誰適合閱讀本書：

．想要了解資料庫到底是什麼

．會使用到SQL

．開發程式時，需要應用資料庫

 

<序>

聽聞「資料庫」一詞，應該很少人能流暢地回答資料庫是什麼，以及它的用途。不只是一般人，即便在IT業界工作，對於自己專業以外的內容也可能一無所知。

現代的系統幾乎都使用了資料庫，可以算是我們生活中不可或缺的工具。然而它的印象卻十分模糊，就像是蒙著神秘面紗一般。本書將和喵太與大衛這兩名人物一起認識所有與資料庫相關的內容，從「資料庫究竟是什麼」開始，一直到關係資料庫的基礎、順利使用資料庫的需求機制、設計方法與操作維護等。

在學習過程中最重要的並不是記住專業用語，而是要理解並學會概念、想法，與邏輯。若是學會了這些，自然就會記住專業用語。此本書中盡可能不濫用術語，並使用大量圖示解說，讓讀者更容易掌握資料庫的本質。稍微感到困難的部分也可以跳過。最重要的是要理解資料庫的整體概念。

無論是工作上或是日常生活中，幾乎所有人都會用到資料庫。特別是涉足IT領域的對象，了解資料庫應該會成為您的強大武器。請一定要和喵太、大衛一起愉快探索資料庫的世界。



    

    作者簡介
    
      小笠原種高

技術作家、插畫家、也是攝影師。從事領域跨足系統開發、網站架構企劃、經營管理、顧問。目前透過雜誌與書籍發表文章，也製作影片。

個人網站：http://www.mofukabur.com

    

    目錄大綱
    
      Part 1｜資料庫的基本概念

Chapter 1 資料庫是什麼｜生活中的資料與資料庫

1-1 資料庫是什麼？

1-2 資料庫的構造與種類

1-3 資料庫怎麼使用？

Chapter 2 來學習關聯式資料庫吧｜關聯式資料庫的特徵與架構

2-1 關聯式資料庫的特徵

2-2 關聯式資料庫的關聯性與擴充性

2-3 與程式、非關聯式的差異

2-4 關聯式資料庫的架構

2-5 準備好資料的存放場所

2-6 避免重複群與重複記錄

Chapter 3 嘗試操作資料庫Ⅰ｜資料的彙整、檢索與操作

3-1 可以在資料庫中執行的事

3-2 從資料庫取出資料的方法

3-3 組合資料表後取出

3-4 演算之後取出

Chapter 4 嘗試操作資料庫Ⅱ｜保護資料的技術與便利的技術

4-1 保護資料的機制

4-2 資料類型與限制

4-3 交易處理

4-4 鎖定與死結

4-5 操作資料庫的技術

4-6 索引

4-7 檢視

4-8 預存程序

4-9 觸發

Part 2｜資料庫的應用

Chapter 5 來看看資料庫設計的流程｜設計與綱要

5-1 資料庫系統是什麼？

5-2 系統開發的流程

5-3 什麼是資料庫設計？

5-4 資料庫設計的流程

5-5 實體關聯模型

5-6 關於資料庫設計，初學者要記得的事

Chapter 6 來建立資料庫吧｜從安裝到啟動

6-1 資料庫伺服器

6-2 資料庫的操作

6-3 實際安裝資料庫

6-4 使用者帳戶管理

6-5 驅動程式與函式庫

Chapter 7 開始運用資料庫｜備份、維護運用

7-1 使用資料庫時要注意的事

7-2 讓資料庫正確運作

7-3 讓資料庫安全地運作

7-4 持續運作

Chapter 8 來使用資料庫吧｜資料庫應用程式的機制

8-1 如果要建立資料庫系統

8-2 生活中的應用與資料庫的關係",https://cf-assets2.tenlong.com.tw/products/images/000/147/244/medium/9789865024758.jpg?1587370352
乾脆一次搞清楚：最完整詳細網路協定全書,劉超,深智數位,9789865501396,2020/7/21,"本書有以下幾個特點。

第一，會從身邊經常見到的事情出發，用講故事的方式來說明各種協定，然後慢慢擴大到不熟悉的領域。舉例來說，每個人都會使用檢視IP 位址的指令，我們就從這個指令開始，說明一些相關概念。每個人都在大學宿舍組過簡單的網路來打電動，我們就從宿舍網路有關的最簡單的網路概念開始講，然後說到辦公室網路，再說到日常常用的與上網、購物、視訊下載等活動相關的網路通訊協定，最

後才說到最陌生的資料中心。說到這裡的時候，很多概念已經在前面的「宿舍」和「辦公室」的實例中都出現過，因此更容易接受和了解。

第二，說明網路通訊協定時會更加接近使用場景，將各個層次的關係串連起來，而非孤立地說明某個概念。常見的電腦網路課程常常會按照網路分層，一層一層地講，卻很少講層與層之間的關係。舉例來說，我們在學習路由式通訊協定的時候，在真實場景中，這麼多的演算法和二層是什麼關係呢？和四層又是什麼關係呢？再舉例來說，我們在真實的網路通訊中造訪一個網站、進行一次支付，那麼在TCP 三次驗證的時候，IP 層在做什麼？ MAC 層在做什麼？這些內容本書都會逐一說明。

第三，在說明完各個層次的協定之後，會說明如何在目前熱門領域（例如雲端運算、容器和微服務）中使用這些協定。透過學習本書，讀者一方面可以了解這些網路通訊協定的真實應用場景，另一方面也可以透過上手使用雲端運算、容器、微服務來進一步加深對於網路通訊協定的了解。

透過學習本書，讀者一方面可以了解這些網路通訊協定的真實應用場景，另一方面也可以透過上手使用雲端運算、容器、微服務來進一步加深對於網路通訊協定的了解。



    

    作者簡介
    
      劉超

上海交通大學畢業，曾就職於戴爾、CCTV證券資訊頻道、惠普、華為，目前就職於網易杭州研究院，擔任雲端運算技術部首席架構師，從事容器、Kubernetes和微服務的架構工作。

    

    目錄大綱
    
      01通訊協定概述

1.1為什麼要學習網路通訊協定

1.2 網路分層的真實含義

1.3 ifconfig：熟悉又陌生的命令列

1.4 DHCP 與PXE：IP 位址是怎麼來的，又是怎麼沒的

02 從二層到三層

2.1 從實體層到MAC 層：如何在宿舍裡自己網路拓樸玩連線遊戲

2.2 交換機與VLAN：辦公室太複雜，我要回學校

2.3 ICMP 與ping：投石問路的偵察兵

2.4 世界這麼大，我想出閘道：歐洲十國游與玄奘西行

2.5 路由式通訊協定：「西出閘道無故人」「敢問路在何方」

03 最重要的傳輸層

3.1 UDP：雖然簡單但是可以訂製化

3.2 TCP（上）：雖然複雜，使用起來卻輕鬆

3.3 TCP（下）：西行必定多妖孽，恆心智慧消磨難

3.4 socket：Talk is cheap, show me the code

04 最常用的應用層

4.1 HTTP：看個新聞原來這麼麻煩

4.2 HTTPS：點外賣的過程原來這麼複雜

4.3 串流媒體協定：如何在直播裡看到帥哥美女

4.4 P2P 協定：下載電影，分散式協定速度快

05 陌生的資料中心

5.1 DNS：網路世界的地址簿

5.2 HTTPDNS：網路世界的地址簿也會指錯路

5.3 CDN：你去超商取過快遞嗎

5.4 資料中心：我是開發廠商，自己拿地蓋別墅

5.5 VPN：朝中有人好做官

5.6 行動網路：去巴塞隆納，手機也上不了「臉書」

06 雲端運算中的網路

6.1 雲端網路：自己拿地成本高，購買公寓更靈活

6.2 軟體定義網路：共用基礎設施的社區物業管理辦法

6.3 雲端網路之安全：雖然不是土豪，也需要基本保障

6.4 雲端網路之QoS：室友瘋狂下電影，我該怎麼辦

6.5 雲端網路之隔離GRE、VXLAN：雖然住一個社區，也要保護隱私

07 容器技術中的網路

7.1 容器網路：來去自由的日子，不買公寓去合租

7.2 容器網路之Flannel：每人一畝三分地

7.3 容器網路之Calico：為了高效說出善意的謊言

7.4 RPC 概述：遠在天邊，近在眼前

08 微服務相關協定

8.1 以XML 為基礎的SOAP：不要說NBA，請說美國職業籃球聯賽

8.2 以JSON 為基礎的RESTful 介面協定：我不關心過程，請給我結果

8.3 二進位類別RPC 協定：還是叫NBA，總說全稱多費勁

8.4 跨語言類別RPC 協定：交流之前，雙方先交換一下專業術語表

09 網路通訊協定知識串講

9.1 知識串講：用「雙11」的故事串起網路通訊協定的碎片知識（上）

9.2 知識串講：用「雙11」的故事串起網路通訊協定的碎片知識（中）

9.3 知識串講：用「雙11」的故事串起網路通訊協定的碎片知識（下）

9.4 架設一個網路實驗環境：授人以魚不如授人以漁",https://cf-assets2.tenlong.com.tw/products/images/000/150/185/medium/%E6%B7%B1%E6%99%BA-DM2028-%E7%AB%8B%E9%AB%94%E6%9B%B8.jpg?1594112210
無瑕的程式碼 番外篇－專業程式設計師的生存之道 (The Clean Coder: A Code of Conduct for Professional Programmers),Robert C. Martin 著、博碩文化 譯、陳錦輝 審校,博碩文化,9789862017883,2013/8/26,"<本書特色>



要介紹這本書的特色，就不得不介紹《無瑕的程式碼Clean Code》一書，因為兩書是互補的。

在該書中，作者教您的是如何做事（也就是如何寫出Clean Code）。

而本書中，作者教您的是如何做人（也就是如何做個Clean Coder）。



要想成為一位Clean Coder，可不簡單，絕不是只學會寫Clean Code就可以了。

還需要把寫Clean Code融入到真實的職場生涯當中。而這就牽涉到了職場求生術這類的議題。



在工作中撰寫Clean Code，初期一定會遇到一些困難，本書將教導您如何應付這些困難，說服上司、老闆、客戶、夥伴以及自己，以寫Clean Code的精神來應付開發專案時所遭遇的各種情況，才是正道。



<本書簡介>



在職場上，不可避免地會被要求趕工、加功能，即便大師也不例外，遇到這些情況，你必須學會Say No，同樣地，你也必須學會Say Yes，只有謹慎地Say Yes，別人才會對你有所尊重，相信你是一位專業人士，如此當你在Say No時，才會更有分量，更能說服對方。



本書作者Bob大叔，Robert C. Martin，是一位軟體大師，也是一位著名作家，其著作《Agile Software Development: Principles, Patterns, and Practices》曾獲得有IT奧斯卡獎之稱──Jolt震撼年度大獎。





<本書適用對象>



本書是Bob大叔近期的新作，在本書中，Bob大叔以親身經歷及輔導過的案例作為範例，以說故事的方式來描述各種情景。如果你寫程式專案超過一年，相信這些情景你一定不陌生，那都是軟體開發過程常遇到的真實情境。



不同的是，以往你只會做出一種回應，因此事態的發展只有一條路徑，而最終就陷入了一種悲慘的循環。那是個什麼樣的循環呢？ 

 


	在面對一個新的專案或功能時，沒有一套科學的辦法來進行時程的預估〈老是估不準〉。 
	開發過程中，老是〈無法集中專注力〉，被這樣的事、那樣的事所影響，工作效率極差。
	由於工作效率差，所以跟不上進度，〈壓力〉來了，只好加班熬夜來趕工。也〈沒時間寫測試〉。
	加班熬夜寫出的程式，品質比較差，常常出現bug。
	由於沒有寫測試，沒有一套自動化測試，所以〈除錯〉又花了許多時間，導致要加更多的班來進行除錯。
	在接近專案截止日之前，終於快要完工了，但是客戶又要求〈加入新功能〉。但也給你更多的時間來開發，使你無法拒絕。
	由於大多數程式碼都是加班趕出來的，品質非常差，因此在擴充功能時難以修改。只好回頭做〈重構〉。
	由於加班趕工沒做好自動化測試，所以當加入新功能後，對於〈原有功能是否因此出錯了？〉，沒有把握，所以必須花做更多的時間在測試。




現在又回到了1或2，直到客戶不再要求加入新功能為止。


	已經沒時間測試了，在最終的截止日期還是把結果給發佈出去了。〈交給客戶去測吧〉。客戶必須測完後才會交付尾款。
	由於沒有進行完整的測試，因此，客戶發現了bug，所以要求修改，同時也對您所推出的最後版本產生懷疑，因此使得〈專案遲遲無法結案，無法收到尾款〉。






現在又回到了5，直到有天客戶的常用功能都OK了，或者你再也受不了而離職，甚至放棄收取尾款為止。



即便離職或放棄尾款也不能解決問題，因為你還是必須接新的專案，而這又回到了1。



以上的循環是否讓您感覺生活品質很差呢？是不是懷疑自己走錯行了呢？其實不是這樣的，問題在於你沒有找對方法來處理每一個步驟的應對之策。



這本書，從每個您所熟悉的故事中，發展出不同的分支，教導您如果這樣做，結果會是怎樣？如果那樣做，結局又會是怎樣？Bob大叔開的是一間顧問公司，寫程式也有四十幾年了，因此，他提出的做法完全是經驗的累積，經得起實際的考驗。如果您有疑慮，那大可不必一次全部都應用到同一個專案中，一次針對某一項來修改應對之策，您會發現，即便只是針對某一項來作修正，都會讓您獲益匪淺。



本書大多數的篇幅都在說故事，以說故事的方式來論理，當中有大約四個章節是和技術高度相關的，當中包含TDD、驗收測試、測試策略、協作、工具等等。關於這些議題，本書並未提供程式碼，而是以方法介紹為主軸來進行介紹，若你想看看實際程式碼的示範，可以參閱《無瑕的程式碼》一書。



PS：《無瑕的程式碼》上市後，連續三月勇奪天瓏資訊圖書銷售冠軍，非常值得一讀。http://www.tenlong.com.tw/items/9862017058?item_id=570049





<兩書閱讀方式>



這兩本姊妹書並沒有固定的閱讀順序，

如果您先讀本書《無瑕的程式碼──番外篇 The Clean Coder》，但對於實際的Clean Code有所好奇的話，可再去翻閱《無瑕的程式碼Clean Code》。

如果您先讀的是《無瑕的程式碼Clean Code》，但對於怎樣把Clean Code帶入職場有所疑問的話，則本書將為您解惑。



雖然單一本書已經能夠提升您的職場價值。但對於一位專業的程式設計師而言，最好是兩本書都讀過，如此才能發揮最大的效用。

 

<章節目錄>

說在前頭　　　　 　　　　　　　　　（Pre-Requisite Introduction）

Chapter 1 專業主義　　　　　　　　（Professionalism）

Chapter 2 說「不」　　　　　　　　（Saying No）

Chapter 3 說「是」　　　　　　　　（Saying Yes）

Chapter 4 寫程式　　　　　　　　　（Coding）

Chapter 5 測試驅動開發　　　　　　（Test Driven Development）

Chapter 6 練習　　　　　　　　　　（Practicing）

Chapter 7 驗收測試　　　　　　　　（Acceptance Testing）

Chapter 8 測試策略　　　　　　　　（Testing Strategies）

Chapter 9 時間管理　　　　　　　　（Time Management）

Chapter 10 預估　　　　　　　　　　（Estimation）

Chapter 11 壓力　　　　　　　　　　（Pressure）

Chapter 12 協作　　　　　　　　　　（Collaboration）

Chapter 13 團隊與專案　　　　　　　（Teams and Projects）

Chapter 14 輔導、學徒期與工藝典範　（Mentoring, Apprenticeship, and Craftsmanship）

Appendix A 工具　　　　　　　　　　（Tooling）

 

<作者簡介>

Robert C. Martin：人稱Uncle Bob，程式設計經驗超過40年，Agile Software（敏捷軟體開發）的提倡者之一。創立Object Mentor，這是一間專注於C ++、Java物件導向、模式、UML、敏捷方法學和極限程式設計的顧問諮詢公司。

在這些領域，作者撰寫了相當多的名著，其中，又以獲得有IT奧斯卡獎之稱──Jolt震撼年度大獎的

《Agile Software Development: Principles, Patterns, and Practices》

《敏捷軟體開發：原則、樣式及實務》

最為知名。該得獎年度，Jolt僅頒布通用類、技術類各一本著作得獎，通用類由此書獲得大獎，而技術類書籍則由另一本廣為人知的《Thinking in Java（第三版）》獲得。",https://cf-assets1.tenlong.com.tw/images/77600/medium/PG21334.JPG
"深入淺出 C#, 3/e (Head First C#, 3/e)","Jennifer Greene, Andrew Stellman 著、楊仁和 譯",歐萊禮,9789863470731,2014/4/20,"<內容簡介>

第三版

特別涵蓋 Windows Phone 專案



讓你的物件充分運用抽象化與繼承的強大威力

C#、XAML 與 .NET 編程實務的學習指南

探索 MVVM（Model-View-ViewModel）設計模式的絕妙奧義



『假如你想要以趣味橫生的方式深入學習 C#，這本書正是為你量身訂製的。』

— Andy Parker，C# 程式設計新手



『《深入淺出 C#》將引領各種背景的初學者一窺 C# 與 .NET Framework 的堂奧，並與之建立一段富有成效的長遠關係。』

— Chris Burrows，Microsoft C# Compiler 團隊的開發者



『《深入淺出 C#》讓我馬上能夠充分掌控我的第一個大型 C# 開發專案 — 讚啦，強力推薦。』

— Shalewa Odusanya，Technical Account Manager，Google



你將從本書學到什麼？

《深入淺出 C#》是一段有關以 C#、XAML、.NET Framework 與 Visual Studio IDE 進行編程的完整學習體驗。本書專為你的大腦量身訂製，從第一章開始便讓你充分融入，全心參與，在當中，你將打造一支功能完整的電玩遊戲。之後，你會學到有關類別與物件導向編程、繪製圖形與動畫、使用 LINQ 查詢資料以及將資料序列化到檔案的一切知識。另外，你將透過建造真實專案、實際打造遊戲及解決謎題來學習各種知識。完成本書閱讀之際，你將成為一位值得信賴的 C# 程式設計師，並且能夠充分地享受這項工作所帶來的樂趣。



這本書為何如此與眾不同？

我們認為你的時間寶貴，不應該將它浪費在與新概念周旋不下的窘境中。運用認知科學與學習理論的最新研究成果，《深入淺出 C#》採取專為大腦運作而設計的豐富視覺化風格，而不是令你昏昏欲睡的冗贅敘述。

<章節目錄>

 

Chapter 1　開始使用 C#：快速打造酷炫應用程式！ 

Chapter 2　程式碼探究：刨根究底 

Chapter 3　物件導向：讓程式碼合理化 

Chapter 4　型別與參考：知道你的資料在哪裡嗎？ 

C# 實驗一：賽狗場的一天 

Chapter 5　封裝：保護隱私 

Chapter 6　繼承：物件族譜 

Chapter 7　介面與抽象類別：讓類別信守承諾 

Chapter 8　列舉與群集：儲存大量資料 

Chapter 9　檔案讀寫：為我儲存最後的位元組！ 

C# 實驗二：絕命大追擊 

Chapter 10　使用 XAML 設計 Windows Store App：提升 App 的層次 

Chapter 11　XAML、檔案、I/O 與資料合約序列化：正確寫入檔案 

Chapter 12　例外處理：救火生涯催人老 

Chapter 13　Captain Amazing：物件之死 

Chapter 14　利用 LINQ 查詢資料及建構 App：掌控你的資料 

Chapter 15　事件與委託：程式碼在你的背後做什麼？ 

Chapter 16　使用 MVVM 設計模式架構 App：秀外慧中的良好 App 

C# 實驗三：入侵者 

Chapter 17　紅利專案！打造 Windows Phone App

附錄：C# 遺珠",https://cf-assets1.tenlong.com.tw/images/81608/medium/A380-01.jpg
"網頁應用程式設計｜使用 Node 和 Express, 2/e (Web Development with Node and Express, 2/e)","Ethan Brown 著
          賴屹民 譯",歐萊禮,9789865025311,2020/6/22,"運用JavaScript工具堆疊



「Ethan太了不起了，因為他不會預設讀者已經知道什麼，或是不知道什麼。很開心看到他不僅成功地介紹NodeJS/Express生態系統，也花一些時間幫初學者介紹web開發概念，例如持久保存、中介函式，以及Git。」

—Alejandra Olvera-Novack

AWS Developer Relations



使用Node/JavaScript開發堆疊的主要工具Express來開發動態web應用程式。在這本新版的書中，作者Ethan Brown藉著開發一個app來教你Express 5的基本技術。這本指南涵蓋了伺服器端算繪(SSR)以及單頁app(SPA)API開發的每個細節。



Express在穩健的框架和完全不使用框架之間取得巧妙的平衡，讓你可以自由地選擇架構。熟悉JavaScript的前端與後端工程師也可以學會使用Express最佳實踐法，建構多頁和混合式web app。現在就翻開這本書，探索新的web開發方法吧！



• 建立模板來算繪動態資料

• 瞭解請求和回應物件、中介函式，以及URL路由

• 模擬生產環境進行測試

• 持久保存資料，使用MongoDB文件資料庫，以及使用PostgreSQL和關聯資料庫

• 用API來提供資源給其他程式使用

• 用身分驗證、授權與HTTPS建立安全的app

• 整合社交媒體、地理定位及其他應用

• 制定啟動與維護app的計畫

• 學習重要的除錯技巧



    

    作者簡介
    
      Ethan Brown 是VMS的技術總監，負責VMSPro的架構與實作、雲端軟體決策支援、風險分析，以及大型專案的創意構思。Ethan有20多年的程式設計經驗，包括嵌入式系統和web，他已經認定JavaScript堆疊是未來的web平台。

    

    目錄大綱
    
      chapter 01 Express 簡介

chapter 02 開始使用 Node

chapter 03 使用 Express 來節省時間

chapter 04 整理

chapter 05 品質確認

chapter 06 請求與回應物件

chapter 07 使用 Handlebars 來製作樣板

chapter 08 表單處理

chapter 09 Cookie 與期程

chapter 10 中介軟體

chapter 11 傳送 Email

chapter 12 生產考量

chapter 13 持久保存

chapter 14 路由

chapter 15 REST API 與 JSON

chapter 16 靜態內容

chapter 17 用 Express 實作 MVC

chapter 18 安全

chapter 19 整合第三方 API

chapter 20 除錯

chapter 21 開張

chapter 22 維護

chapter 23 其他資源",https://cf-assets2.tenlong.com.tw/products/images/000/149/235/medium/A549.jpg?1591938831
ASP.NET Core 3.x MVC 跨平台範例實戰演練,聖殿祭司 奚江華,碁峰資訊,9789865025991,2020/9/11,"「DotNet聖殿祭司」以多年程式開發經驗，將業界的專業開發技巧融入於書中！

ASP.NET Core是跨平台的.NET框架，除了跨平台特性，整個框架底層更是高度重新大改寫，導入許多軟工Design Pattern與Principals原則，讓整個框架程式組織、運作與耦合度達到前所未有新高度。而ASP.NET Core中最重要的四大天王：Dependency Injection相依性注入、Configuration組態系統、Hosting與Middleware，更是貫穿整個應用程式設計與執行，可以說掌握此四者便掌握了ASP.NET Core核心精髓。無論新手與老手，本書皆能循序漸進地引導您，一步步深入ASP.NET Core精華的奧義殿堂。



精選章節，讓您Do Less, Get More，短時間內培養出即戰力，本書內容有：

＊ Visual Studio 2019工具安裝、ASP.NET Core MVC開發環境建立與程式部署

＊ 用CLI命令及Visual Studio Code建立ASP.NET Core專案，體驗真正跨平台開發模式

＊ 介紹MVC架構如何三分天下，精解Model、View與Controller三者職責與運作

＊ 以DI相依性注入設計抽象介面與實作，達成IoC控制反轉與鬆散耦合

＊ Configuration組態與Options Pattern選項模式共舞

＊ Model / Scaffolding CRUD / LINQ與Entity Framework Core資料庫存取

＊ View / Partial View / Tag Helpers / HTML Helpers / View Component / Layout功能解析

＊ 說明MVC中如何整合Bootstrap前端開發框架，有效建構RWD響應式網站

＊ 全面掌握Razor語法，提升View頁面的智慧與判斷力

＊ 用開源Chart.js及JSON製作HTML5互動式商業統計圖表

＊ 以jQuery Ajax / Web API / JSON三劍客建立輕量級高效能網站

＊ EF Core程式優先、資料庫存取與Transaction交易完全制霸

＊ 將ASP.NET Core應用程式部署至Microsoft Azure雲端平台

＊ 適用ASP.NET Core 3.1 & 3.0



    

    作者簡介
    
      *碼魔法軟體學院站長 www.codemagic.com.tw

*DotNet開發聖殿Blog版主 blog.sina.com.tw/dotnet/

*曾歷任台灣微軟MSDN, TechED, TechDay研討會講師

*軟體開發技術顧問



歡迎讀者與技術圈的朋友前來交流!

「CodeMagic碼魔法FB」https://www.facebook.com/CodeMagicTw/

    

    目錄大綱
    
      CH1 　.NET Core 與 ASP.NET Core 技術總覽

CH2 　ASP.NET Core MVC 概觀與 VS 2019 開發環境

CH3 　用 CLI 及 Visual Studio Code 建立與管理 .NET Core 專案

CH4 　ASP.NET Core 3.1 框架與基礎服務

CH5 　掌握 Controller / View / Model / Scaffolding / Layout 五大元素

CH6 　Bootstrap 4 網頁美型彩妝師

CH7 　用 Razor、Partial View 及 C# 8.0 語法增強 View 戰鬥力

CH8 　以 Chart.js 及 JSON 繪製 HTML5 Dashboard 商業統計圖表

CH9 　以 Web API、JSON 和 Ajax 建立前後端服務分離架構

CH10　用 Tag Helpers 標籤協助程式設計 Razor View 檢視

CH11　以 HTML Helpers 製作 CRUD 資料庫讀寫電子表單

CH12　用 View Component 建立可重複使用的檢視元件

CH13　以 Dependency Injection 相依性注入達成 IoC 控制反轉

CH14　Configuration 組態及 Options Pattern 選項模式

CH15　Entity Framework Core 資料庫存取與 Transaction 交易

CH16　EF Core - Code First 程式優先、DbContext 與 CLI 命令工具

CH17　將 ASP.NET Core 應用程式部署到 Microsoft Azure 雲端

附錄A　Action 回傳的 Action Result 動作結果類型",https://cf-assets2.tenlong.com.tw/products/images/000/152/153/medium/AEL024000.jpg?1598952871
